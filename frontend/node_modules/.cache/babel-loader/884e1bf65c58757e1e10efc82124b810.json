{"ast":null,"code":"var _jsxFileName = \"/Users/lesleycheung/Desktop/agile/agileproject/frontend/src/pages/TrainingPage/components/CertifyingBodyDropdown.js\";\nimport React from \"react\";\nimport Dropdown from \"./Dropdown\";\nexport default class CertifyingBodyDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: [{\n        id: 0,\n        title: \"SAFe®\",\n        selected: true,\n        key: \"accounts\"\n      }, {\n        id: 1,\n        title: \"PMI\",\n        selected: true,\n        key: \"accounts\"\n      }, {\n        id: 2,\n        title: \"Scrum Alliance\",\n        selected: true,\n        key: \"accounts\"\n      }, {\n        id: 3,\n        title: \"Scrum.org\",\n        selected: true,\n        key: \"accounts\"\n      }]\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  toggleSelected(id, key) {\n    const selectedAccounts = [];\n    let temp = this.state[key];\n    temp[id].selected = !temp[id].selected;\n    this.setState({\n      [key]: temp\n    });\n    this.state.accounts.forEach(account => {\n      if (account.selected === true) {\n        selectedAccounts.push(account.title);\n      }\n    });\n    this.props.dispatch({\n      type: \"SET_ACCOUNTS_FILTER\",\n      accounts: selectedAccounts\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"Course Type\",\n      list: this.state.accounts,\n      toggleItem: this.toggleSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/agile/agileproject/frontend/src/pages/TrainingPage/components/CertifyingBodyDropdown.js"],"names":["React","Dropdown","CertifyingBodyDropdown","Component","constructor","props","state","accounts","id","title","selected","key","toggleSelected","bind","selectedAccounts","temp","setState","forEach","account","push","dispatch","type","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,sBAAN,SAAqCF,KAAK,CAACG,SAA3C,CAAqD;AAClEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,OAFT;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,GAAG,EAAE;AAJP,OADQ,EAOR;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,KAFT;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAPQ,EAaR;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,gBAFT;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAbQ,EAmBR;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,WAFT;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAnBQ;AADC,KAAb;AA4BA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACJ,EAAD,EAAKG,GAAL,EAAU;AACtB,UAAMG,gBAAgB,GAAG,EAAzB;AACA,QAAIC,IAAI,GAAG,KAAKT,KAAL,CAAWK,GAAX,CAAX;AACAI,IAAAA,IAAI,CAACP,EAAD,CAAJ,CAASE,QAAT,GAAoB,CAACK,IAAI,CAACP,EAAD,CAAJ,CAASE,QAA9B;AACA,SAAKM,QAAL,CAAc;AACZ,OAACL,GAAD,GAAOI;AADK,KAAd;AAGA,SAAKT,KAAL,CAAWC,QAAX,CAAoBU,OAApB,CAA6BC,OAAD,IAAa;AACvC,UAAIA,OAAO,CAACR,QAAR,KAAqB,IAAzB,EAA+B;AAC7BI,QAAAA,gBAAgB,CAACK,IAAjB,CAAsBD,OAAO,CAACT,KAA9B;AACD;AACF,KAJD;AAKA,SAAKJ,KAAL,CAAWe,QAAX,CAAoB;AAClBC,MAAAA,IAAI,EAAE,qBADY;AAElBd,MAAAA,QAAQ,EAAEO;AAFQ,KAApB;AAID;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,QAFnB;AAGE,MAAA,UAAU,EAAE,KAAKK,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AA5DiE","sourcesContent":["import React from \"react\";\nimport Dropdown from \"./Dropdown\";\n\nexport default class CertifyingBodyDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: [\n        {\n          id: 0,\n          title: \"SAFe®\",\n          selected: true,\n          key: \"accounts\",\n        },\n        {\n          id: 1,\n          title: \"PMI\",\n          selected: true,\n          key: \"accounts\",\n        },\n        {\n          id: 2,\n          title: \"Scrum Alliance\",\n          selected: true,\n          key: \"accounts\",\n        },\n        {\n          id: 3,\n          title: \"Scrum.org\",\n          selected: true,\n          key: \"accounts\",\n        },\n      ],\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  toggleSelected(id, key) {\n    const selectedAccounts = [];\n    let temp = this.state[key];\n    temp[id].selected = !temp[id].selected;\n    this.setState({\n      [key]: temp,\n    });\n    this.state.accounts.forEach((account) => {\n      if (account.selected === true) {\n        selectedAccounts.push(account.title);\n      }\n    });\n    this.props.dispatch({\n      type: \"SET_ACCOUNTS_FILTER\",\n      accounts: selectedAccounts,\n    });\n  }\n\n  render() {\n    return (\n      <Dropdown\n        title=\"Course Type\"\n        list={this.state.accounts}\n        toggleItem={this.toggleSelected}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}