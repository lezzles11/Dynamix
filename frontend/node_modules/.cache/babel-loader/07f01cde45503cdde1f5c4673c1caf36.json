{"ast":null,"code":"var _jsxFileName = \"/Users/lesleycheung/Desktop/agile/frontend/src/pages/TrainingPage/Filters.js\";\nimport React, { Component, PropTypes } from \"react\";\n\nclass Filters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filters: {}\n    };\n\n    this.notifyChange = () => {\n      this.props.onChange(this.state.filters);\n    };\n\n    this.updateFilter = (name, value) => {\n      this.setState({\n        filters: { ...this.state.filters,\n          [name]: value\n        }\n      }, this.notifyChange);\n    };\n  }\n\n  getChildContext() {\n    return {\n      updateFilter: this.updateFilter\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default Filters;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/agile/frontend/src/pages/TrainingPage/Filters.js"],"names":["React","Component","PropTypes","Filters","state","filters","notifyChange","props","onChange","updateFilter","name","value","setState","getChildContext","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADsB;;AAAA,SAG9BC,YAH8B,GAGf,MAAM;AACnB,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKJ,KAAL,CAAWC,OAA/B;AACD,KAL6B;;AAAA,SAO9BI,YAP8B,GAOf,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,WAAKC,QAAL,CACE;AACEP,QAAAA,OAAO,EAAE,EAAE,GAAG,KAAKD,KAAL,CAAWC,OAAhB;AAAyB,WAACK,IAAD,GAAQC;AAAjC;AADX,OADF,EAIE,KAAKL,YAJP;AAMD,KAd6B;AAAA;;AAgB9BO,EAAAA,eAAe,GAAG;AAChB,WAAO;AACLJ,MAAAA,YAAY,EAAE,KAAKA;AADd,KAAP;AAGD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKP,KAAL,CAAWQ,QAAjB,CAAP;AACD;;AAxB6B;;AA2BhC,eAAeZ,OAAf","sourcesContent":["import React, { Component, PropTypes } from \"react\";\n\nclass Filters extends Component {\n  state = { filters: {} };\n\n  notifyChange = () => {\n    this.props.onChange(this.state.filters);\n  };\n\n  updateFilter = (name, value) => {\n    this.setState(\n      {\n        filters: { ...this.state.filters, [name]: value },\n      },\n      this.notifyChange\n    );\n  };\n\n  getChildContext() {\n    return {\n      updateFilter: this.updateFilter,\n    };\n  }\n\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}