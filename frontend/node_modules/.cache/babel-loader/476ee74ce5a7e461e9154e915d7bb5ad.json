{"ast":null,"code":"var _jsxFileName = \"/Users/lesleycheung/Desktop/agile/frontend/src/pages/TrainingPage/components/SortDropdown.js\";\nimport React from \"react\";\nimport Dropdown from \"./Dropdown\";\nexport default class SortDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortByOptions: [{\n        id: 0,\n        title: \"Date\",\n        selected: true,\n        key: \"sortByOptions\"\n      }, {\n        id: 1,\n        title: \"Length\",\n        selected: false,\n        key: \"sortByOptions\"\n      }]\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  toggleSelected(id, key) {\n    this.state.sortByOptions.map(option => option.selected = false);\n    let temp = this.state[key];\n    temp[id].selected = true;\n    this.setState({\n      [key]: \"hi\"\n    });\n\n    if (this.state[key][id].title === \"Date\") {\n      this.props.dispatch({\n        type: \"SORT_BY_DATE\"\n      });\n    } else if (this.state[key][id].title === \"Amount\") {\n      this.props.dispatch({\n        type: \"SORT_BY_AMOUNT\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      title: \"Order By\",\n      list: this.state.sortByOptions,\n      toggleItem: this.toggleSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/agile/frontend/src/pages/TrainingPage/components/SortDropdown.js"],"names":["React","Dropdown","SortDropdown","Component","constructor","props","state","sortByOptions","id","title","selected","key","toggleSelected","bind","map","option","temp","setState","dispatch","type","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,CACb;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,MAFT;AAGEC,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,GAAG,EAAE;AAJP,OADa,EAOb;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,QAAQ,EAAE,KAHZ;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAPa;AADJ,KAAb;AAgBA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACJ,EAAD,EAAKG,GAAL,EAAU;AACtB,SAAKL,KAAL,CAAWC,aAAX,CAAyBO,GAAzB,CAA8BC,MAAD,IAAaA,MAAM,CAACL,QAAP,GAAkB,KAA5D;AACA,QAAIM,IAAI,GAAG,KAAKV,KAAL,CAAWK,GAAX,CAAX;AACAK,IAAAA,IAAI,CAACR,EAAD,CAAJ,CAASE,QAAT,GAAoB,IAApB;AACA,SAAKO,QAAL,CAAc;AACZ,OAACN,GAAD,GAAO;AADK,KAAd;;AAGA,QAAI,KAAKL,KAAL,CAAWK,GAAX,EAAgBH,EAAhB,EAAoBC,KAApB,KAA8B,MAAlC,EAA0C;AACxC,WAAKJ,KAAL,CAAWa,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB;AACD,KAFD,MAEO,IAAI,KAAKb,KAAL,CAAWK,GAAX,EAAgBH,EAAhB,EAAoBC,KAApB,KAA8B,QAAlC,EAA4C;AACjD,WAAKJ,KAAL,CAAWa,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAApB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,aAFnB;AAGE,MAAA,UAAU,EAAE,KAAKK,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AA5CuD","sourcesContent":["import React from \"react\";\nimport Dropdown from \"./Dropdown\";\n\nexport default class SortDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortByOptions: [\n        {\n          id: 0,\n          title: \"Date\",\n          selected: true,\n          key: \"sortByOptions\",\n        },\n        {\n          id: 1,\n          title: \"Length\",\n          selected: false,\n          key: \"sortByOptions\",\n        },\n      ],\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  toggleSelected(id, key) {\n    this.state.sortByOptions.map((option) => (option.selected = false));\n    let temp = this.state[key];\n    temp[id].selected = true;\n    this.setState({\n      [key]: \"hi\",\n    });\n    if (this.state[key][id].title === \"Date\") {\n      this.props.dispatch({ type: \"SORT_BY_DATE\" });\n    } else if (this.state[key][id].title === \"Amount\") {\n      this.props.dispatch({ type: \"SORT_BY_AMOUNT\" });\n    }\n  }\n\n  render() {\n    return (\n      <Dropdown\n        title=\"Order By\"\n        list={this.state.sortByOptions}\n        toggleItem={this.toggleSelected}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}