{"ast":null,"code":"import _defineProperty from\"/Users/lesleycheung/Desktop/agileproject/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/lesleycheung/Desktop/agileproject/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lesleycheung/Desktop/agileproject/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/lesleycheung/Desktop/agileproject/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/lesleycheung/Desktop/agileproject/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/lesleycheung/Desktop/agileproject/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import Dropdown from\"./Dropdown\";var TypeDropdown=/*#__PURE__*/function(_React$Component){_inherits(TypeDropdown,_React$Component);var _super=_createSuper(TypeDropdown);function TypeDropdown(props){var _this;_classCallCheck(this,TypeDropdown);_this=_super.call(this,props);_this.state={accounts:[{id:0,title:\"Certification\",selected:true,key:\"accounts\"},{id:1,title:\"Course\",selected:true,key:\"accounts\"}]};_this.toggleSelected=_this.toggleSelected.bind(_assertThisInitialized(_this));return _this;}_createClass(TypeDropdown,[{key:\"toggleSelected\",value:function toggleSelected(id,key){var selectedAccounts=[];var temp=this.state[key];temp[id].selected=!temp[id].selected;this.setState(_defineProperty({},key,temp));this.state.accounts.forEach(function(account){if(account.selected===true){selectedAccounts.push(account.title);}});this.props.dispatch({type:\"SET_ACCOUNTS_FILTER\",accounts:selectedAccounts});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Dropdown,{title:\"Type\",list:this.state.accounts,toggleItem:this.toggleSelected});}}]);return TypeDropdown;}(React.Component);export{TypeDropdown as default};","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/agileproject/frontend/src/pages/TrainingPage/components/TypeDropdown.js"],"names":["React","Dropdown","TypeDropdown","props","state","accounts","id","title","selected","key","toggleSelected","bind","selectedAccounts","temp","setState","forEach","account","push","dispatch","type","Component"],"mappings":"k/BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,GAEqBC,CAAAA,Y,wHACnB,sBAAYC,KAAZ,CAAmB,8CACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,CACR,CACEC,EAAE,CAAE,CADN,CAEEC,KAAK,CAAE,eAFT,CAGEC,QAAQ,CAAE,IAHZ,CAIEC,GAAG,CAAE,UAJP,CADQ,CAOR,CACEH,EAAE,CAAE,CADN,CAEEC,KAAK,CAAE,QAFT,CAGEC,QAAQ,CAAE,IAHZ,CAIEC,GAAG,CAAE,UAJP,CAPQ,CADC,CAAb,CAgBA,MAAKC,cAAL,CAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB,CAlBiB,aAmBlB,C,+EAEcL,E,CAAIG,G,CAAK,CACtB,GAAMG,CAAAA,gBAAgB,CAAG,EAAzB,CACA,GAAIC,CAAAA,IAAI,CAAG,KAAKT,KAAL,CAAWK,GAAX,CAAX,CACAI,IAAI,CAACP,EAAD,CAAJ,CAASE,QAAT,CAAoB,CAACK,IAAI,CAACP,EAAD,CAAJ,CAASE,QAA9B,CACA,KAAKM,QAAL,oBACGL,GADH,CACSI,IADT,GAGA,KAAKT,KAAL,CAAWC,QAAX,CAAoBU,OAApB,CAA4B,SAACC,OAAD,CAAa,CACvC,GAAIA,OAAO,CAACR,QAAR,GAAqB,IAAzB,CAA+B,CAC7BI,gBAAgB,CAACK,IAAjB,CAAsBD,OAAO,CAACT,KAA9B,EACD,CACF,CAJD,EAKA,KAAKJ,KAAL,CAAWe,QAAX,CAAoB,CAClBC,IAAI,CAAE,qBADY,CAElBd,QAAQ,CAAEO,gBAFQ,CAApB,EAID,C,uCAEQ,CACP,mBACE,oBAAC,QAAD,EACE,KAAK,CAAC,MADR,CAEE,IAAI,CAAE,KAAKR,KAAL,CAAWC,QAFnB,CAGE,UAAU,CAAE,KAAKK,cAHnB,EADF,CAOD,C,0BAhDuCV,KAAK,CAACoB,S,SAA3BlB,Y","sourcesContent":["import React from \"react\";\nimport Dropdown from \"./Dropdown\";\n\nexport default class TypeDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accounts: [\n        {\n          id: 0,\n          title: \"Certification\",\n          selected: true,\n          key: \"accounts\",\n        },\n        {\n          id: 1,\n          title: \"Course\",\n          selected: true,\n          key: \"accounts\",\n        },\n      ],\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  toggleSelected(id, key) {\n    const selectedAccounts = [];\n    let temp = this.state[key];\n    temp[id].selected = !temp[id].selected;\n    this.setState({\n      [key]: temp,\n    });\n    this.state.accounts.forEach((account) => {\n      if (account.selected === true) {\n        selectedAccounts.push(account.title);\n      }\n    });\n    this.props.dispatch({\n      type: \"SET_ACCOUNTS_FILTER\",\n      accounts: selectedAccounts,\n    });\n  }\n\n  render() {\n    return (\n      <Dropdown\n        title=\"Type\"\n        list={this.state.accounts}\n        toggleItem={this.toggleSelected}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}