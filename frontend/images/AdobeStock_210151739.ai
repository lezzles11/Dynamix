%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: ico3_09.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: vasily merkushev
%%CreationDate: 6/21/2018
%%BoundingBox: 0 0 2220 1091
%%HiResBoundingBox: 0 0 2219.0782 1090.1271
%%CropBox: 0 0 2219.0782 1090.1271
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 10790 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD40FFCBA9FFA8FD7BFFA9A8FFA2FFA8CBFD79FFA9FFA8A3A9FFA8
%FD78FFA8CBFFA97EFFFFA9A8FD78FFA9FF7EA9A2FFA9FD79FFCBA2A37EA9
%A2A9FD7AFFCBA9A9A8CBA9FD7CFFA9FFFFFFA8FD80FFA9FD09FFA9FD50FF
%83AE83AE84AE83AE84AE83FD1BFFA8FD07FF84858585A9FD4CFFAFAEA8AE
%A8AEAEAE83FD04AEFD07FFA87D527DA8FD0FFFA9FFFFFF858585A95B8585
%85AFFD4CFF83AEA8AE83AEA8AEA8AE83AFFD06FFA84BF826F8277CFD0BFF
%A8A9A8A9A8A984A984857E615A855A85A8A9A8FD49FFAEAEAEA8AEAEAEA8
%FFAEAEAEFD06FFA72027274B204BFD0BFFCBCBFFFFFF85AF858585A95B85
%61615BFFCBCBFD49FF83AEA8AEA8AEA8AEA8AE83AEFD06FF7D262776A1A8
%A8FD0BFFA8FFFFFF84AF85857EA9845B5A8584A9A8FFA8FD35FFCBA8CBCB
%FD10FFAE83AE83AEA8AEA8AEA8AEFD07FFA8207DA1CFCFFD0CFFCBA9FFAF
%FD058584FF85AF84AFFFFFA8CBFD35FFA8A9A8CBA9FD0FFFAEA883AEAEFD
%0EFF5251FFA8FD0DFFA8FFCAAF5A857E8584855A855A605AFFFFCBA2FD34
%FFA9FFA8FD12FFAEA8FD12FFCACAFD0EFFCBCBFFAF8585A985855B616085
%7E85AFFFA9CBFD0CFFA9FD14FFA8A8FD12FFA2A27ECBFD10FFAEFD14FFCA
%CFFD0DFFA8FFCFFF5A857E8585855A855A845AFFFFFFA8FFCAFD09FF84A9
%84FD0BFFA97F7E7F7EA9FFA852A8FD13FFA9CBA9FD0CFFCA7D7DFD14FFA8
%7EA884A8FD0CFFCBFFFFFFAF61FD05855A855AAFFFFFA9CBFD0BFFA985FD
%0BFF7E7F7F7F787F7F7E7DA77DA8FD20FFA82020F852FD12FFA82F068484
%5984FD0BFFA8FFFFFFA8855A85848584615A85FFFFA8FFA8FFFFA8A8FD06
%FFAFA9A87DFD09FF547F77BC9ABC9AA3537C7D7D7DFD21FFCF7C5127FD12
%FF8428535AAF842FA8FD0AFFCBFD05FFA985AF85AF5BAFFD04FFCBCBFFFF
%7E7EFD06FF7E4B202727FD07FF7F7F9BBCBCC2BCBC9A53527DA8FD1AFF84
%858460AFFFFFFFCACF527DFD12FF2F2F288484AF2F2F7EFD09FFA8FFFFFF
%CFFFFFFFA8AFA9FFCFFFFFFFCFFFA8FFFFA82EFD04FFAFAFA85151202676
%FD05FFA87F77BC9AC9C9CE75769A797EFD14FFAFFD06FFAF353613FD05FF
%CAFD13FFA8532E2F5AAFA9842F2F7EFD08FFCBA8FFA9FFA8FFCBFFCBFFCB
%FFA8FFA9FFA8CBFFFFA82F84FFFFAFAFFFFFFFA176267DFD05FFA955A1BC
%C3CECF7C7CBCBC787FFD15FFAFFD05FFA836135AA8FFFFFF84A8A8FD12FF
%A8062F285A84AF84A92F2F59FD07FFA8A97EA37EA27EA37EA27EA37EA27E
%A37EA2A8FFFFFF287EFFAFA9FFFFFFCAFF7C27A8FD05FF7E559ABCA0CEA6
%A7CEC2939C55FD10FFA9FFA9FFA9FD07FF603C35FFFFFF84857E2F7EFD11
%FF592F2F2F59AF8585FFFF592F59FD0EFFA97EA9FD0BFF5359FFAFFD05FF
%CFA8A1FD06FFA955A1BCC3CECFCECEBCBC787FFD0FFFA97E7E7F7EA37EA9
%7EA9A8FFFFFF605A2F7E7E84A95A0653FD11FF53282F2E5A84AF7EFFFFFF
%7E2F53FD0BFFA9FFA2A27EFFCBFD09FF2F2F5AA8A8FD0DFFA97F78BC9AC2
%A6C99ABC9A7F7EFD10FF7EA37EA97EA37EA9A8FD06FFA82E2F5AAF592F2E
%FD10FFA9FD042F598B847EFD04FFA82F7EFD09FFA9A3A2A9A2A3A2A3A9FD
%08FF7E2E2F282F2F5A59AFCFFFAFFD07FF7F7F77FD06BC7E55FD10FFA9A3
%7E7E7EA37E7E7EA9AEFD06FFA92F2F532F282FA8FD0BFF85A985AF592F2F
%2F285984842FA9A9AF7E532859A8FFA9AFA9AFA9AFA9AFA8A984A9A9A984
%A9A9AFA9FFA9AFA9AFA9FF8484592F062F84FF592F7EFD07FF7E55779B9A
%BC767E54A9FD11FFA8A37EA97EA97EA9A8FD08FFAF2F532F2F2EAFFD0AFF
%85AFFFFFFF5A2FA82F2F53AF7E59FFFF7E532F2F2FA8CAFD1DFF2F532FA9
%AF7E282FA8FD07FF7E7F557F547F5BA9FD12FFA97E7E7EA37E7E7EA9FD08
%FF84845A59282EA8FD09FF85AFFD04FF2859AF7E596085A8A8FF592F2E2F
%2F2F2E59A8FD1CFF2F535984AF592F2859FD08FFA8A97EA97EFD14FFA8A9
%7EA97EA97EA3A8FD09FFA88484A984FD09FF85AFFD04FF842F84FFFFFF59
%7DCFFFFD052FFF842F2853A8FD1BFF2F2F2EA9AF5A282F2FFD22FFA8FFFF
%FFA8FD06FFA85984597E595928A8FD0AFF85A9FD05FF5953FFFFFFA82E27
%592F2F2E2F2FAFFFFF7E2F062F84FD19FFA82F282F7EAF592F282FA8FD2C
%FF532F2E2F2E2F2F2F7DFD09FFA9AFFD06FF59FD04FF7E2F592F2F2E537D
%FD05FFA85A2E2F84FD19FF2F2F2FA9AF7E2E532E84FD2CFF532F532E2F06
%2F0684FD08FFA9AFFD06FFA8FD05FF2E2F2E2F2F2F2E597EA9FD05FFA853
%2F7DFD17FFA82F282F84FF592F282F53FD1CFFA9CBA3CBA3CBA9FD09FF2F
%592E7E7D7E597EA3CBA3CBA3CBA9FFA9AFFD06FFCACBA9CBA9CB7EFD042F
%532F2F2E2F2F59A8FD05FFA85A7EA9A9FD0DFFA9CBA9CBA9FFFFFF847E2F
%85AF7E2E532E53A9FD0DFFA9CBA3CBA3CBCBFD04FFA3A37FFD07A37FA9A9
%FD05FF7E2F592F7ECBFD0AA37FA9A3CBA9FFFFFFA8A3A3A37FA3A3A32E2E
%282F282F2E2F282F28A8FD05FFA9A37E285353CBFD0AFFFD06A3A9FFFFFF
%A98584AF592F2E5306A8FD0CFFA9A378A378A3A3A3FFFFFFA3A3A3CBA3A9
%A3CBA3A97EA9A3A9FD05FF8459A92EA9A3A9A3CBA3A9A3CBA3A97EA9A3A9
%A3CBFD04FFA3A9A3CBA3A9A3A9FD087E2F53AFFD05FFA3A9FD04A3A9FD0A
%FFCBA3CBA3A9A3FD05FF85AFAFAF7E5A532F59FD0CFFCBFD05A3CBA3FFFF
%FD0AA37EA97EA3A3FD05FF53AF7E2FA3A9FD08A37EA97EFD04A3FFFFFFA9
%FD08A3CBA3A3A3CBA3CB542F2FFD06FFA9A3A3A3A9A3FD0BFFFD06A3A9FF
%FFFFA87E7DA85984A3A32E53A9FD0BFFA3A37EA37EA3A3A3FFA9A3A3A9A3
%A9A3A9A3A3A3A97FA985CBFD05FF84CB7E53CBA3A9A3A9A3A9A3A3A3A97F
%A9A3A9A3FD05FFA3A9A3A9A3A9A3A3A3A9A3A9A3A9A35A2E5ACBFD05FFA3
%A9A3A9A3A9CBFD0AFFCBA3A9A3A9A3FD04FFA82853522E52A9A37E28A9FD
%0AFFA3A9A3A37EA3A3A9A3A9FD08A3CBA9CBA3A9A3A385FD05FFA8CB537E
%FD07A3CBA9CBA3A9A3A37FCBFD04FFA9FD06A3A9A3A9A3A9FD04A3532E53
%CBFD05FFFD06A3FD0BFFFD06A3A9FFFFFF7E2F282F282F7EA97E2F53FD09
%FFA9A3A3A37EA37EA3A3A3FFA3A9A3CBA3A9A9FD07FFCBFFA9FFFFFF7DA9
%A3A3A3A9A3A9A3FD09FFA9CBFD06FFA3CBA3A9A3CBFD06FFA3CBA35A2E7E
%A3FD05FFA3CBA3A9A3CBCBFD0AFFCBA3A9A3CBA3FD04FFA828532E2F2FA9
%A3CB5353A9FD08FFA9A3CBA3A37EA3A3A9A3A9FD06A3FD0BFFA9FF7D7EA3
%A9537EA3A3A3FD11FFA9FD06A3FD06FFCBA3A9532F78CBCBFD04FFFD06A3
%FD0BFFFD06A3A9FFFFFF7E2F2E2F2E2F7EA9A3A32FA3CBFD06FFCBA3A3A3
%A97EA378A3A3A3CBA3A9A3A9A3A9FD0CFFA9AFCBCBA37EA3A9A3CBFD12FF
%A3A9A3A9A3A9FD06FFCBA3A35A2FA3A3FD05FFA3A3A3A9A3A3CBFD0AFFA9
%A3A9A3A9A3FD04FF842E2F2E2F2FA3A3A9A3A37ECBFD06FFA3A9A3A9FD05
%A3A9A3A9FD06A3CBFD0CFFA9A9FD06A3CBFD11FFA9FD06A3FFFFFFA9FFFF
%FFA3A3532FA3A3A9FFFFFFA9A9FD05A3FD0BFFFD06A3A9FFFFFF7E2F2E2F
%2853FD05A3CBA2CBFD04FFFD06A378A378A3A3A3FFA3CBA3A9A3CBA3CBFD
%0CFFA9A9A3A9A3A9A9FD13FFA3A9A3CBA3A9FD06FFA9A3A37E2FA3A9FD05
%FFA3A9A3CBA3A9CBFD0AFFCBA3CBA3A9A3FD04FFA92F532E2F53A9A3CBA3
%A9A9FFA3FFFFFFCBA3A3CBA3A9A3A9A3A3A3CBA3FFFD0AA3FD0AFFA37FA9
%A3A3A3A9A9FD11FFA9FD06A3FFFFFFAFFFFD04A3545AA3FD06FFA9FD05A3
%FD09FFA8A9A2FD05A3A9FFFFFFA82F2E2F285AA3A9FD04A3A2A3A9FFFFA9
%FD05A3CB7EA378A3A3A3FFA9A3A3A9A3A9A3A9A3A3A3CBCBFD07FFA3A3A3
%A9A3A9A8FFA9CBFD10FFA3A9A3A9A3A9A3CBA3CBA3A3A3A9A37F54FD07FF
%A3A9A3A9A3A9CBFD07FFA9A9A8FFA9A3A3A9A3FD05FFFD042F78CBA9FFA3
%A9A3A9A3A9FFCBA3A9A3A9A3CBFFA37EA3A3A9A3FFFFFD0DA3FD05FFA9A3
%A3A37EA9FFA9A2FFA8A9FD0EFFA9FD09A37EFD05A37EA9FD07FFFD05A37F
%AFA9AFA9AFA9AFA8CBA8A9A2FFA2A3A3A3A9FD04FF7E062F287FA3A9FFA9
%7FFD04A3A9FD06A3A9FF7EA37EA3A3A3FFFFFFA3A9A3A9A3CBA3A9A3CBA3
%A3A3FD05FFA3A9A3A9FFFF7EA3A9FFA8FD0FFFA3CBA3A9A3CBA3A9A3A9A3
%A9A3A9A9FF84FD07FFA3CBA3A985A9CBFD07FFA9FF7EFFFFA9A3CBA3FD05
%FF592F2F53A3CBA9FFFFCBA3A9A3CBA3A9A3CBA3A3A9FFFFFD04A3A9A3FD
%04FFFD0DA3FFFFFFA9A9A3A3A2FFFFA9A2FFFFCBA8FD0DFFA9FD08A3A9FD
%05A3A97E53A8FD06FFA3A3A385A9A3FD09FFA8A9A8A9FD04A3A9FFFFFF7E
%2F2E2F53A3A3CBFFFFA9FD0AA3FFFFFF7EA37EA3A3A3FD05FFCBCBA3A3A3
%A9A3A9A3A9A3A3A3FFFFFFA3A9A3A9FFFFA2A9A2FFA9FD09FFCFFD05FFA3
%A9A3A9A3A9A3A3A3A9A3A9A3A9A3CB7EA8FD06FFA3A385A9A3A3CBFD09FF
%A9A9A3A9A3A9A3FD04FF592F2F287EA3A3A3FFFFFFA3A9A3A9A3A9A3A9A3
%CBFFFFFFA37EA37ECBA3FD08FFA9A37FFD07A3A9FFFFA3A3A37EFF7EA37E
%A2A8A9CBFD07FFCACF84A984A884FFCFCBA2A3A3CBA9A9FD08A37DFD05FF
%CBA385A9A3A3A3FD0BFFFD06A3A9FFFFFF2E2F282E53CBA3A9FFFFFFCB7F
%FD07A3A9FFFFFF7EA37EA3A3A3FD0BFFA3A9A3CBA3A9A3FFFFFFA3A9A3A9
%A2CBA8A9A2A9CBFD07FFA8FF848584845A8584AFA8CBA3A9FD04FFA9A9A3
%A9A3CBA3FD07FFA9A9A3A9A8A9CBFD0AFFCBA3CBA3A9A3FFFFFFA82F2F2F
%2E7FA3A3A9FD04FFCBA3A9A3CBA3A3A9FD04FFA9A3A3A3CBA3FD0CFFFD06
%A3A9FFFFA9FD04A3A2A9A8A9A8FD07FFCFA87E8459A984A87E6059A8A2A3
%A3FD05FFFD07A3FD05FFA9A9A2A37EA9A8A87EA8A8FD07FFFD06A3A9FFFF
%7E067E2F2F78A9A3A9FD04FFA9FD06A3FD05FF7EA37EA3A3A3FD0CFFCBA3
%A9A3A9A3CBFFFFCBA3A3A9A3A9A3CBFD0AFF84605AAFFD04FF7E607EA9A3
%CBFD06FFA3A9A3A9A3A9CBFFFFFFAFFFA3A9A8A9A8A9A8AF84FD07FFA9A9
%A3A9A3A9A3FFFFFF5953A97E2EA3A3A9A9FD05FFA9FD04A3FD06FFA37FA3
%A3A9A3FFFFA9FD09FFFD06A3A9FFFFFFFD07A3FD0AFF5A59FFA9FF7DAFA9
%FF595A7EA3A3FD06FFA9FD05A3A9FFFFA9FFFFA97EAFA8A27EA984A884FF
%A9FFA8A9FFA9FD06A3A9FFA82F7EFF532F7EA3A3A9FD06FFA3A9A3CBFD06
%FF78A378A3A3A3FFA9A3A3FD07FFA9A9A3A9A3CBA3FD04FFCBA3CBA3A9A3
%A9A3FD09FF5984A9FFA984A8FFAF845AA9A3CBFD06FFA9A9A3A9A3CBA3FF
%AFFFFFFFA9A9A8A9A3CBA3A9A8AFA8A9A8A9A8A9A3CBA3A9A3A9A3FFFFAF
%53FFCB7F2FA9A3A9A9FD10FFFD04A3A9A3A9FD04A3A9A9CBA9CBFD07A3A9
%FD04FFCBFD08A3A9A3CBA9CBA3A97E5A59FFA9FF847D7DA85A5A7EA3A3FD
%07FFFD06A3A9FD04FFA884A97EA3A3A3A2A8A8A87EA87EA984A8FD05A3CB
%FFFF7D84FFCB7853A3A3A3CBFD10FF7EA378A3A3A3A9A3A9A3A9A3A9A3A3
%A3A9A3A9A3A9A3A3A9FD05FFA9A3A3A9A3A9A3A9A3A3A3A9A3A3A3A95A60
%A8FD04FFA97D8459A9A3A9FD07FFCBA3A9A3A37FA9FD04FFA8A9A8A9A3A3
%A3A9A8A97EA9A2A3A2A9A2A3A3A9A3A9FFFFFF84AFFFCBA353A9A3A3A3FD
%10FFFD04A3A9FD0FA378A3A3A9A8A9A8A97ECB7EA37EA37E7F7EA37EA37E
%A378A3A27E355A84FFA9FFA884357EA3A3A3FD07FFA9A37FA9847FA3CBFD
%04FFA8A8A8A97EA2A8FF847E7EA9A3A37EA87EA37FA3A9FFFFFFA8FFFFFF
%7F7EA3A3A3A9FD10FF7EA37EA3A3A3FFA3A9A3A9A3CBA3A9A3CBA3A9A3A3
%A3FFA9FFFD04A9CBA9A3A9A3A37EFD04A3A9A3A37FA9A3843584A8A88484
%5A60A3CBA3A9FD08FFA3A97FA97FCBA9FD05FF84FFA8A9A8FFA8A97EA9A8
%A9A8A9A2A9A3CBFD04FF7DFFFFFFCBA9A3CBA3A3A9FD10FFFD04A3CBA3FF
%FFFD0CA3A2A9A8A2A8A9A2FFA8FF7EA9A8A37E7F78A37EA378A378A378A3
%A884355A355A357E7EA9A3A3A3FD08FFCBA3A37FA3A3A3FD04FFA9A87EA9
%A8A97EA3A3A37EA9A8A87EA3A3CBFD05FF7EA8FFFFFF785378A3A3A9FD10
%FFFD05A3A9FD05FFA9CBA3CBA3A9A3CBFFFFA9FFA9FFA9FFFFFFA9CBA9FF
%A9FFA9A9A3A9A3A3A3A9A9CBA8FFFFAF848584AFA9CBA9CBA9FD0BFFA9CB
%A9CBA9FD08FFA9A8CBA9CBA9CBA2A9A9AFA9FD07FFA8FD04FFA97D7EA8FD
%13FFA9FFA9CBCBFD4CFFA9FD07FFA9FD2AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">crypto_man3</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-06-21T14:36:22+04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-06-21T14:36:22+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-06-21T14:36:22+04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYqhNVuJobT9wQs8zpDEx3CtIwXlT/JBrk8cQTvySGM6jbNBrttaJbRz28nD&#xA;6xczfHKan4maUnkhA3FKZlwlcCboswdmQ6a0sVxc2EjtKtvweGRzVvTkrRWPcqUO/hmNkogS72BT&#xA;DKkOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Koe/&#xA;tPrdq0IcxvVXikHVXQhlb6GGShLhNpBYVqHlbVbm/mnkicySsWb0xGyVP8rNIhp8xtmwhqIiNNok&#xA;GSaV9YtbqSPUFC3FzwEMqnkhWNaCLlQfGu59+ozEyUR6eQaz5JzlDF2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpVrFxeRzwR27SLyViwjQOTSnY5VkJvZx80iCKQDXeqKVDS&#xA;3KljRawKKnwHxZXxS8/k1cc/P5O+tawAzO9yqjevoDoO5qRTHil5/JeKfn8k00O5nuLIyTPzfmRU&#xA;0GwA8MtxSJG7fgkTHdMMsbnmP5h/n95T8m6udGa3n1LUogDdR2/FUh5DkFd2P2iCDQDISmAzjAlN&#xA;/wAv/wA4PJnnesGmTvb6mq8n026ASag6slCyyAf5JqO4GGMwUSgQzfJMXYqhdRlsEg4XrKscp4qD&#xA;WpbqONN6ildsnASvZIQsWtWEETevdBo49xMwYHj/AJe1KjxyZxSJ2Cy2FlA3nnGKAJJHau1uzKBL&#xA;IwiZlY05pGQZCvuQMvhoieZ3+f28nCnq65Db5MbTzRdRapdgXkyD6zMIpHPqw8BIwVWiYVC07owI&#xA;zP8AykTAbD6R5Hl3/rcE6mUZyFn6j5jn3fqZXpXmzTby1LyuIZ4iVnjFWUEftKwG6nqDmtzaWUJV&#xA;0dnp8wyxscxzTmKWOaJJYmDxuAyMOhB6HMYijRb12BXYq7FXYq7FXYq7FXYq7FXYq7FXYqgNT1Vb&#xA;JWogcxp6krM3BEQmgLEBzViKABTlmPHxJAtUsNQF2pBTg4VXAB5KyPXi6NQVBp3AOCcOFSEXkEOx&#xA;V2KpP5hiNI7gokkcYKkSFhuxFKcSpJ2ynKOrjagdUqtbea6P7mwjK93JlC/eXyqIvkGiMTLlH7/1&#xA;on9CXvEj6rBU1+LnJUV/2fbJeGe4M/Bl3BNtGs5rS0MU1A/Mtsa7EDLccSBu5GGBiKKOyxtfKXmD&#xA;8srnVPzo8xabfhhNcSfpfTzISsE9vJcIXVnVedBG7IOP7Q6+ONMbuVj3D2TyL+THkfQtVh161s3G&#xA;p23P6vJ6svpKXUoWWNnffixG5OWYwObDKa2ek5a0OxVLdV/3t0z/AIzSf8mJMth9Mvd+kJHIpL5r&#xA;vvSls7Zl5xNzndD0Zo6CMMO6h25Ee2ZWix3Z+Hz5uBq8lED4/qYtczszevO9SXVpHY/5QqSc2Yjt&#xA;QcCUupU7+LS3vrqc6hzSWeSRUt4XdqO5YfFIYk7+JwY8sxEDh5Acz+q2GTHAyJ4uZPIfrplflTT9&#xA;Oi02W+s3mb60rK6zFKj0mZeiCn4nNbrM05SEZVt3ebs9DiiI8Ub37/JPvL//ABw7H/jCn6sxc31n&#xA;3udLmmGVIdirsVdirsVdirsVdirsVdirsVdiqS+YdP1CaKVrKYRrMipcDo3FCxHEkjryod8yME4g&#xA;7hlEgc1fRLK/hiV7+USzLGIkPfgGLVY92NafRkcs4k+lZEdEzyli7FWHfmB+a3lPyItuNaad7m7D&#xA;Pb2ttH6kjKhozVYpGNz3bIykAyjElV8k+dvKnn/Tjqml+o62r+lNaXKhJInIqOaKzqeQ6EEjAKlu&#xA;wniF7ssAAAAFAOgGTS7FXYq7FWBeYfzH8sxeaIfLqRtc6iH9KW4UARREjkYy+7E7ANQbfMZb+UlK&#xA;PE1jVxhKk/8ALnmbT9Qnn0sRSWWpWahpLKcqWaNjtLGyllkQnuOncDbBPCYDyWGcZCe9PsrbHYql&#xA;uq/726Z/xmk/5MSZbD6Ze79ISORSTzjYyPBDfRqWFryWYAVPpvQlv9iVH0VzK0GQAmJ6uBrcZIEh&#xA;0YsQjoQaMjCh8CDm05Ov5pV9Xljk9GMGR+QVYxuzctl4/PwycqO7QARsHp2j6e+n6HFaybypGzS0&#xA;/nclmH0E0zQZsnHkJHJ3+nx8EADzX6bPFZ+X7S+nl9K1gthJcs1eKoqVL7VoFG5yGaJOQ13uTKQF&#xA;2nQIIBBqDuCOlMrYLZJI4o2kkYKiirMcIBJoIJAFli2lahPF5haC+v445JzKVtJrqMvIGcGERW9e&#xA;UZVOv8cyMsocNCr/ABe/VrgJXZ5MrzGbWndI0Z3YIiAszMaAAbkknCBavOPMH5qSJK0WkxqsIqBc&#xA;yqWd/wDKRKjiPDlX5DNp+TxYYiWeXD5fjc/BngwZcxrHG0psfzT1+KUeu0dwhO6yxhNvANHxp9xw&#xA;Q/JZjwwlUvj+lyM3ZmpxR4pR28t/udffmVf6pcpqlm8kOl6PcB7yxt5I0qkT8JTd3MpjjrIwZILd&#xA;Dyf7TbbLrssOCZj3FxA9V0y+F/p9veiCa2FzGsot7lPTmTkK8ZEP2WHcZBUTirsVdiqncGkEnb4T&#xA;3p+OGPNBVF+yPlgSx/zxrt9oWh/pO0VX9CaL11cEqY3cIwNCCPtChy7T4xOfCerh6/PLFi449CPl&#xA;ySj8vPO2q+ZL7VVvoEt4rf0/qscYNAKuJKu32jsvbLdVgjjAo7uL2brp5zLiFAVX2p75rttGvLD6&#xA;lqUkI9YN6UUrqjNxFW9OpDVHX4cwpQJGzuccxE7pH+V/5f6b5StNSns7iO4OsXJua26hII4lqIYo&#xA;wpavBSat3OMYcPNZzEjtyZtkmDsVdiqjfXkNlZXF5OeMFtG80reCRqWY/cMIFmkE0LfJehajPded&#xA;bW+nas11erJK3WrzSVb7y2bqqFOmmb3eqebtJ1y+/RN/oDMuu2Esotiho7IsZlKiuzbKRxPXplFx&#xA;FiXJli4jVc2V/lx+Z1r5ljOm6iosvMNuCs9s3wiUpszRg71FPiTqMw8+Aw3H0uxw5uLY82d5jt6U&#xA;a/cx20unzy7RpO3I1AArC46sQO+XYokggd36WUQgG84aKrFS7kgkGi1G3uDQ5MaSaeApVJqHlXmz&#xA;28lzZlzV1t6ojHx4Hkn4ZkgZutS97jnRDp6fcrWeseVbW4N0vrS3bChuZg0klPAEnb6MjkhmkK24&#xA;e4MoaQRN9e8oyTzjorRsoaSpBA+A+GUjSTbuAosWZvfJD2RFfrOnvDx8fUiK/wAchM1kvzYZBdsb&#xA;/JbzQ2qeRlW8lrNpLm1kkY7mJQGiJ/2LcP8AY5PU4qnt1cfBk9G/Rl13p76vZ3EVxJLaw3ETxQmF&#xA;uE0fqKV9YN+zItap/L88qkREcI59T+psjcjZ5dA+WfzR/JtvKUR1Kyv5J7VSTJNdMqytM0ihIo1Q&#xA;cmkILP8AIHNfIU7Acn1D5L/S3+ENF/THL9K/Ubf67z+36vpLz51/ar9r3zKjycSXNLPzNv5bXywy&#xA;Rmhu5kgc/wCSQzsPpEdDmy7KxiWYX0Ftczs8y8qaNHresehO5WMK0snH7RCkDiD23bOa7X1ksmWU&#xA;vOh5D8fa9pxDR6SPCPUa+Z5lE+b/AC0skd1+hbeWwsbA+neX8xYGVyQClskgJPGu8p+HsvI1K4WL&#xA;Jw1xGyen6/1OHo+0c2aYxyO0utb/AAUfyu03TrbzZYRLbq6cpmQSEuFlETP6yhiR6vw05/a3O+dh&#xA;hEcuj8Qj1xNX37/tdR2rpxh1BjH6SLe7ZgOC7FXYqkvnCa7g0Kae1laGSNkJdDQ8SwU7/TmRpQDO&#xA;irz5PMeuq1fr0zdQVZyw39jm0OCHcEJnpfmnWprxYpblirK9OmzBSw/EZj5tPARJAYZCQLDPr7T7&#xA;TU9Nksr6MTW1ynGWM9wd+3Qg7jNbGRibHNcmOOSJjIWC871Pyf5u8ox3Gq+ULn9IFmeS60u4TlUF&#xA;qhouJWrBdmHftvQZlnNDKRxivNwdPo5acHgJIPQsQuvzGj1DSdZ1XUgLfWZR9VS0oQUiMf7lI+VD&#xA;xLl3f/azIjhEaA5NeXIZFM/+cctXuHXWNLdibdPSuYFPRWYsj/8ABAL92Uawci5WkPMPaswXMdiq&#xA;GutRsrV1SeTi7iqqAzGn+xByyGGUuQa55Yx5lgf5xea7O28jXdvbSk3GoMlqnwsvwseUnUD9hCPp&#xA;zJwaeQmCWjNniY0Hz7o4ktdbsGk+BluIJNx0BZWBp8s2HRwC9+s9ShtPM3l+2lbiJnu5ydz8Mdu0&#xA;Y6e75h5IGUTTZpiIkEof8yvLnkecHzGdTOh6vAQ6X0KMTLIu61jHEs+2zKQfGuRwjJHYiw5OU4zu&#xA;DRTb8sfzBHmHQi2ozxtqFo3pzuoKsy/sPJGBxQvT9kkfLoKM+HhkAOrfhycUST0Zj+ldP/38PuP9&#xA;Mh4E+5l40e9SudYtY7eR4WEsqqTHFUryYDYVIwxwSvcKMsO9h+v3+raxFDG1kIViYttIrVJFPbM7&#xA;DiEDzbY5YDqjtG1zVbK1trJ7EMkZ4mUyAHiWrWm/QHK8unEiTaJZIHqyoX1kRX14/pYDMLwpdxYe&#xA;JHvcb6yAJM8dBvswJ+4Y+FLuK+JHveE6HYfmX5Ke6ay8u/pDSbiczxoAZWIWoRuMLch8PZkzZTnC&#xA;W10XBjGQ3qwnMf8AzkObaU2+r+XZra4T7arLRq/8Y5I0I+/KPyV8i3fmu8My17zH5LtYbHUvMEUZ&#xA;tZp4nszNF64in4uyy0o3Fl4sOSjbMWOlkZGg5B1ceEC2WWd5aXtrFdWkyXFtMoeKaNgyMp7gjIEE&#xA;GiyBtJ/PGiS6x5ent4ByuoiJ7dfF0/Z+bKSBmXoc4xZQTy5FEhYeMaZqd9o9+Lm3+CRCVdGBpSvx&#xA;I42PUZg9tdkyEzOIvHLex0er0Grw6rAMOQ1IbfLkQmuueddQ1i1FqyJFASDJHHUlyDUVJ6CuabSd&#xA;nTyTqIMi5OPS4NH+8lLfz/QOpTn8q9Cnn1VtXkWlvZh1jfoGmkHEgeyoxr8xnY6iA02njgG8juXl&#xA;NZqTqMxydOnuer5qWh2KuxVBa3Zve6Td20Y5SSRsI12FWG6ip9xlmKXDIFXnf+C/Mv8Ayx/8lIv+&#xA;a82v5vH3oRGn+UPMcV9BI9qERXXmxkjIC1+I7MT0yGTU4zEi0SFinoks9vaWrTXMqQwQpylmkYIi&#xA;qo3ZmagA+eaoC08gk8vn3yRGtW1/T6f5NzC3/EWOT8GfcWHix7w8k8z6Z5J1/wAzfVLDVob3V9Xl&#xA;uPq1xSlujSqOEUjJyrwp8B7s2ZmPKYx3BoOFkx8UvSRuzH8q/wAstW8n3+oXN9dwXC3cUccawc6g&#xA;oxYk8lXxyjUZxPk5ODCYc3o+YzkIW/vltYxRfUnkPGGIdWb+mW4sXEfLq15MnCPNS07Tmidrq6Pq&#xA;Xsu7N2Ufyrk82a/TH6QxxYq9R+p5l+adhc+a/PeheU7Yn0beNrvUHXpHHIwDE+4SP4fdhlunPBAy&#xA;as445iKn+Zf5ceWdLS984T3NzEscsDCyt1ip1SILGGAqa/F16Vxw6k7Rq2OfTjcgpfD+YnkeGG18&#xA;2L9Zl1y0WS1sNJYqlA8YLvMKNxHKQ7hj02rvkhGc/TVBhHhx73ZYDfan5u/MHzHFG/K7vZiVt7aO&#xA;qwwp34jcIo/aY/ScyhGOOLUTLJJkuv8AlXzf+Wc8GpaXObixlWE3NyqkosyCjRyL/IzMeJP/ABIZ&#xA;QJQzbHm3VPDuOT1f8uvzJ03zdZCNqW+swIDdWddj29SKvVPxXv2JxM2AwPk5OHMJjzZllDc7FXYq&#xA;7FXYq7FXzD+bl7D/AMrF171LWOcssMMTyGQNEVgjHNODoK1/mBHtm200fQHW5z6yyb83f+UL0f8A&#xA;4yx/8Rnxw/Ufx3NR5D3fpKa/84567JNp2p6NLISLZ0ubZCa0WWqyBfABlB+ZzH1seUnM0suYex5g&#xA;uWx7XvImgazMbiWNre7b7dxAQrN/rAhlPzpX3zN0/aGXEKBsebEwBSu1/Kjy/FKHnnuLlB/upmVF&#xA;Pz4KrfcRmRPtjKRQoIGMMxtrW3tYEt7aNYYIxSONAFUD2AzWSkZGzuWapkVcSACSaAbknFUlvfN2&#xA;k27FEZrhxt+7Hw/8EaD7szcegyS57NgxEoD/AB3DX/eNqf64/pl/8mH+cz8DzRdr5y0qZgsoeAnu&#xA;wqv3rX9WVT7PyDluxOEp6kiSIrxsHRhVWU1BB8CMwSCDRamE/nNqP1P8vtQVTSS7aK2T/ZyAsP8A&#xA;gFbL9LG5ho1BqBeCaZ5F1XVtXv8AT7f0LO406NXuVupHRQ/woyBuMnxcidvbNjx8qF24cMMpmgyD&#xA;y9+XmqaV5i07ULm8tpILC6iuW+r+qxf0XEnEeokVOXGlcsOGc41yty8egmCCSHtP+O4v+WNv+DH/&#xA;ADTmN/Jh/nfY5/geavB52sXB5wSIwFduJH0mo/VkJdnSHIhqyx4BaN0aS1vC196yz3LChC1/dKf2&#xA;QDuPnlGoEoemqj97THEQbl9SJ1LUVsIfWkUenWnImm59qHMaMJSNRFlvhDiYvYa5oNlqF/qSW0z3&#xA;+ourXM7cCeMahI413FEUDp475svyGQgAkbJGmok97zb89/NEmpfoi1iWSKxT1pXDfZeb4VWtCRVV&#xA;Jp8zk8WmOI79XC10DGnk1UYdjl+xdczHyL+Zeq+UFeG1tLW5t5TWUSRhZj7eslG+XLkBlOXTibdj&#xA;zGD6D8m+Zrbzj5bGovY+hBOzwyWsxWVWC7NvQBlNabjNblx8Eqt2GOfHG6Yf5o/KHSLGRvMHlu9l&#xA;0O/tmEiLGOcXImgCioZORNDuVptSmZODNKZ4CLtrOls+nYq6/nLYaPBbW3muMWuoup/fQc5IJQlA&#xA;0g4qfTG4qHpTxyeTQ0edOSIkbS2LPNC1zTdc02PUdOmWe1lqFkRlYVHXdSRmFlxmBoqRSPytDsVY&#xA;5P52sY5WRIJHVSRzqBWntmxj2dIiyQ3DCUfo3mC11RnjjRo5IxyKtQgitKgjKNRpZYtzuGE8Zi8c&#xA;/NX8qfMt35gvvMFi0FxbXjpxtw/CZSIwu/MBP2f5syNNnjQi63UYyDxO/OBWXybpCsKMs0YI9ws+&#xA;WYfqP47nHPIe79JYt+TOrtpHn3T+Z4wakHs3Pj6p+Af8jUXDqYXA+W7dglUh5vqDNQ7F2KuxVIdV&#xA;84WFhdG2CNNKDxNCAvLrSu+Z2HQymLug2xxEoS18/WE5BMDCOvEurBqeO1BlsuzZVsU+D5ofzhrE&#xA;j3B0+FisUYBnp+0x3p8hlug04A4zz6MsUOrGM2beiU07UJE5x2szp15LGxFPmBlZzQBokfNjxBDf&#xA;VykgjljWKRXZzMQwkIZQAjVNOIO/T+NYgHi4gbDiSxyjPjG/3vQvK8LQ6NCrMGYliQDXjVumaXWy&#xA;vIUSyCRsJJ5+tIL6+0SG7Xnp1lM+pXadnaBQkEZ/15Jen8obBpYkkgczs1yx8cgPi868vxST615i&#xA;1eQcWvr+RVFKCkTNUj25OR9GbrBj4RXwbtLjoyPn9yfgEmg3J6DLnMRI0rVCvIWc5XxEb0/Vlfjw&#xA;/nD5seId6FaCaFkSSH0WUMJGJflKWaoLK2y8RsKYMY3Ju3GxYCJ8R3ZL5Js5mvJbvcQxqUr2Zmoa&#xA;fQMw+0cgERHq25jtSa+dP+OOv/GZf1NmL2d/efBrw82C5vHKbewa5i4vbmaFuxTmp+8EZAyjyJYm&#xA;jsUI+gaVGaPp0CHwaFB+tcQInlTHw4dwYj+Y0FjZ6RBHa20ULzzAO8caqSqKTSoHjTIZAAHB14EY&#xA;ChzL1j8mWRPIlhaheMkIZ39xO7Sq33NT6M02txmMr70YocMB5si81f8AHBuv+ef/ACcXBof70fH7&#xA;nIxfU884ryDUHIbA96HN+5bPPJiImiKEUKDI5IApvXNF2h/efBxMv1J7mE1uxV5VN/ev/rH9edTH&#xA;k5wZD5H/AOOhcf8AGH/jYZr+0voHvas3Jv8ANrzFPoHlP69BEkspuI4lWSvH4gxr8NP5c1uniTLZ&#xA;1+orh3eNXv5u3d9FBaTaXayQhAlwswZkJLsTQEkUo3fM2OLICeThngNc2/O2gQ6RbWeqaRH9XNnP&#xA;zbjU8WYgo4qTQB1/HNhkgKc7WYBACURyL6G8u61BrWi2epwUC3USyFR+yzAEr9GaDNjMJU2+aY5U&#xA;qX65qa6dp7zf7tb4IR4sf6dcyNNh8SddGcI2Xl988zSwMEaQtKC7VO1epNP450QFOWXWCKkBAQx/&#xA;G1QQw6MQD8W+4AwqE01ksdWvSevryD6AxAynT/3cfcEQ5BU0BrVdXtjcgGHlvy6ciDxJ/wBlTI6o&#xA;S8M8PNE7rZ6RnOOGpy29vMVMsSSFDVC6hqHxFclGZHIpBUZraSOU3Fr/AHh/vIiaLJ/RvfJxmCKl&#xA;y+5qlEg2P7Xn2tQ3qajPc3l693dXQUvAqtDBDHEXEMSQs8nFwGJdi3xE9hQDa6DFQJcnTUQSkeiQ&#xA;XsVk31wkTTTTTelRP3Syys6x1TZuIbc9zmdEGt2+AoPUPL2hw2FqkkiA3jisjkbrX9keFO+aLVak&#xA;5JUPpcfJOz5JvmI1qc9tb3EZjnjWVD+y4BH45KMzE2DSQabgt4beJYoUEca/ZVRQYykZGzzUm0k8&#xA;6f8AHHX/AIzL+pszezv7z4NmHmwXN45T0Hyw6p5etnY0VRISf+ejZz+tF5j8PucPL9RRGr21reaX&#xA;N6oBURs8bkbqQKhhlennKExXeiEqOzwH80UY6dZMOgmI+krt+rN9l5NXaQ9I971j8tbY21rJbgUW&#xA;GGCP2+EEfwzA7S5RcicaiAn/AJq/44N1/wA8/wDk4uYmh/vR8fuRi+p57nQOWz3yd/xxV/4yP+vN&#xA;D2h/e/Bxcv1J3mE1OxV5VN/ev/rH9edTHk5wZD5H/wCOhcf8Yf8AjYZr+0voHvas3JJP+chkdvJF&#xA;oVGyajEX+XozD9ZGYWi+v4Ot1X0/F86KpMtAKkgAD3rmy6uA99u7WC7tpba4XnDMpSRT3BzMIell&#xA;ESFFNfyyW80K1TTLlvUsmlaK2n+nlHy8DRuP0ZrNZjEhQ+uP3OMMJjCu77npGahref8AmbVfr+oE&#xA;RmtvBVIvAn9pvpzf6PB4cN+ZcvHGgx68jV5LfkxXjICKUpUb71I8MzGZWaV6f1dvTZmHM7tQHt4E&#xA;4oDKPNunPbam1wF/c3PxK3bl+0P45g6DKJQrqGGKVhI8zm1N9O8z6pZAJzE0I6Ryb0Hs3UZiZtHC&#xA;e/ItcsYLKdK80affMIm/0e4PRHOxP+S2avPopw35holjITjMNref+aJuWuXKtug4AeIog6Zv9FGs&#xA;Qb449rH1fehdOsbiaQ3CBPqtsytNNK3CMUIPEmhNT7DDn1AiOH+Iszk282Z2mvF/Ta4SMW8zcI7u&#xA;CT1IuZ6K9VRlPzGaaWHu59zjmKb5QxdirsVSHzp/xx1/4zL+psz+zv7z4NuHmwXN45TItM81LZaZ&#xA;HZC3LOgYCTkKfExboR75rs+i45mVtGTHdm1mrea7m8tTaxx+ijCkrVqze3agyWDQxhLiJtOPGBuw&#xA;jzNpE2q29lbRIZGF9bEqPB39L/mZmVlIAsteqhxRH9YPXtA0kabYiJiDPIeczDpXwHsM0Wqz+JK+&#xA;jGcrKn5q/wCODdf88/8Ak4uS0P8Aej4/cnF9Tz3OgctnHla5t7fSVjnkWOTmx4saGhzR62BlksC3&#xA;XZdRjMvqCcjULE/8fEf0sBmJ4Uu4sPHh3hKNV1i59TjZzJFAJVgM/JaF2T1D8TB1CqNvsmp2y2GI&#xA;dRvzboURfNh97aNCIpgeUVypdCeoIJBG3X2PfNxp83FYPMOVCVp15H/46Fx/xh/42GY/aX0D3sc3&#xA;JT/OjTWvvy81EoOUlqYrlR7I4Dn6EZjmu0sqmHA1AuBfNmg2hu9dsbYCokmQN/qhgW/CubiI9Tg4&#xA;Y8UwPN9DWulm60e5uoxWW2cEjxQjf7uuSnm4cgieUnoDKjSDiupI4JIQTxcg7HoRk54RKYl1DNkd&#xA;z5p9Ty+qq3+nyVhk8QAPif8A2Q/H5ZgQ0VZv6I3aBi9XkxXNq3orX9JlsrLSGJCT3EjyTBuvEcCF&#xA;FQf2a/TmLhz8c5VyFfpahKylmn+r6BMjK5LtQr02ND0A7g5lNget3dnb3kDQXCB426g9j4g9jnL4&#xA;8hgbHNwgSGI6l5MvIiXsm9ePr6bUVx/A5tsPaMTtLYuRHMOrH5oJoJDHMjRyDqrAg/jmwjISFhtB&#xA;tTySWdeUtWlvLV7eduU1vSjnqyHpX3FM0evwCErHIuLljRY15oUrrt0D3Kn70U5stEf3Q/HVux/S&#xA;i59Q06Hybb27RtI1wzKyowUiRH5MSaN7dumYHBI5ie5qo8Teg3+nN5d1KyETpwRpGLMH5u44rxoF&#xA;oahQBkc0JeJEokDbNIPU9CP1P7ziOf8ArU3zAPNqXO6IhdzRR1OBUFca1p1tQXMogZ6+msmxen8o&#xA;3JxiCeTGUxHmUl1zUbXVbGOzt5FF28w4QOSjEKDUgOEJ+gZmaWfhS4pcqZYc0OLmxe9sLqzk9O4T&#xA;iT0PY/LNxh1EMguLmxkDydHY3rxCZbeVoT0kVGK7Gn2qUycssQasWiUgoMCGIIII7HrkwyHJD6rP&#xA;rI0W8g0q8mtLlkMkJgYIzSxqTGpYg0VnoGpvTuOuY+owDIPMNeWHEPN6rpWopqWnQXyQzW6zryEF&#xA;zGYpV3pR0bcfx6jbOeIo04qD81f8cG6/55/8nFzK0P8Aej4/c2YvqYGKQgMd5T9lf5fc++bw+r3M&#xA;j+92H0dfPy93ezfyeSdGUk1Jkep+nNLr/wC8+DHIKNBO8wmtJ9Y0OS8WdYirR3PFpY3YpR0ACujh&#xA;XoaKARxy/Hl4a8mQkwrUb2S5kVSojigURQxLuFVdup6n3zd6fAIC+ZLlQjSc+R/+Ohcf8Yf+NhmN&#xA;2l9A97DNySD8/PNV9pWiWmlWUvpNq3rLdMPtGBFCsnsH9TfMLR4wTZ6Ot1MyBQ6vIvy0gWbzN6hF&#xA;fq8EjqfckIf+J5tsW8mOgjeT4PonyOAbO6BFQXAIP+rmB2l9Qdlm5hIfMGlnTtQeNR+4k+OE/wCS&#xA;e30Zn6XN4kL69W3HKwlmZLNOfLGlfXtQDyLW3t6PJ4E/sr9OYetz8ENuZa8kqCK/MgyB9J4IXHqS&#xA;ciK7D4NzT+OYvZn8Xw/S1YWJ6f6noHnGYzzY8TXua139zm2cgPYC6BgpYBm+yCdzTwzlacFvAqF1&#xA;HTbS/t2iuEB2PCT9pT4g5bhzSxmwyjIh5kevjnSuayHyPX9KTDt6DV/4Nc1/aX92Pf8Arac3Jrzr&#xA;bGPU456fDNGN/wDKQ0P4Uw9nTuBHcVwnZIEdlqAFZG3ZHAZSfHfofcZlTwiW/VsMbZj5a0fTZYIr&#xA;1XEhBBMKqERJF/mG7MR+zyPyzT6qUoyMS40yQaZLmE1pR5suhaeX7y55shiQFGXZubEKtCQaHkw3&#xA;phjDiNNeXJwRMmGaJY32uf6dcyyQ2kgozo9JpnUgNyam0YNQqjbb6TmSIhsHAxQOT1Hl+Psa/wAP&#xA;RXejtcaLcySMXmjEU5rG3pytG3wuGoy8SFbGOXfdnPSUPSd0ssNZu720a2vJJJbiFwechqeAXiBv&#xA;vXbf7+pOZmjwiMzIcqcvszMZgg8w9I8rKG8v2wIqD6gIP/GRswdb/en4fc5OX6igfOOlRvZrexIB&#xA;LBRZKd4zt/wpy/s/ORLhPIssMt6YXm5cln/lS/8ArWlIjGstufTb/VH2T922aDXYuHJfQuJljRd5&#xA;ilml0m6MIHpRAFnIryKsDRf9Xx8cdKBGYtoj65V/D9/kwmK2Uenc3MiGBvipuxYkH4aD8cy8mczH&#xA;CAzlk4hQCPtdRmjtzDZXUiLCWmjgUBWLHtU7MvtmPkxm/UGErHNm1hf21xbRutzFM9FWR42HH1CB&#xA;tSu1fDMKUSCyBan1awihuZPWRza1EqKwJDbgKR4kimShilIgDqyiLNPM2YsxY9San6c6YBzmS+Rk&#xA;Jvbl/wBlYwD8y1f4Zre0j6QPNozcmC/mDpMvm/8ANVNKFfqOjWSyXzDoq0MxHzk5on+1lOmIhAH+&#xA;cXWTjx5QOjEvy5082muavF/yyf6OT/z0I/40zZYo0W7QwqcvJ7n5F/3kuv8AjIv6s13af1D3OXm5&#xA;pj5j0r9IaewQVuIfjh9/FfpzG0mfw578iwxyosEFhfFxGLeTmTTjwatfuze+LGrsOVxB6DoemLp2&#xA;npB/u1vjmPi56/d0zQanN4k76OLOVljH5kSokmkcti0kgXavXgPEU65m9mfxfD9LPCxWwp9X2O3O&#xA;TalKfGajYt36ZtnICaanqU99fPcuxBr+6FfsKDsBlOHCIR4URjQpG2nmzWbdQpkWdR0Eo5H7wVb8&#xA;cpyaHHLpXuYnEC6982atdwtCSkKOKP6QIJB7VJb8MGPQ44m+fvUYgEjlnhiAMrhAdgWNMzWbLPJ7&#xA;2NpDcXdzcRxsy/CrMARGpAZiPAsyjNT2gTIiIDRmN7I/X5NJ1OzjgivITdOPVtBzX4+ooP8AW4kf&#xA;MZj6WUscrIPD1YYzRYEt1bMpZZUKjqeQp45vnKtFWGtS2U7NaXIRwP3i1BBA/mB275VkwxmKkEEA&#xA;804Xz7qHED/RyTsGoanenZqdcxP5Ox+bX4UUj8xeZb3VdMlRrlWiBVjFHxCniQ3zO2+TOkhCNgbu&#xA;LrcIOGVc058i6lZS6VHYpITdwhmkiJJovKgZa9jUfTXNblFFwtHMGFdVG8stS8s2clxY6kkmmhiX&#xA;stQUgK0jbmK5t09SPkzVPON9/DK9ydm/aEdyxbSSZby6uQCEYmnLc1Zi1CfEZt9LFr7KiTKUuj1f&#xA;yr/xwbX/AJ6f8nGzV67+9Pw+5z8v1JnPDHPDJDIKpIpVh7EUzGjIxII6MAaeX3sD2lxLBICXiYoQ&#xA;ASTvQUA8e2dLDIJREujlmYEbPJNfK916Gom1lZovXb0ZoiCrBhuoNdxXp9OYmrAnDiG9buNkPijb&#xA;kOf6mYazHN+iLmO2Sr+nxCKvI8ejBV8eNaZp8cqkC18uTAb+AxxRBVcJBySQOCrKxofiBApXNlps&#xA;gE7PVlhkBLdZpkTzXkZj6R1Z37AUPU++X6vJHhrq2Z5gig57mRnmaULyjbaEgg/yg17fbHv4ZhiF&#xA;0O9xgLW8pbiOReLM6JyAQmho32mBJ5EcycvnA4iKPNtlEwPNQG9Kb16ZsgbFuaDbP/LGltp+ncph&#xA;xnnIeQH9kdFU5odbn8Se3IOLklZS3QdBays9e1e5QjUdbknuJeX2kgUMttEf9WKhPuTkBO5xA5Cm&#xA;jFGjfeXm2h2H1bXddlAos8sLKadf3fI/8M5zfxG5cnDCpzPfT07yL/vJdf8AGRf1Zqu0/qHuXNzZ&#xA;NmsaXYq7FWE/mSXD6TxdUBlkBDU3+xsKg5tezP4vh+luwsU04SCAl2ViXahWlNjTsB3GbZyA9D1X&#xA;yjZ3kjTQObeZjVgBVCfltT6M0eDXygKO4caOUhI5vJmsIfg9OUduLU/4kBmbHtDGedhtGYKY8o64&#xA;TQxKPcuv8Dkvz+LvXxYon/ANxKiGeWBmUk+m6NInQ06FD165RPtIcgCwlmTGXQdXc3qUsTbyxFLV&#xA;DENizISGHDp8H+VvQ0FKZhjNHY+q+rVataaBcxrZPJFYCe1jVeawEtXmxYI1UCji38vUnpXIyzA3&#xA;9W/mtpV/ge7ms2Sb6lDc8yVkhiPHiUpTioiH2vbYbVOZMdcInayPNmMlJdJ+X2tx3E0kb2ksb04G&#xA;hVtiDUig8P5syY9owPMEMxlCh/gjzMJUIig4CvOhUE/ESKb+/jln5/F3p8QKln+XmuBVE7Wsac6y&#xA;KvUrShAohG/6sqydowr03bE5QrXv5aX9vMLnRb8RTblkblEBU1IRk5Gn+SfvzAGpB2IdRl0Z4uLG&#xA;aQo/LvzXdJ6d7fxrCpLKhkeQcmJJPHiFFSTvkxqIA8mEdHkltOWyYQ+RL+GCOKH0k47OSxoTX7XS&#xA;tfHMnHroRsb10dxh4MceGPJl+kWLWGnQ2jMHaMHkw6VZi2335rtRl45mXewnKzaMylixvzJ5Wl1K&#xA;4+sW7IGdQsqOSKkbAggHtmx0usEI8MuTZGQ4eGXJLIPJesLKHM0YctzaVnZmLV61IqTmR+fxAUAW&#xA;cZQiKDNxWgrue5zTNCR3Pl+6l1GWeO64Q3HxS1UGQELxVR+yV/z98tGShVMTFKpfLuv3EYiqkCR1&#xA;r8fESGuxHCv45kY8uMH1bpgBe6DPlPX4yxVFfn/efEh5b9+Xjl0suEjYlnKMK2V4/J2pToVeOC1j&#xA;aTnTkzuAAQFNOQbr45UNREEE+piBuCd0+0nyxp+nsJTWe4XpI4oB/qr2yGfWSmK5RbJZCV3m3RW1&#xA;vyzqekIIy99byQp6wPp8nFATQEih6EDbrmLE0Wspg1sjWRtQBEhj9IKu4UceNB06YYyogpBp5zH5&#xA;G89JqszM2lSaY8lI2V7iO4EYAAZ6xyIzf5IoPfNqO0he4bRm3Zt5d0aXS7aRJZFeSVuR4VoKCnU0&#xA;zD1eoGWQIHJjknxFNsxGt2KuxVIvNPls60tqyOqyWrMyByQDyp3WvTj4ZmaPUjETY5tmOYHNJLby&#xA;FfxkI08SxlizEM7t8RqaAqP15nHtKFbAtvjB/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:934333fa-3eb0-7246-bbed-50c693def913</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:934333fa-3eb0-7246-bbed-50c693def913</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a1335b10-67ba-7844-9140-1c5954ee7e6d</stRef:instanceID>
            <stRef:documentID>xmp.did:a1335b10-67ba-7844-9140-1c5954ee7e6d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ee238527-a41a-4e44-88c2-e21bcd9abd1e</stEvt:instanceID>
                  <stEvt:when>2017-06-29T17:31:56+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6080e226-4210-bf4d-95c5-2672db13c490</stEvt:instanceID>
                  <stEvt:when>2017-06-29T18:02:06+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9b564072-7a2e-624a-9321-825add50201f</stEvt:instanceID>
                  <stEvt:when>2018-01-10T13:50:27+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ba234ca2-6310-1140-bd8d-c1f22c089d9b</stEvt:instanceID>
                  <stEvt:when>2018-01-10T13:57:29+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a41e2a65-b73b-1e47-abe2-f70594c1651d</stEvt:instanceID>
                  <stEvt:when>2018-01-16T07:31:01+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4a1f45f7-bcf8-d245-ac88-8d1430c0bb4a</stEvt:instanceID>
                  <stEvt:when>2018-01-26T19:12:01+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88478329-0d2e-3c4a-baee-ee9bddf1783c</stEvt:instanceID>
                  <stEvt:when>2018-01-26T20:34:23+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:292731ca-dba8-f648-8108-75ac92bf89f5</stEvt:instanceID>
                  <stEvt:when>2018-03-16T12:53:04+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:42fee533-039e-6e48-9fdc-bfc9c526d535</stEvt:instanceID>
                  <stEvt:when>2018-03-16T13:15:13+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:862c3918-bb15-5742-b020-37d0f95074ef</stEvt:instanceID>
                  <stEvt:when>2018-05-10T12:31:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a1335b10-67ba-7844-9140-1c5954ee7e6d</stEvt:instanceID>
                  <stEvt:when>2018-06-19T12:22:49+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:934333fa-3eb0-7246-bbed-50c693def913</stEvt:instanceID>
                  <stEvt:when>2018-06-21T14:36:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>931.333333</stDim:w>
            <stDim:h>587.727778</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1090.13 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1090.13 li
2219.08 1090.13 li
2219.08 0 li
cp
clp
298.982 640.72 mo
299.008 659.484 277.524 701.214 260.844 701.238 cv
251.809 701.25 230.24 683.908 183.677 683.974 cv
129.469 684.051 119.077 707 119.1 722.985 cv
119.154 761.208 153.229 775.059 193.559 790.987 cv
250.582 814.534 320.119 842.929 320.254 937.447 cv
320.416 1050.73 239.16 1089.76 163.407 1089.87 cv
57.7716 1090.02 .0343078 1052.57 .000128101 1028.94 cv
-.0301453 1007.4 28.4064 967.051 43.0001 967.031 cv
55.5099 967.013 89.6095 998.933 145.207 998.854 cv
175.092 998.811 210.524 989.726 210.467 950.112 cv
210.406 908.414 155.486 896.677 103.328 872.428 cv
55.3419 849.562 9.42591 816.269 9.30677 732.872 cv
9.16419 632.794 92.504 592.366 173.817 592.25 cv
247.484 592.145 298.949 617.786 298.982 640.72 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.296818 .385595 0 0 cmyk
f
740.289 640.09 mo
740.318 659.55 712.584 705.458 695.209 705.483 cv
686.869 705.495 659.039 683.295 593.017 683.389 cv
511.01 683.506 472.859 735.684 473.009 839.931 cv
473.158 944.177 512.154 998.33 592.076 998.215 cv
658.1 998.122 695.588 970.269 706.012 970.254 cv
728.252 970.222 747.086 1018.84 747.102 1030.66 cv
747.162 1072.36 647.805 1089.18 592.207 1089.26 cv
436.531 1089.48 363.447 1011.05 363.202 839.393 cv
362.966 673.989 440.686 591.868 594.971 591.648 cv
656.127 591.561 740.248 610.901 740.289 640.09 cv
cp
f
916.871 687.792 mo
917.033 800.378 li
983.056 800.284 li
1011.55 800.243 1036.53 773.799 1036.48 740.439 cv
1036.44 708.47 1014.17 687.653 978.029 687.705 cv
916.871 687.792 li
1146.27 727.078 mo
1146.35 780.591 1113.04 819.557 1065.12 837.695 cv
1065.12 840.475 li
1082.51 847.401 1103.39 874.474 1115.25 904.341 cv
1176.63 1057.15 li
1178.72 1062.71 1180.11 1066.87 1180.12 1070.35 cv
1180.13 1078.69 1166.94 1084.27 1138.44 1084.31 cv
1109.95 1084.35 li
1089.79 1084.38 1073.8 1080.93 1069.62 1069.81 cv
1014.52 934.369 li
1000.58 906.59 989.443 892.707 944.27 892.771 cv
917.164 892.81 li
917.406 1062.38 li
917.428 1076.98 904.93 1084.64 875.74 1084.68 cv
852.111 1084.72 li
822.922 1084.76 810.401 1077.13 810.381 1062.54 cv
809.756 624.701 li
809.727 605.242 818.055 596.891 837.516 596.862 cv
973.035 596.669 li
1093.27 596.497 1146.15 643.68 1146.27 727.078 cv
f
1634.67 616.573 mo
1635.1 919.583 li
1635.26 1026.61 1560.98 1087.87 1433.8 1088.06 cv
1306.62 1088.24 1232.17 1027.19 1232.02 920.159 cv
1231.59 617.148 li
1231.56 602.555 1244.06 594.892 1273.25 594.85 cv
1296.88 594.816 li
1326.07 594.774 1338.59 602.402 1338.61 616.996 cv
1339.03 913.057 li
1339.1 961.706 1377.38 997.094 1433.67 997.013 cv
1489.96 996.933 1528.83 961.434 1528.76 912.786 cv
1528.34 616.725 li
1528.32 602.131 1540.82 594.468 1570.01 594.426 cv
1592.94 594.394 li
1622.13 594.352 1634.65 601.979 1634.67 616.573 cv
cp
f
2218.44 615.739 mo
2219.08 1060.52 li
2219.1 1075.12 2206.6 1082.78 2177.41 1082.82 cv
2157.26 1082.85 li
2128.07 1082.89 2115.55 1075.27 2115.53 1060.67 cv
2115.11 772.953 li
2112.33 772.262 li
2011.82 952.405 li
2005.58 960.753 1997.24 965.629 1984.04 965.649 cv
1963.88 965.677 li
1950.68 965.696 1942.33 960.844 1936.07 952.513 cv
1835.04 772.658 li
1832.26 773.357 li
1832.67 1061.08 li
1832.69 1075.67 1820.19 1083.33 1791 1083.38 cv
1770.85 1083.4 li
1741.66 1083.45 1729.14 1075.82 1729.12 1061.23 cv
1728.48 616.439 li
1728.46 601.846 1740.96 594.182 1770.15 594.141 cv
1806.98 594.088 li
1827.14 594.059 1843.13 598.901 1850.79 612.79 cv
1967.85 820.421 li
1973.42 830.143 li
1979.66 818.32 li
2096.82 612.438 li
2104.44 598.528 2120.42 593.64 2140.57 593.611 cv
2176.71 593.56 li
2205.9 593.518 2218.42 601.146 2218.44 615.739 cv
cp
f
1279.88 181.352 mo
1195.38 97.938 li
1193.47 101.308 1193.19 97.4228 1191.25 100.313 cv
1189.37 103.122 1193.83 103.58 1191.87 106.333 cv
1278.44 182.793 li
1278.84 183.191 1279.49 183.191 1279.88 182.793 cv
1280.28 182.395 1280.28 181.749 1279.88 181.352 cv
cp
.306981 .397192 0 0 cmyk
f
272.93 349.335 mo
268.449 349.335 264.817 345.703 264.817 341.222 cv
264.817 336.741 268.449 333.108 272.93 333.108 cv
277.411 333.108 281.044 336.741 281.044 341.222 cv
281.044 345.703 277.411 349.335 272.93 349.335 cv
.160922 .0775463 0 0 cmyk
f
272.93 373.109 mo
268.449 373.109 264.817 369.477 264.817 364.996 cv
264.817 360.515 268.449 356.882 272.93 356.882 cv
277.411 356.882 281.044 360.515 281.044 364.996 cv
281.044 369.477 277.411 373.109 272.93 373.109 cv
f
272.93 396.882 mo
268.449 396.882 264.817 393.25 264.817 388.769 cv
264.817 384.287 268.449 380.655 272.93 380.655 cv
277.411 380.655 281.044 384.287 281.044 388.769 cv
281.044 393.25 277.411 396.882 272.93 396.882 cv
f
272.93 420.656 mo
268.449 420.656 264.817 417.024 264.817 412.542 cv
264.817 408.061 268.449 404.429 272.93 404.429 cv
277.411 404.429 281.044 408.061 281.044 412.542 cv
281.044 417.024 277.411 420.656 272.93 420.656 cv
f
272.93 444.429 mo
268.449 444.429 264.817 440.796 264.817 436.315 cv
264.817 431.835 268.449 428.202 272.93 428.202 cv
277.411 428.202 281.044 431.835 281.044 436.315 cv
281.044 440.796 277.411 444.429 272.93 444.429 cv
f
272.93 468.203 mo
268.449 468.203 264.817 464.57 264.817 460.089 cv
264.817 455.608 268.449 451.976 272.93 451.976 cv
277.411 451.976 281.044 455.608 281.044 460.089 cv
281.044 464.57 277.411 468.203 272.93 468.203 cv
f
969.482 767.64 mo
962.656 767.64 957.123 762.107 957.123 755.282 cv
957.123 748.456 962.656 742.923 969.482 742.923 cv
976.307 742.923 981.84 748.456 981.84 755.282 cv
981.84 762.107 976.307 767.64 969.482 767.64 cv
f
960.828 800.316 mo
958.542 798.073 957.123 794.949 957.123 791.493 cv
957.123 784.667 962.656 779.134 969.482 779.134 cv
976.307 779.134 981.84 784.667 981.84 791.493 cv
981.84 794.936 980.432 798.05 978.16 800.291 cv
960.828 800.316 li
f
969.482 803.851 mo
966.112 803.851 963.057 802.502 960.828 800.316 cv
978.16 800.291 li
975.929 802.492 972.864 803.851 969.482 803.851 cv
.282963 .305089 0 0 cmyk
f
969.482 840.062 mo
962.656 840.062 957.123 834.529 957.123 827.704 cv
957.123 820.878 962.656 815.345 969.482 815.345 cv
976.307 815.345 981.84 820.878 981.84 827.704 cv
981.84 834.529 976.307 840.062 969.482 840.062 cv
f
969.482 876.273 mo
962.656 876.273 957.123 870.74 957.123 863.915 cv
957.123 857.089 962.656 851.556 969.482 851.556 cv
976.307 851.556 981.84 857.089 981.84 863.915 cv
981.84 870.74 976.307 876.273 969.482 876.273 cv
f
969.482 912.484 mo
962.656 912.484 957.123 906.951 957.123 900.126 cv
957.123 897.624 957.866 895.297 959.143 893.352 cv
968.213 894.146 975.557 895.756 981.687 898.179 cv
981.788 898.813 981.84 899.463 981.84 900.126 cv
981.84 906.951 976.307 912.484 969.482 912.484 cv
.160922 .0775463 0 0 cmyk
f
981.687 898.179 mo
975.557 895.756 968.213 894.146 959.143 893.352 cv
961.352 889.989 965.157 887.767 969.482 887.767 cv
975.644 887.767 980.754 892.279 981.687 898.179 cv
.282963 .305089 0 0 cmyk
f
1529.44 415.336 mo
1227.58 415.336 li
1224.44 415.336 1221.9 412.791 1221.9 409.651 cv
1221.9 201.15 li
1221.9 198.01 1224.44 195.464 1227.58 195.464 cv
1529.44 195.464 li
1532.58 195.464 1535.12 198.01 1535.12 201.15 cv
1535.12 409.651 li
1535.12 412.791 1532.58 415.336 1529.44 415.336 cv
cp
.306981 .397192 0 0 cmyk
f
1518.57 393.471 mo
1236.99 393.471 li
1234.44 393.471 1232.37 391.401 1232.37 388.847 cv
1232.37 210.102 li
1232.37 207.548 1234.44 205.478 1236.99 205.478 cv
1518.57 205.478 li
1521.13 205.478 1523.2 207.548 1523.2 210.102 cv
1523.2 388.847 li
1523.2 391.401 1521.13 393.471 1518.57 393.471 cv
cp
.0356756 .026154 .0316472 0 cmyk
f
1256.38 405.953 mo
1232.39 405.953 li
1232.39 402.701 li
1256.38 402.701 li
1256.38 405.953 li
cp
f
1403.34 450.683 mo
1387.09 450.531 1370.83 450.379 1354.58 450.227 cv
1356.89 434.155 1359.21 418.083 1361.52 402.01 cv
1395.75 402.01 li
1398.28 418.234 1400.81 434.458 1403.34 450.683 cv
cp
.306981 .397192 0 0 cmyk
f
1446.42 471.534 mo
1312.11 471.534 li
1310.02 471.534 1308.32 469.839 1308.32 467.749 cv
1308.32 453.518 li
1308.32 451.427 1310.02 449.731 1312.11 449.731 cv
1446.42 449.731 li
1448.51 449.731 1450.2 451.427 1450.2 453.518 cv
1450.2 467.749 li
1450.2 469.839 1448.51 471.534 1446.42 471.534 cv
cp
f
332.508 533.55 mo
205.29 533.55 li
202.207 533.55 199.871 530.905 200.098 527.673 cv
206.381 438.388 li
206.609 435.156 209.317 432.512 212.4 432.512 cv
339.618 432.512 li
342.701 432.512 345.037 435.156 344.81 438.388 cv
338.527 527.673 li
338.299 530.905 335.591 533.55 332.508 533.55 cv
cp
.532189 .438758 0 0 cmyk
f
346.793 525.408 mo
217.111 525.408 li
217.704 437.199 li
347.386 437.199 li
346.793 525.408 li
cp
.356176 .105867 .199619 .000823987 cmyk
f
345.049 526.552 mo
215.367 526.552 li
210.293 435.215 li
339.975 435.215 li
345.049 526.552 li
cp
.281468 .0242313 .133059 0 cmyk
f
343.188 527.49 mo
213.506 527.49 li
202.672 439.284 li
332.353 439.284 li
343.188 527.49 li
cp
.194308 0 .0558175 0 cmyk
f
319.198 437.389 mo
261.095 437.389 li
260.59 434.053 li
260.124 430.977 257.221 428.459 254.138 428.459 cv
190.627 428.459 li
187.545 428.459 185.403 430.977 185.869 434.053 cv
187.221 442.982 li
191.33 470.12 li
200.088 527.957 li
200.554 531.033 203.457 533.549 206.54 533.549 cv
333.759 533.549 li
336.841 533.549 338.983 531.033 338.517 527.957 cv
325.65 442.982 li
325.184 439.906 322.281 437.389 319.198 437.389 cv
cp
.375921 .375586 0 0 cmyk
f
1762.89 304.493 mo
1761.91 303.516 1760.33 303.516 1759.35 304.493 cv
1585.67 478.176 li
804.074 468.257 li
803.91 468.257 803.746 468.274 803.585 468.306 cv
803.368 468.37 li
803.118 468.448 li
802.875 468.576 li
802.688 468.677 li
802.55 468.77 802.421 468.875 802.304 468.992 cv
635.993 656.069 li
635.016 657.045 635.016 658.627 635.993 659.604 cv
636.481 660.092 637.121 660.336 637.76 660.336 cv
638.4 660.336 639.04 660.092 639.528 659.604 cv
815.955 483.176 li
1595.52 482.783 li
1595.69 482.783 1595.85 482.766 1596.01 482.734 cv
1596.23 482.669 li
1596.48 482.592 li
1596.72 482.463 li
1596.91 482.363 li
1597.05 482.271 1597.18 482.166 1597.29 482.048 cv
1762.89 308.028 li
1763.86 307.051 1763.86 305.469 1762.89 304.493 cv
cp
.36054 .0876478 0 0 cmyk
f
631.613 647.237 mo
631.613 637.813 639.254 630.173 648.678 630.173 cv
658.102 630.173 665.742 637.813 665.742 647.237 cv
665.742 656.662 658.102 664.302 648.678 664.302 cv
639.254 664.302 631.613 656.662 631.613 647.237 cv
cp
.0356756 .026154 .0316472 0 cmyk
f
648.678 632.673 mo
640.647 632.673 634.114 639.207 634.114 647.238 cv
634.114 655.269 640.647 661.802 648.678 661.802 cv
656.709 661.802 663.242 655.269 663.242 647.238 cv
663.242 639.207 656.709 632.673 648.678 632.673 cv
cp
648.678 666.802 mo
637.89 666.802 629.114 658.025 629.114 647.238 cv
629.114 636.45 637.89 627.673 648.678 627.673 cv
659.466 627.673 668.242 636.45 668.242 647.238 cv
668.242 658.025 659.466 666.802 648.678 666.802 cv
cp
.534111 .330602 0 0 cmyk
f
1742.74 307.237 mo
1742.74 297.813 1750.38 290.173 1759.81 290.173 cv
1769.23 290.173 1776.87 297.813 1776.87 307.237 cv
1776.87 316.662 1769.23 324.302 1759.81 324.302 cv
1750.38 324.302 1742.74 316.662 1742.74 307.237 cv
cp
.0356756 .026154 .0316472 0 cmyk
f
1759.81 292.673 mo
1751.77 292.673 1745.24 299.207 1745.24 307.238 cv
1745.24 315.269 1751.77 321.802 1759.81 321.802 cv
1767.84 321.802 1774.37 315.269 1774.37 307.238 cv
1774.37 299.207 1767.84 292.673 1759.81 292.673 cv
cp
1759.81 326.802 mo
1749.02 326.802 1740.24 318.025 1740.24 307.238 cv
1740.24 296.45 1749.02 287.673 1759.81 287.673 cv
1770.59 287.673 1779.37 296.45 1779.37 307.238 cv
1779.37 318.025 1770.59 326.802 1759.81 326.802 cv
cp
.534111 .330602 0 0 cmyk
f
552.199 864.827 mo
552.199 829.88 523.869 801.55 488.922 801.55 cv
453.976 801.55 425.646 829.88 425.646 864.827 cv
425.646 899.774 453.976 928.103 488.922 928.103 cv
523.869 928.103 552.199 899.774 552.199 864.827 cv
cp
0 0 0 0 cmyk
f
438.411 820.689 mo
244.024 641.273 li
240.275 647.898 244.789 639.04 240.986 644.722 cv
237.288 650.246 244.558 646.003 240.703 651.416 cv
435.577 823.522 li
436.36 824.304 437.628 824.304 438.411 823.522 cv
439.193 822.74 439.193 821.471 438.411 820.689 cv
cp
.36054 .0876478 0 0 cmyk
f
256.631 645.285 mo
256.631 635.861 248.991 628.221 239.567 628.221 cv
230.142 628.221 222.503 635.861 222.503 645.285 cv
222.503 654.709 230.142 662.349 239.567 662.349 cv
248.991 662.349 256.631 654.709 256.631 645.285 cv
cp
.0356756 .026154 .0316472 0 cmyk
f
239.567 630.721 mo
231.536 630.721 225.003 637.254 225.003 645.285 cv
225.003 653.316 231.536 659.85 239.567 659.85 cv
247.598 659.85 254.131 653.316 254.131 645.285 cv
254.131 637.254 247.598 630.721 239.567 630.721 cv
cp
239.567 664.85 mo
228.779 664.85 220.003 656.073 220.003 645.285 cv
220.003 634.497 228.779 625.721 239.567 625.721 cv
250.355 625.721 259.131 634.497 259.131 645.285 cv
259.131 656.073 250.355 664.85 239.567 664.85 cv
cp
.534111 .330602 0 0 cmyk
f
510.361 840.846 mo
510.361 829.006 500.763 819.408 488.922 819.408 cv
477.082 819.408 467.484 829.006 467.484 840.846 cv
467.484 852.687 477.082 862.286 488.922 862.286 cv
500.763 862.286 510.361 852.687 510.361 840.846 cv
cp
.306981 .397192 0 0 cmyk
f
454.835 903.027 mo
454.835 888.366 li
454.835 877.602 463.56 868.875 474.324 868.875 cv
503.521 868.875 li
514.284 868.875 523.01 877.602 523.01 888.366 cv
523.01 903.027 li
513.443 919.449 463.643 919.449 454.835 903.027 cv
cp
f
488.922 804.376 mo
455.59 804.376 428.472 831.495 428.472 864.827 cv
428.472 898.16 455.59 925.278 488.922 925.278 cv
522.255 925.278 549.373 898.16 549.373 864.827 cv
549.373 831.495 522.255 804.376 488.922 804.376 cv
cp
488.922 934.185 mo
450.678 934.185 419.565 903.071 419.565 864.827 cv
419.565 826.583 450.678 795.469 488.922 795.469 cv
527.167 795.469 558.28 826.583 558.28 864.827 cv
558.28 903.071 527.167 934.185 488.922 934.185 cv
cp
f
1170.37 40.2519 mo
1170.37 29.749 1161.85 21.2348 1151.35 21.2348 cv
1140.85 21.2348 1132.33 29.749 1132.33 40.2519 cv
1132.33 50.7544 1140.85 59.2685 1151.35 59.2685 cv
1161.85 59.2685 1170.37 50.7544 1170.37 40.2519 cv
cp
f
1121.11 95.4077 mo
1121.11 82.4028 li
1121.11 72.8545 1128.85 65.1147 1138.4 65.1147 cv
1164.3 65.1147 li
1173.85 65.1147 1181.59 72.8545 1181.59 82.4028 cv
1181.59 95.4077 li
1173.1 109.975 1128.93 109.975 1121.11 95.4077 cv
cp
f
1151.35 7.90135 mo
1121.78 7.90135 1097.73 31.9556 1097.73 61.5229 cv
1097.73 91.0903 1121.78 115.145 1151.35 115.145 cv
1180.92 115.145 1204.97 91.0903 1204.97 61.5229 cv
1204.97 31.9556 1180.92 7.90135 1151.35 7.90135 cv
cp
1151.35 123.046 mo
1117.43 123.046 1089.83 95.4473 1089.83 61.5229 cv
1089.83 27.5991 1117.43 -1.32813e-05 1151.35 -1.32813e-05 cv
1185.27 -1.32813e-05 1212.87 27.5991 1212.87 61.5229 cv
1212.87 95.4473 1185.27 123.046 1151.35 123.046 cv
cp
f
286.596 270.875 mo
286.596 263.979 281.006 258.39 274.111 258.39 cv
267.216 258.39 261.626 263.979 261.626 270.875 cv
261.626 277.77 267.216 283.359 274.111 283.359 cv
281.006 283.359 286.596 277.77 286.596 270.875 cv
cp
f
254.259 307.086 mo
254.259 298.548 li
254.259 292.279 259.341 287.198 265.609 287.198 cv
282.612 287.198 li
288.881 287.198 293.963 292.279 293.963 298.548 cv
293.963 307.086 li
288.391 316.649 259.389 316.649 254.259 307.086 cv
cp
f
274.111 249.636 mo
254.699 249.636 238.907 265.428 238.907 284.84 cv
238.907 304.251 254.699 320.043 274.111 320.043 cv
293.523 320.043 309.315 304.251 309.315 284.84 cv
309.315 265.428 293.523 249.636 274.111 249.636 cv
cp
274.111 325.231 mo
251.839 325.231 233.72 307.111 233.72 284.84 cv
233.72 262.568 251.839 244.448 274.111 244.448 cv
296.383 244.448 314.502 262.568 314.502 284.84 cv
314.502 307.111 296.383 325.231 274.111 325.231 cv
cp
f
1115.08 1038.56 mo
1327.4 821.656 li
1327.66 821.397 1328.88 820.92 1329.21 820.92 cv
1519.66 826.547 li
1520.86 826.547 1521.82 827.517 1521.82 828.712 cv
1521.82 829.908 1520.71 832.149 1519.51 832.149 cv
1328.37 831.393 li
1118.14 1041.62 li
1117.72 1042.04 1117.17 1042.25 1116.61 1042.25 cv
1116.06 1042.25 1115.5 1042.04 1115.08 1041.62 cv
1114.24 1040.77 1114.24 1039.4 1115.08 1038.56 cv
cp
.358618 0 .00515755 0 cmyk
f
1097.38 1038.57 mo
1097.38 1047.99 1105.02 1055.63 1114.45 1055.63 cv
1123.87 1055.63 1131.51 1047.99 1131.51 1038.57 cv
1131.51 1029.15 1123.87 1021.51 1114.45 1021.51 cv
1105.02 1021.51 1097.38 1029.15 1097.38 1038.57 cv
cp
.0356756 .026154 .0316472 0 cmyk
f
1114.45 1024.01 mo
1106.42 1024.01 1099.88 1030.54 1099.88 1038.57 cv
1099.88 1046.6 1106.42 1053.13 1114.45 1053.13 cv
1122.48 1053.13 1129.01 1046.6 1129.01 1038.57 cv
1129.01 1030.54 1122.48 1024.01 1114.45 1024.01 cv
cp
1114.45 1058.13 mo
1103.66 1058.13 1094.88 1049.36 1094.88 1038.57 cv
1094.88 1027.78 1103.66 1019.01 1114.45 1019.01 cv
1125.24 1019.01 1134.01 1027.78 1134.01 1038.57 cv
1134.01 1049.36 1125.24 1058.13 1114.45 1058.13 cv
cp
.534111 .330602 0 0 cmyk
f
1563.5 828.991 mo
1563.5 804.779 1543.87 785.151 1519.66 785.151 cv
1495.45 785.151 1475.82 804.779 1475.82 828.991 cv
1475.82 853.203 1495.45 872.83 1519.66 872.83 cv
1543.87 872.83 1563.5 853.203 1563.5 828.991 cv
cp
.0356756 .026154 .0316472 0 cmyk
f
1519.66 787.867 mo
1497.48 787.867 1479.43 805.915 1479.43 828.099 cv
1479.43 850.284 1497.48 868.332 1519.66 868.332 cv
1541.84 868.332 1559.89 850.284 1559.89 828.099 cv
1559.89 805.915 1541.84 787.867 1519.66 787.867 cv
cp
1519.66 874.26 mo
1494.21 874.26 1473.5 853.552 1473.5 828.099 cv
1473.5 802.646 1494.21 781.938 1519.66 781.938 cv
1545.11 781.938 1565.82 802.646 1565.82 828.099 cv
1565.82 853.552 1545.11 874.26 1519.66 874.26 cv
cp
.306981 .397192 0 0 cmyk
f
1539.22 815.369 mo
1539.22 804.564 1530.47 795.805 1519.66 795.805 cv
1508.86 795.805 1500.1 804.564 1500.1 815.369 cv
1500.1 826.173 1512.47 858.887 1519.66 858.887 cv
1526.45 858.887 1539.22 826.173 1539.22 815.369 cv
cp
f
1530.84 815.369 mo
1530.84 809.195 1525.83 804.19 1519.66 804.19 cv
1513.49 804.19 1508.48 809.195 1508.48 815.369 cv
1508.48 821.542 1513.49 826.547 1519.66 826.547 cv
1525.83 826.547 1530.84 821.542 1530.84 815.369 cv
cp
.0356756 .026154 .0316472 0 cmyk
f
249.669 1068.62 mo
274.133 1068.62 li
274.133 1063.06 li
274.133 1062.34 274.631 1062 275.753 1062 cv
276.334 1062 li
277.456 1062 277.954 1062.34 277.954 1063.06 cv
277.954 1080.07 li
277.954 1080.8 277.456 1081.1 276.334 1081.1 cv
275.753 1081.1 li
274.631 1081.1 274.133 1080.8 274.133 1080.07 cv
274.133 1073.41 li
253.407 1073.41 li
254.445 1080.2 li
254.445 1081.02 252.659 1081.27 251.746 1081.27 cv
251.206 1081.27 250.915 1080.97 250.791 1080.37 cv
248.756 1070.12 li
248.756 1069.48 249.171 1068.62 249.669 1068.62 cv
cp
.485237 .544091 0 0 cmyk
f
305.03 1076.61 mo
312.797 1076.61 316.037 1074.35 316.037 1071.57 cv
316.037 1068.79 312.797 1066.48 305.03 1066.48 cv
297.264 1066.48 294.024 1068.79 294.024 1071.57 cv
294.024 1074.35 297.264 1076.61 305.03 1076.61 cv
cp
305.03 1061.61 mo
314.957 1061.61 319.859 1065.89 319.859 1071.57 cv
319.859 1077.21 314.957 1081.44 305.03 1081.44 cv
295.104 1081.44 290.202 1077.21 290.202 1071.57 cv
290.202 1065.89 295.104 1061.61 305.03 1061.61 cv
cp
f
346.645 1076.61 mo
354.411 1076.61 357.651 1074.35 357.651 1071.57 cv
357.651 1068.79 354.411 1066.48 346.645 1066.48 cv
338.878 1066.48 335.638 1068.79 335.638 1071.57 cv
335.638 1074.35 338.878 1076.61 346.645 1076.61 cv
cp
346.645 1061.61 mo
356.571 1061.61 361.473 1065.89 361.473 1071.57 cv
361.473 1077.21 356.571 1081.44 346.645 1081.44 cv
336.718 1081.44 331.817 1077.21 331.817 1071.57 cv
331.817 1065.89 336.718 1061.61 346.645 1061.61 cv
cp
f
374.51 1068.62 mo
398.974 1068.62 li
398.974 1063.06 li
398.974 1062.34 399.473 1062 400.594 1062 cv
401.175 1062 li
402.297 1062 402.795 1062.34 402.795 1063.06 cv
402.795 1080.07 li
402.795 1080.8 402.297 1081.1 401.175 1081.1 cv
400.594 1081.1 li
399.473 1081.1 398.974 1080.8 398.974 1080.07 cv
398.974 1073.41 li
378.248 1073.41 li
379.286 1080.2 li
379.286 1081.02 377.5 1081.27 376.587 1081.27 cv
376.047 1081.27 375.756 1080.97 375.632 1080.37 cv
373.597 1070.12 li
373.597 1069.48 374.012 1068.62 374.51 1068.62 cv
cp
f
429.871 1076.61 mo
437.638 1076.61 440.878 1074.35 440.878 1071.57 cv
440.878 1068.79 437.638 1066.48 429.871 1066.48 cv
422.105 1066.48 418.864 1068.79 418.864 1071.57 cv
418.864 1074.35 422.105 1076.61 429.871 1076.61 cv
cp
429.871 1061.61 mo
439.798 1061.61 444.699 1065.89 444.699 1071.57 cv
444.699 1077.21 439.798 1081.44 429.871 1081.44 cv
419.944 1081.44 415.043 1077.21 415.043 1071.57 cv
415.043 1065.89 419.944 1061.61 429.871 1061.61 cv
cp
f
457.736 1068.62 mo
482.2 1068.62 li
482.2 1063.06 li
482.2 1062.34 482.699 1062 483.82 1062 cv
484.401 1062 li
485.524 1062 486.022 1062.34 486.022 1063.06 cv
486.022 1080.07 li
486.022 1080.8 485.524 1081.1 484.401 1081.1 cv
483.82 1081.1 li
482.699 1081.1 482.2 1080.8 482.2 1080.07 cv
482.2 1073.41 li
461.475 1073.41 li
462.513 1080.2 li
462.513 1081.02 460.727 1081.27 459.814 1081.27 cv
459.274 1081.27 458.983 1080.97 458.859 1080.37 cv
456.823 1070.12 li
456.823 1069.48 457.238 1068.62 457.736 1068.62 cv
cp
f
513.099 1076.61 mo
520.865 1076.61 524.106 1074.35 524.106 1071.57 cv
524.106 1068.79 520.865 1066.48 513.099 1066.48 cv
505.332 1066.48 502.092 1068.79 502.092 1071.57 cv
502.092 1074.35 505.332 1076.61 513.099 1076.61 cv
cp
513.099 1061.61 mo
523.026 1061.61 527.927 1065.89 527.927 1071.57 cv
527.927 1077.21 523.026 1081.44 513.099 1081.44 cv
503.172 1081.44 498.271 1077.21 498.271 1071.57 cv
498.271 1065.89 503.172 1061.61 513.099 1061.61 cv
cp
f
540.964 1068.62 mo
565.428 1068.62 li
565.428 1063.06 li
565.428 1062.34 565.926 1062 567.048 1062 cv
567.629 1062 li
568.751 1062 569.249 1062.34 569.249 1063.06 cv
569.249 1080.07 li
569.249 1080.8 568.751 1081.1 567.629 1081.1 cv
567.048 1081.1 li
565.926 1081.1 565.428 1080.8 565.428 1080.07 cv
565.428 1073.41 li
544.702 1073.41 li
545.74 1080.2 li
545.74 1081.02 543.954 1081.27 543.041 1081.27 cv
542.501 1081.27 542.21 1080.97 542.086 1080.37 cv
540.051 1070.12 li
540.051 1069.48 540.466 1068.62 540.964 1068.62 cv
cp
f
596.325 1076.61 mo
604.092 1076.61 607.332 1074.35 607.332 1071.57 cv
607.332 1068.79 604.092 1066.48 596.325 1066.48 cv
588.559 1066.48 585.318 1068.79 585.318 1071.57 cv
585.318 1074.35 588.559 1076.61 596.325 1076.61 cv
cp
596.325 1061.61 mo
606.252 1061.61 611.153 1065.89 611.153 1071.57 cv
611.153 1077.21 606.252 1081.44 596.325 1081.44 cv
586.399 1081.44 581.497 1077.21 581.497 1071.57 cv
581.497 1065.89 586.399 1061.61 596.325 1061.61 cv
cp
f
637.94 1076.61 mo
645.706 1076.61 648.946 1074.35 648.946 1071.57 cv
648.946 1068.79 645.706 1066.48 637.94 1066.48 cv
630.173 1066.48 626.933 1068.79 626.933 1071.57 cv
626.933 1074.35 630.173 1076.61 637.94 1076.61 cv
cp
637.94 1061.61 mo
647.866 1061.61 652.768 1065.89 652.768 1071.57 cv
652.768 1077.21 647.866 1081.44 637.94 1081.44 cv
628.013 1081.44 623.111 1077.21 623.111 1071.57 cv
623.111 1065.89 628.013 1061.61 637.94 1061.61 cv
cp
f
679.553 1076.61 mo
687.319 1076.61 690.56 1074.35 690.56 1071.57 cv
690.56 1068.79 687.319 1066.48 679.553 1066.48 cv
671.786 1066.48 668.546 1068.79 668.546 1071.57 cv
668.546 1074.35 671.786 1076.61 679.553 1076.61 cv
cp
679.553 1061.61 mo
689.48 1061.61 694.381 1065.89 694.381 1071.57 cv
694.381 1077.21 689.48 1081.44 679.553 1081.44 cv
669.626 1081.44 664.725 1077.21 664.725 1071.57 cv
664.725 1065.89 669.626 1061.61 679.553 1061.61 cv
cp
f
263.417 1044.83 mo
271.184 1044.83 274.424 1042.56 274.424 1039.78 cv
274.424 1037.01 271.184 1034.7 263.417 1034.7 cv
255.651 1034.7 252.41 1037.01 252.41 1039.78 cv
252.41 1042.56 255.651 1044.83 263.417 1044.83 cv
cp
263.417 1029.83 mo
273.344 1029.83 278.245 1034.1 278.245 1039.78 cv
278.245 1045.43 273.344 1049.66 263.417 1049.66 cv
253.49 1049.66 248.589 1045.43 248.589 1039.78 cv
248.589 1034.1 253.49 1029.83 263.417 1029.83 cv
cp
f
291.282 1036.84 mo
315.746 1036.84 li
315.746 1031.28 li
315.746 1030.55 316.244 1030.21 317.366 1030.21 cv
317.947 1030.21 li
319.069 1030.21 319.568 1030.55 319.568 1031.28 cv
319.568 1048.29 li
319.568 1049.02 319.069 1049.31 317.947 1049.31 cv
317.366 1049.31 li
316.244 1049.31 315.746 1049.02 315.746 1048.29 cv
315.746 1041.62 li
295.021 1041.62 li
296.059 1048.42 li
296.059 1049.23 294.273 1049.49 293.359 1049.49 cv
292.819 1049.49 292.528 1049.19 292.404 1048.59 cv
290.369 1038.33 li
290.369 1037.69 290.784 1036.84 291.282 1036.84 cv
cp
f
346.645 1044.83 mo
354.411 1044.83 357.651 1042.56 357.651 1039.78 cv
357.651 1037.01 354.411 1034.7 346.645 1034.7 cv
338.878 1034.7 335.638 1037.01 335.638 1039.78 cv
335.638 1042.56 338.878 1044.83 346.645 1044.83 cv
cp
346.645 1029.83 mo
356.571 1029.83 361.473 1034.1 361.473 1039.78 cv
361.473 1045.43 356.571 1049.66 346.645 1049.66 cv
336.718 1049.66 331.817 1045.43 331.817 1039.78 cv
331.817 1034.1 336.718 1029.83 346.645 1029.83 cv
cp
f
388.258 1044.83 mo
396.025 1044.83 399.265 1042.56 399.265 1039.78 cv
399.265 1037.01 396.025 1034.7 388.258 1034.7 cv
380.491 1034.7 377.251 1037.01 377.251 1039.78 cv
377.251 1042.56 380.491 1044.83 388.258 1044.83 cv
cp
388.258 1029.83 mo
398.185 1029.83 403.086 1034.1 403.086 1039.78 cv
403.086 1045.43 398.185 1049.66 388.258 1049.66 cv
378.331 1049.66 373.43 1045.43 373.43 1039.78 cv
373.43 1034.1 378.331 1029.83 388.258 1029.83 cv
cp
f
429.871 1044.83 mo
437.638 1044.83 440.878 1042.56 440.878 1039.78 cv
440.878 1037.01 437.638 1034.7 429.871 1034.7 cv
422.105 1034.7 418.864 1037.01 418.864 1039.78 cv
418.864 1042.56 422.105 1044.83 429.871 1044.83 cv
cp
429.871 1029.83 mo
439.798 1029.83 444.699 1034.1 444.699 1039.78 cv
444.699 1045.43 439.798 1049.66 429.871 1049.66 cv
419.944 1049.66 415.043 1045.43 415.043 1039.78 cv
415.043 1034.1 419.944 1029.83 429.871 1029.83 cv
cp
f
457.736 1036.84 mo
482.2 1036.84 li
482.2 1031.28 li
482.2 1030.55 482.699 1030.21 483.82 1030.21 cv
484.401 1030.21 li
485.524 1030.21 486.022 1030.55 486.022 1031.28 cv
486.022 1048.29 li
486.022 1049.02 485.524 1049.31 484.401 1049.31 cv
483.82 1049.31 li
482.699 1049.31 482.2 1049.02 482.2 1048.29 cv
482.2 1041.62 li
461.475 1041.62 li
462.513 1048.42 li
462.513 1049.23 460.727 1049.49 459.814 1049.49 cv
459.274 1049.49 458.983 1049.19 458.859 1048.59 cv
456.823 1038.33 li
456.823 1037.69 457.238 1036.84 457.736 1036.84 cv
cp
f
513.099 1044.83 mo
520.865 1044.83 524.106 1042.56 524.106 1039.78 cv
524.106 1037.01 520.865 1034.7 513.099 1034.7 cv
505.332 1034.7 502.092 1037.01 502.092 1039.78 cv
502.092 1042.56 505.332 1044.83 513.099 1044.83 cv
cp
513.099 1029.83 mo
523.026 1029.83 527.927 1034.1 527.927 1039.78 cv
527.927 1045.43 523.026 1049.66 513.099 1049.66 cv
503.172 1049.66 498.271 1045.43 498.271 1039.78 cv
498.271 1034.1 503.172 1029.83 513.099 1029.83 cv
cp
f
540.964 1036.84 mo
565.428 1036.84 li
565.428 1031.28 li
565.428 1030.55 565.926 1030.21 567.048 1030.21 cv
567.629 1030.21 li
568.751 1030.21 569.249 1030.55 569.249 1031.28 cv
569.249 1048.29 li
569.249 1049.02 568.751 1049.31 567.629 1049.31 cv
567.048 1049.31 li
565.926 1049.31 565.428 1049.02 565.428 1048.29 cv
565.428 1041.62 li
544.702 1041.62 li
545.74 1048.42 li
545.74 1049.23 543.954 1049.49 543.041 1049.49 cv
542.501 1049.49 542.21 1049.19 542.086 1048.59 cv
540.051 1038.33 li
540.051 1037.69 540.466 1036.84 540.964 1036.84 cv
cp
f
582.577 1036.84 mo
607.041 1036.84 li
607.041 1031.28 li
607.041 1030.55 607.539 1030.21 608.661 1030.21 cv
609.242 1030.21 li
610.364 1030.21 610.862 1030.55 610.862 1031.28 cv
610.862 1048.29 li
610.862 1049.02 610.364 1049.31 609.242 1049.31 cv
608.661 1049.31 li
607.539 1049.31 607.041 1049.02 607.041 1048.29 cv
607.041 1041.62 li
586.316 1041.62 li
587.354 1048.42 li
587.354 1049.23 585.568 1049.49 584.654 1049.49 cv
584.114 1049.49 583.823 1049.19 583.699 1048.59 cv
581.664 1038.33 li
581.664 1037.69 582.079 1036.84 582.577 1036.84 cv
cp
f
637.94 1044.83 mo
645.706 1044.83 648.946 1042.56 648.946 1039.78 cv
648.946 1037.01 645.706 1034.7 637.94 1034.7 cv
630.173 1034.7 626.933 1037.01 626.933 1039.78 cv
626.933 1042.56 630.173 1044.83 637.94 1044.83 cv
cp
637.94 1029.83 mo
647.866 1029.83 652.768 1034.1 652.768 1039.78 cv
652.768 1045.43 647.866 1049.66 637.94 1049.66 cv
628.013 1049.66 623.111 1045.43 623.111 1039.78 cv
623.111 1034.1 628.013 1029.83 637.94 1029.83 cv
cp
f
665.805 1036.84 mo
690.269 1036.84 li
690.269 1031.28 li
690.269 1030.55 690.768 1030.21 691.889 1030.21 cv
692.47 1030.21 li
693.592 1030.21 694.09 1030.55 694.09 1031.28 cv
694.09 1048.29 li
694.09 1049.02 693.592 1049.31 692.47 1049.31 cv
691.889 1049.31 li
690.768 1049.31 690.269 1049.02 690.269 1048.29 cv
690.269 1041.62 li
669.543 1041.62 li
670.581 1048.42 li
670.581 1049.23 668.795 1049.49 667.882 1049.49 cv
667.342 1049.49 667.051 1049.19 666.927 1048.59 cv
664.892 1038.33 li
664.892 1037.69 665.307 1036.84 665.805 1036.84 cv
cp
f
2133.55 613.302 mo
2133.55 637.766 li
2139.1 637.766 li
2139.83 637.766 2140.17 638.264 2140.17 639.386 cv
2140.17 639.967 li
2140.17 641.089 2139.83 641.587 2139.1 641.587 cv
2122.09 641.587 li
2121.37 641.587 2121.07 641.089 2121.07 639.967 cv
2121.07 639.386 li
2121.07 638.264 2121.37 637.766 2122.09 637.766 cv
2128.76 637.766 li
2128.76 617.041 li
2121.96 618.079 li
2121.15 618.079 2120.9 616.292 2120.9 615.379 cv
2120.9 614.839 2121.2 614.548 2121.79 614.424 cv
2132.05 612.389 li
2132.69 612.389 2133.55 612.804 2133.55 613.302 cv
cp
f
2125.56 668.664 mo
2125.56 676.43 2127.82 679.67 2130.6 679.67 cv
2133.38 679.67 2135.68 676.43 2135.68 668.664 cv
2135.68 660.897 2133.38 657.657 2130.6 657.657 cv
2127.82 657.657 2125.56 660.897 2125.56 668.664 cv
cp
2140.56 668.664 mo
2140.56 678.59 2136.28 683.492 2130.6 683.492 cv
2124.96 683.492 2120.73 678.59 2120.73 668.664 cv
2120.73 658.737 2124.96 653.835 2130.6 653.835 cv
2136.28 653.835 2140.56 658.737 2140.56 668.664 cv
cp
f
2125.56 710.278 mo
2125.56 718.044 2127.82 721.285 2130.6 721.285 cv
2133.38 721.285 2135.68 718.044 2135.68 710.278 cv
2135.68 702.511 2133.38 699.271 2130.6 699.271 cv
2127.82 699.271 2125.56 702.511 2125.56 710.278 cv
cp
2140.56 710.278 mo
2140.56 720.205 2136.28 725.106 2130.6 725.106 cv
2124.96 725.106 2120.73 720.205 2120.73 710.278 cv
2120.73 700.351 2124.96 695.45 2130.6 695.45 cv
2136.28 695.45 2140.56 700.351 2140.56 710.278 cv
cp
f
2133.55 738.143 mo
2133.55 762.607 li
2139.1 762.607 li
2139.83 762.607 2140.17 763.106 2140.17 764.227 cv
2140.17 764.808 li
2140.17 765.93 2139.83 766.428 2139.1 766.428 cv
2122.09 766.428 li
2121.37 766.428 2121.07 765.93 2121.07 764.808 cv
2121.07 764.227 li
2121.07 763.106 2121.37 762.607 2122.09 762.607 cv
2128.76 762.607 li
2128.76 741.881 li
2121.96 742.919 li
2121.15 742.919 2120.9 741.133 2120.9 740.22 cv
2120.9 739.68 2121.2 739.389 2121.79 739.265 cv
2132.05 737.23 li
2132.69 737.23 2133.55 737.645 2133.55 738.143 cv
cp
f
2125.56 793.504 mo
2125.56 801.271 2127.82 804.511 2130.6 804.511 cv
2133.38 804.511 2135.68 801.271 2135.68 793.504 cv
2135.68 785.738 2133.38 782.498 2130.6 782.498 cv
2127.82 782.498 2125.56 785.738 2125.56 793.504 cv
cp
2140.56 793.504 mo
2140.56 803.431 2136.28 808.333 2130.6 808.333 cv
2124.96 808.333 2120.73 803.431 2120.73 793.504 cv
2120.73 783.578 2124.96 778.676 2130.6 778.676 cv
2136.28 778.676 2140.56 783.578 2140.56 793.504 cv
cp
f
2133.55 821.37 mo
2133.55 845.833 li
2139.1 845.833 li
2139.83 845.833 2140.17 846.333 2140.17 847.454 cv
2140.17 848.035 li
2140.17 849.157 2139.83 849.655 2139.1 849.655 cv
2122.09 849.655 li
2121.37 849.655 2121.07 849.157 2121.07 848.035 cv
2121.07 847.454 li
2121.07 846.333 2121.37 845.833 2122.09 845.833 cv
2128.76 845.833 li
2128.76 825.108 li
2121.96 826.146 li
2121.15 826.146 2120.9 824.36 2120.9 823.447 cv
2120.9 822.907 2121.2 822.616 2121.79 822.492 cv
2132.05 820.457 li
2132.69 820.457 2133.55 820.872 2133.55 821.37 cv
cp
f
2125.56 876.732 mo
2125.56 884.499 2127.82 887.739 2130.6 887.739 cv
2133.38 887.739 2135.68 884.499 2135.68 876.732 cv
2135.68 868.965 2133.38 865.725 2130.6 865.725 cv
2127.82 865.725 2125.56 868.965 2125.56 876.732 cv
cp
2140.56 876.732 mo
2140.56 886.659 2136.28 891.56 2130.6 891.56 cv
2124.96 891.56 2120.73 886.659 2120.73 876.732 cv
2120.73 866.805 2124.96 861.904 2130.6 861.904 cv
2136.28 861.904 2140.56 866.805 2140.56 876.732 cv
cp
f
2133.55 904.597 mo
2133.55 929.061 li
2139.1 929.061 li
2139.83 929.061 2140.17 929.559 2140.17 930.681 cv
2140.17 931.262 li
2140.17 932.384 2139.83 932.882 2139.1 932.882 cv
2122.09 932.882 li
2121.37 932.882 2121.07 932.384 2121.07 931.262 cv
2121.07 930.681 li
2121.07 929.559 2121.37 929.061 2122.09 929.061 cv
2128.76 929.061 li
2128.76 908.335 li
2121.96 909.374 li
2121.15 909.374 2120.9 907.587 2120.9 906.674 cv
2120.9 906.134 2121.2 905.843 2121.79 905.719 cv
2132.05 903.684 li
2132.69 903.684 2133.55 904.099 2133.55 904.597 cv
cp
f
2125.56 959.958 mo
2125.56 967.725 2127.82 970.965 2130.6 970.965 cv
2133.38 970.965 2135.68 967.725 2135.68 959.958 cv
2135.68 952.192 2133.38 948.952 2130.6 948.952 cv
2127.82 948.952 2125.56 952.192 2125.56 959.958 cv
cp
2140.56 959.958 mo
2140.56 969.885 2136.28 974.787 2130.6 974.787 cv
2124.96 974.787 2120.73 969.885 2120.73 959.958 cv
2120.73 950.032 2124.96 945.13 2130.6 945.13 cv
2136.28 945.13 2140.56 950.032 2140.56 959.958 cv
cp
f
2125.56 1001.57 mo
2125.56 1009.34 2127.82 1012.58 2130.6 1012.58 cv
2133.38 1012.58 2135.68 1009.34 2135.68 1001.57 cv
2135.68 993.806 2133.38 990.566 2130.6 990.566 cv
2127.82 990.566 2125.56 993.806 2125.56 1001.57 cv
cp
2140.56 1001.57 mo
2140.56 1011.5 2136.28 1016.4 2130.6 1016.4 cv
2124.96 1016.4 2120.73 1011.5 2120.73 1001.57 cv
2120.73 991.646 2124.96 986.745 2130.6 986.745 cv
2136.28 986.745 2140.56 991.646 2140.56 1001.57 cv
cp
f
2125.56 1043.19 mo
2125.56 1050.95 2127.82 1054.19 2130.6 1054.19 cv
2133.38 1054.19 2135.68 1050.95 2135.68 1043.19 cv
2135.68 1035.42 2133.38 1032.18 2130.6 1032.18 cv
2127.82 1032.18 2125.56 1035.42 2125.56 1043.19 cv
cp
2140.56 1043.19 mo
2140.56 1053.11 2136.28 1058.01 2130.6 1058.01 cv
2124.96 1058.01 2120.73 1053.11 2120.73 1043.19 cv
2120.73 1033.26 2124.96 1028.36 2130.6 1028.36 cv
2136.28 1028.36 2140.56 1033.26 2140.56 1043.19 cv
cp
f
2157.34 627.05 mo
2157.34 634.817 2159.61 638.057 2162.38 638.057 cv
2165.16 638.057 2167.47 634.817 2167.47 627.05 cv
2167.47 619.284 2165.16 616.043 2162.38 616.043 cv
2159.61 616.043 2157.34 619.284 2157.34 627.05 cv
cp
2172.34 627.05 mo
2172.34 636.977 2168.07 641.878 2162.38 641.878 cv
2156.74 641.878 2152.51 636.977 2152.51 627.05 cv
2152.51 617.124 2156.74 612.222 2162.38 612.222 cv
2168.07 612.222 2172.34 617.124 2172.34 627.05 cv
cp
f
2165.33 654.916 mo
2165.33 679.379 li
2170.89 679.379 li
2171.62 679.379 2171.96 679.877 2171.96 681 cv
2171.96 681.581 li
2171.96 682.703 2171.62 683.201 2170.89 683.201 cv
2153.88 683.201 li
2153.15 683.201 2152.85 682.703 2152.85 681.581 cv
2152.85 681 li
2152.85 679.877 2153.15 679.379 2153.88 679.379 cv
2160.55 679.379 li
2160.55 658.654 li
2153.75 659.692 li
2152.94 659.692 2152.68 657.906 2152.68 656.993 cv
2152.68 656.453 2152.98 656.162 2153.58 656.038 cv
2163.84 654.002 li
2164.48 654.002 2165.33 654.417 2165.33 654.916 cv
cp
f
2157.34 710.278 mo
2157.34 718.044 2159.61 721.285 2162.38 721.285 cv
2165.16 721.285 2167.47 718.044 2167.47 710.278 cv
2167.47 702.511 2165.16 699.271 2162.38 699.271 cv
2159.61 699.271 2157.34 702.511 2157.34 710.278 cv
cp
2172.34 710.278 mo
2172.34 720.205 2168.07 725.106 2162.38 725.106 cv
2156.74 725.106 2152.51 720.205 2152.51 710.278 cv
2152.51 700.351 2156.74 695.45 2162.38 695.45 cv
2168.07 695.45 2172.34 700.351 2172.34 710.278 cv
cp
f
2157.34 751.891 mo
2157.34 759.658 2159.61 762.898 2162.38 762.898 cv
2165.16 762.898 2167.47 759.658 2167.47 751.891 cv
2167.47 744.125 2165.16 740.884 2162.38 740.884 cv
2159.61 740.884 2157.34 744.125 2157.34 751.891 cv
cp
2172.34 751.891 mo
2172.34 761.818 2168.07 766.719 2162.38 766.719 cv
2156.74 766.719 2152.51 761.818 2152.51 751.891 cv
2152.51 741.964 2156.74 737.063 2162.38 737.063 cv
2168.07 737.063 2172.34 741.964 2172.34 751.891 cv
cp
f
2157.34 793.504 mo
2157.34 801.271 2159.61 804.511 2162.38 804.511 cv
2165.16 804.511 2167.47 801.271 2167.47 793.504 cv
2167.47 785.738 2165.16 782.498 2162.38 782.498 cv
2159.61 782.498 2157.34 785.738 2157.34 793.504 cv
cp
2172.34 793.504 mo
2172.34 803.431 2168.07 808.333 2162.38 808.333 cv
2156.74 808.333 2152.51 803.431 2152.51 793.504 cv
2152.51 783.578 2156.74 778.676 2162.38 778.676 cv
2168.07 778.676 2172.34 783.578 2172.34 793.504 cv
cp
f
2165.33 821.37 mo
2165.33 845.833 li
2170.89 845.833 li
2171.62 845.833 2171.96 846.333 2171.96 847.454 cv
2171.96 848.035 li
2171.96 849.157 2171.62 849.655 2170.89 849.655 cv
2153.88 849.655 li
2153.15 849.655 2152.85 849.157 2152.85 848.035 cv
2152.85 847.454 li
2152.85 846.333 2153.15 845.833 2153.88 845.833 cv
2160.55 845.833 li
2160.55 825.108 li
2153.75 826.146 li
2152.94 826.146 2152.68 824.36 2152.68 823.447 cv
2152.68 822.907 2152.98 822.616 2153.58 822.492 cv
2163.84 820.457 li
2164.48 820.457 2165.33 820.872 2165.33 821.37 cv
cp
f
2157.34 876.732 mo
2157.34 884.499 2159.61 887.739 2162.38 887.739 cv
2165.16 887.739 2167.47 884.499 2167.47 876.732 cv
2167.47 868.965 2165.16 865.725 2162.38 865.725 cv
2159.61 865.725 2157.34 868.965 2157.34 876.732 cv
cp
2172.34 876.732 mo
2172.34 886.659 2168.07 891.56 2162.38 891.56 cv
2156.74 891.56 2152.51 886.659 2152.51 876.732 cv
2152.51 866.805 2156.74 861.904 2162.38 861.904 cv
2168.07 861.904 2172.34 866.805 2172.34 876.732 cv
cp
f
2165.33 904.597 mo
2165.33 929.061 li
2170.89 929.061 li
2171.62 929.061 2171.96 929.559 2171.96 930.681 cv
2171.96 931.262 li
2171.96 932.384 2171.62 932.882 2170.89 932.882 cv
2153.88 932.882 li
2153.15 932.882 2152.85 932.384 2152.85 931.262 cv
2152.85 930.681 li
2152.85 929.559 2153.15 929.061 2153.88 929.061 cv
2160.55 929.061 li
2160.55 908.335 li
2153.75 909.374 li
2152.94 909.374 2152.68 907.587 2152.68 906.674 cv
2152.68 906.134 2152.98 905.843 2153.58 905.719 cv
2163.84 903.684 li
2164.48 903.684 2165.33 904.099 2165.33 904.597 cv
cp
f
2165.33 946.21 mo
2165.33 970.674 li
2170.89 970.674 li
2171.62 970.674 2171.96 971.172 2171.96 972.294 cv
2171.96 972.875 li
2171.96 973.998 2171.62 974.496 2170.89 974.496 cv
2153.88 974.496 li
2153.15 974.496 2152.85 973.998 2152.85 972.875 cv
2152.85 972.294 li
2152.85 971.172 2153.15 970.674 2153.88 970.674 cv
2160.55 970.674 li
2160.55 949.949 li
2153.75 950.987 li
2152.94 950.987 2152.68 949.201 2152.68 948.288 cv
2152.68 947.748 2152.98 947.457 2153.58 947.333 cv
2163.84 945.297 li
2164.48 945.297 2165.33 945.712 2165.33 946.21 cv
cp
f
2157.34 1001.57 mo
2157.34 1009.34 2159.61 1012.58 2162.38 1012.58 cv
2165.16 1012.58 2167.47 1009.34 2167.47 1001.57 cv
2167.47 993.806 2165.16 990.566 2162.38 990.566 cv
2159.61 990.566 2157.34 993.806 2157.34 1001.57 cv
cp
2172.34 1001.57 mo
2172.34 1011.5 2168.07 1016.4 2162.38 1016.4 cv
2156.74 1016.4 2152.51 1011.5 2152.51 1001.57 cv
2152.51 991.646 2156.74 986.745 2162.38 986.745 cv
2168.07 986.745 2172.34 991.646 2172.34 1001.57 cv
cp
f
2165.33 1029.44 mo
2165.33 1053.9 li
2170.89 1053.9 li
2171.62 1053.9 2171.96 1054.4 2171.96 1055.52 cv
2171.96 1056.1 li
2171.96 1057.23 2171.62 1057.72 2170.89 1057.72 cv
2153.88 1057.72 li
2153.15 1057.72 2152.85 1057.23 2152.85 1056.1 cv
2152.85 1055.52 li
2152.85 1054.4 2153.15 1053.9 2153.88 1053.9 cv
2160.55 1053.9 li
2160.55 1033.18 li
2153.75 1034.21 li
2152.94 1034.21 2152.68 1032.43 2152.68 1031.52 cv
2152.68 1030.98 2152.98 1030.68 2153.58 1030.56 cv
2163.84 1028.52 li
2164.48 1028.52 2165.33 1028.94 2165.33 1029.44 cv
cp
f
493.859 484.338 mo
533.517 426.234 li
536.258 422.322 535.412 416.857 531.629 414.025 cv
527.846 411.195 522.557 412.069 519.818 415.98 cv
490.049 458.702 li
488.479 452.367 456.636 434.011 411.839 416.841 cv
493.859 484.338 li
482.474 469.572 li
493.859 484.338 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
412.376 413.089 mo
408.959 416.271 li
408.959 416.271 354.518 375.14 402.553 402.206 cv
402.553 402.206 388.59 365.577 412.376 413.089 cv
cp
.0345769 .188144 .18085 0 cmyk
f
536.77 517.556 mo
548.17 409.749 li
540.431 408.873 536.77 409.385 536.77 409.385 cv
503.674 410.595 502.345 474.015 496.815 517.85 cv
536.77 517.556 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
513.297 537.207 mo
536.77 535.084 li
536.77 535.084 607 432.917 559.337 413.169 cv
559.337 413.169 539.141 405.972 521.775 424.432 cv
521.775 424.432 505.144 443.569 506.452 473.732 cv
513.297 537.207 li
cp
.417182 .0220645 .087892 0 cmyk
f
553.508 414.867 mo
544.783 413.141 li
549.041 390.132 li
557.768 391.857 li
553.508 414.867 li
cp
.0345769 .188144 .18085 0 cmyk
f
532.711 354.374 mo
532.711 354.374 528.612 363.308 528.05 363.554 cv
528.05 363.554 520.572 374.178 534.01 366.689 cv
534.01 366.689 533.439 402.354 548.299 389.985 cv
557.768 391.857 li
557.768 391.857 579.195 383.379 578.954 351.509 cv
578.954 351.509 578.444 337.069 563.245 333.063 cv
563.245 333.063 544.284 330.186 532.711 354.374 cv
cp
f
544.544 354.447 mo
544.222 356.2 543.175 357.466 542.212 357.277 cv
541.248 357.086 540.732 355.508 541.056 353.754 cv
541.38 352.002 542.424 350.733 543.388 350.925 cv
544.35 351.116 544.87 352.691 544.544 354.447 cv
cp
.907195 .757046 .419013 .415869 cmyk
f
546.888 322.246 mo
546.888 322.246 512.148 329.438 516.255 340.753 cv
516.255 340.753 519.443 349.572 537.839 347.868 cv
537.839 347.868 557.244 343.517 552.949 353.703 cv
549.911 363.605 li
555.899 365.679 li
555.899 365.679 563.261 344.172 564.673 367.414 cv
564.673 367.414 555.908 386.159 569.081 382.885 cv
569.081 382.885 589.635 369.501 585.935 346.699 cv
585.935 346.699 584.685 335.771 573.972 327.602 cv
573.972 327.602 561.957 318.998 546.888 322.246 cv
cp
.512474 .634638 .726619 .729702 cmyk
f
566.495 364.484 mo
565.04 367.915 561.962 369.838 559.621 368.778 cv
557.276 367.716 556.563 364.071 558.022 360.637 cv
559.477 357.203 562.56 355.281 564.902 356.342 cv
567.24 357.406 567.961 361.049 566.495 364.484 cv
cp
.131594 .252354 .247135 .0134585 cmyk
f
514.517 484.198 mo
509.56 442.101 536.446 422.118 536.446 422.118 cv
555.04 411.399 556.33 419.469 563.544 420.29 cv
560.857 419.462 548.665 403.908 527.147 426.793 cv
527.147 426.793 510.517 445.933 511.82 476.094 cv
518.368 536.749 li
521.354 536.478 li
514.517 484.198 li
cp
.105531 .0121157 .0295109 0 cmyk
f
544.969 412.074 mo
559.864 415.059 li
541.089 421.47 li
544.969 412.074 li
cp
.382177 .152834 .185061 .00708019 cmyk
f
544.969 412.074 mo
558.288 414.707 li
542.331 418.462 li
544.969 412.074 li
cp
.105531 .0121157 .0295109 0 cmyk
f
542.797 525.743 mo
552.466 412.363 li
560.248 412.605 563.804 413.644 563.804 413.644 cv
596.417 419.589 590.166 479.625 589.751 523.829 cv
542.797 525.743 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
520.463 567.599 mo
512.387 543.906 li
407.755 548.171 li
407.58 548.02 407.401 547.887 407.213 547.792 cv
379.266 695.666 li
422.666 602.961 li
427.037 593.14 422.476 577.556 419.797 568.392 cv
475.133 589.451 520.463 567.599 520.463 567.599 cv
cp
f
382.748 707.259 mo
378.771 713.861 li
378.771 713.861 375.663 707.938 371.156 715.192 cv
364.777 725.45 364.475 725.24 364.475 725.24 cv
364.475 725.24 358.974 733.261 352.277 723.416 cv
352.277 723.416 350.684 719.274 360.47 722.29 cv
360.47 722.29 362.587 722.019 366.45 715.494 cv
374.693 699.401 li
382.748 707.259 li
cp
.907195 .757046 .419013 .415869 cmyk
f
529 436.895 mo
544.395 441.121 li
538.117 434.271 li
529 436.895 li
cp
0 0 0 0 cmyk
f
544.104 443.334 mo
528.711 439.111 li
529.289 436.871 li
544.682 441.095 li
544.104 443.334 li
cp
.51223 .124849 .188479 .0033875 cmyk
f
419.797 568.392 mo
513.039 542.605 li
504.535 555.583 li
444.232 577.348 li
421.143 568.955 li
419.797 568.392 li
cp
.803983 .529473 .355688 .224247 cmyk
f
535.49 540.454 mo
513.039 542.605 li
512.137 543.906 li
427.875 575.822 li
426.587 704.109 li
466.231 599.326 450.293 594.537 450.293 594.537 cv
450.293 594.537 476.483 597.131 478.245 597.164 cv
478.245 597.164 532.529 597.269 537.647 590.982 cv
537.647 590.982 557.264 579.092 535.49 540.454 cv
cp
.801724 .541039 .24744 .0843519 cmyk
f
536.363 540.454 mo
536.363 540.454 560.471 587.025 531.023 593.723 cv
531.023 593.723 466.251 603.334 450.293 594.537 cv
450.293 594.537 457.125 598.131 451.952 620.898 cv
451.952 620.898 441.16 677.722 426.587 704.109 cv
426.587 704.109 457.934 604.986 444.741 595.887 cv
440.682 592.556 li
436.872 588.624 li
436.872 588.624 460.473 594.654 474.933 591.77 cv
474.933 591.77 528.249 589.933 531.023 584.952 cv
531.023 584.952 550.999 585.393 535.932 541.25 cv
536.363 540.454 li
cp
.803983 .529473 .355688 .224247 cmyk
f
513.297 537.207 mo
511.628 544.078 li
536.77 541.27 li
536.77 535.084 li
513.297 537.207 li
cp
.512474 .634638 .726619 .729702 cmyk
f
516.776 542.542 mo
514.855 542.777 li
514.43 542.826 513.988 542.059 513.807 541.014 cv
515.367 540.825 li
515.493 540.808 515.565 540.531 515.528 540.208 cv
515.491 539.88 515.359 539.628 515.235 539.644 cv
513.722 539.829 li
513.759 539.011 513.997 538.403 514.352 538.361 cv
516.279 538.128 li
516.746 538.07 517.241 539.011 517.377 540.233 cv
517.517 541.451 517.249 542.485 516.776 542.542 cv
cp
518.005 540.095 mo
517.798 538.264 517.059 536.848 516.352 536.933 cv
513.995 537.219 li
513.289 537.305 512.886 538.86 513.093 540.691 cv
513.303 542.524 514.047 543.938 514.748 543.852 cv
517.101 543.567 li
517.808 543.481 518.211 541.929 518.005 540.095 cv
cp
.0573129 .0562753 .253849 0 cmyk
f
529.772 542.374 mo
527.283 542.605 li
528.535 535.828 li
531.023 535.604 li
529.772 542.374 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
436.839 713.076 mo
435.865 720.784 li
435.865 720.784 430.665 716.721 429.464 725.251 cv
427.761 737.313 427.404 737.253 427.404 737.253 cv
427.404 737.253 425.605 746.911 415.567 740.81 cv
415.567 740.81 412.461 737.717 422.579 736.282 cv
422.579 736.282 424.395 735.129 425.297 727.539 cv
426.364 709.362 li
436.839 713.076 li
cp
.907195 .757046 .419013 .415869 cmyk
f
528.026 513.469 mo
567.686 455.363 li
570.427 451.451 569.579 445.985 565.796 443.154 cv
562.013 440.322 556.728 441.197 553.987 445.108 cv
524.216 487.83 li
522.644 481.495 513.522 454.813 468.73 437.643 cv
516.64 498.7 li
528.026 513.469 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
546.317 486.674 mo
546.317 486.674 570.646 460.118 567.7 445.136 cv
567.7 445.136 581.513 461.441 545.318 496.23 cv
546.317 486.674 li
cp
.803983 .529473 .355688 .224247 cmyk
f
585.962 437.694 mo
585.962 437.694 593.435 451.958 589.751 523.829 cv
577.195 524.342 li
577.195 524.342 592.706 471.643 585.962 437.694 cv
cp
f
393.387 367.958 mo
416.958 382.128 li
428.484 446.827 li
401.807 423.144 li
393.387 367.958 li
cp
.76556 .197757 .24686 .0261845 cmyk
f
411.875 379.073 mo
422.397 441.424 li
427.885 446.51 li
430.859 445.127 li
430.859 445.127 426.986 407.179 420.896 390.413 cv
417.374 380.715 417.328 383.028 411.875 379.073 cv
cp
.477333 0 .0584726 0 cmyk
f
448.259 367.958 mo
416.958 382.128 li
428.484 446.827 li
455.545 436.214 li
448.259 367.958 li
cp
.76556 .197757 .24686 .0261845 cmyk
f
468.009 432.06 mo
464.592 435.242 li
464.592 435.242 410.153 394.11 458.182 421.175 cv
458.182 421.175 444.221 384.55 468.009 432.06 cv
cp
.0345769 .188144 .18085 0 cmyk
f
1059.27 385.346 mo
1059.17 385.457 li
993.896 326.478 li
989.399 322.268 981.766 324.451 976.853 331.357 cv
971.957 338.258 971.621 347.268 976.122 351.474 cv
1042.54 406.499 li
1042.54 406.499 1082.16 455.553 1140.15 459.497 cv
1059.27 385.346 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
972.526 510.911 mo
960.7 316.944 li
972.764 317.291 978.297 318.99 978.297 318.99 cv
1028.97 328.657 1019.53 434.075 1020.11 508.007 cv
972.526 510.911 li
cp
f
991.26 536.266 mo
957.249 538.445 li
957.249 538.445 866.042 341.714 942.912 320.033 cv
942.912 320.033 975.263 312.783 998.632 347.399 cv
998.632 347.399 1020.73 382.976 1013.27 432.648 cv
991.26 536.266 li
cp
.417182 .0220645 .087892 0 cmyk
f
924.077 222.84 mo
924.077 222.84 927.465 199.026 951.564 195.912 cv
951.564 195.912 981.239 195.535 994.662 238.307 cv
994.662 238.307 999.346 254.059 1000.16 254.6 cv
1000.16 254.6 1009.74 273.942 990.424 258.413 cv
990.424 258.413 984.86 317.651 964.241 293.716 cv
963.08 293.783 li
964.931 324.135 li
951.193 324.974 li
949.342 294.622 li
949.342 294.622 917.937 275.604 924.077 222.84 cv
cp
.0345769 .188144 .18085 0 cmyk
f
976.451 235.681 mo
976.628 238.664 978.01 241 979.527 240.909 cv
981.038 240.815 982.126 238.326 981.946 235.342 cv
981.766 232.361 980.38 230.022 978.87 230.114 cv
977.349 230.206 976.267 232.697 976.451 235.681 cv
cp
.907195 .757046 .419013 .415869 cmyk
f
978.675 181.778 mo
978.675 181.778 1030.79 201.738 1022.44 219.538 cv
1022.44 219.538 1015.93 233.418 987.947 226.336 cv
987.947 226.336 958.901 214.624 963.659 232.498 cv
966.542 249.618 li
956.968 251.667 li
956.968 251.667 949.529 214.32 943.151 252.509 cv
943.151 252.509 953.23 285.608 933.57 277.126 cv
933.57 277.126 904.397 250.179 914.213 213.249 cv
914.213 213.249 918.104 195.432 936.068 184.375 cv
936.068 184.375 956.085 172.895 978.675 181.778 cv
cp
.512474 .634638 .726619 .729702 cmyk
f
940.874 247.23 mo
942.492 253.257 946.889 257.152 950.676 255.942 cv
954.464 254.72 956.224 248.852 954.612 242.82 cv
952.991 236.791 948.594 232.895 944.807 234.109 cv
941.016 235.327 939.26 241.196 940.874 247.23 cv
cp
.131594 .252354 .247135 .0134585 cmyk
f
998.979 448.128 mo
1014.21 379.511 976.485 340.164 976.485 340.164 cv
949.841 318.092 946.39 331.162 935.154 330.855 cv
939.433 330.103 960.998 307.152 989.94 350.071 cv
989.94 350.071 1012.05 385.644 1004.59 435.326 cv
983.554 534.333 li
979.011 533.189 li
998.979 448.128 li
cp
.105531 .0121157 .0295109 0 cmyk
f
965.204 321.542 mo
941.754 323.034 li
969.463 338.013 li
965.204 321.542 li
cp
.382177 .152834 .185061 .00708019 cmyk
f
965.204 321.542 mo
944.249 322.817 li
968.108 332.736 li
965.204 321.542 li
cp
.105531 .0121157 .0295109 0 cmyk
f
966.909 511.254 mo
955.08 317.292 li
943.147 319.094 937.86 321.457 937.86 321.457 cv
888.746 337.209 910.914 440.7 919.33 514.153 cv
966.909 511.254 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
1089.23 847.502 mo
1089.14 861.042 li
1089.14 861.042 1097.56 848.362 1101.51 864.972 cv
1105.46 881.583 1105.46 881.583 1105.46 881.583 cv
1105.46 881.583 1108.86 894.967 1124.17 887.823 cv
1124.17 887.823 1128.83 883.969 1112.94 880.824 cv
1112.94 880.824 1110.04 879.04 1108.15 868.585 cv
1105.37 843.67 li
1089.23 847.502 li
cp
.907195 .757046 .419013 .415869 cmyk
f
1299.02 607.239 mo
1281.1 607.083 li
1280.94 625.547 li
1292.14 625.651 li
1293.32 618.386 li
1293.32 618.386 1389.96 640.245 1299.02 607.239 cv
cp
f
1119.15 455.553 mo
997.881 549.505 li
968.669 576.635 li
968.669 576.635 1065.98 600.227 1124.4 507.837 cv
1124.4 507.837 1140.27 563.365 1280.94 605.892 cv
1119.15 455.553 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
843.42 594.364 mo
841.105 587.31 li
841.105 587.31 733.028 599.204 821.21 601.183 cv
821.21 601.183 773.209 639.517 843.42 594.364 cv
cp
.0345769 .188144 .18085 0 cmyk
f
882.821 452.446 mo
882.96 452.459 li
912.989 348.127 li
914.996 340.806 922.559 336.5 929.88 338.507 cv
937.191 340.515 941.495 348.075 939.485 355.396 cv
911.759 455.439 li
911.759 455.439 910.187 521.551 846.088 582.67 cv
882.821 452.446 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
936.893 358.466 mo
936.741 359.121 936.651 359.488 936.651 359.488 cv
911.759 455.439 li
912.952 464.645 li
936.844 382.983 li
937.382 374.837 937.756 366.685 936.893 358.466 cv
cp
.803983 .529473 .355688 .224247 cmyk
f
1143.56 466.249 mo
1150.32 463.18 li
1150.32 463.18 1214.68 550.812 1153.56 487.211 cv
1153.56 487.211 1157.81 548.497 1143.56 466.249 cv
cp
.0345769 .188144 .18085 0 cmyk
f
999.571 552.131 mo
998.944 551.64 li
995.192 538.619 li
959.764 538.445 li
961.126 540.206 li
914.424 595.407 943.352 620.284 943.352 620.284 cv
950.046 631.95 1038.71 627.415 1038.71 627.415 cv
1041.66 627.899 1096.36 625.651 1096.36 625.651 cv
1096.36 625.651 1059.84 655.265 1095.26 836.038 cv
1132.42 597.61 li
999.571 552.131 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
993.193 527.164 mo
995.192 538.619 li
958.233 543.767 li
954.72 533.228 li
993.193 527.164 li
cp
.512474 .634638 .726619 .729702 cmyk
f
985.889 534.271 mo
985.124 529.88 985.913 530.574 986.586 530.497 cv
989.596 530.158 li
990.151 530.099 990.799 530.972 991.225 532.275 cv
988.859 532.542 li
988.658 532.562 988.578 533.009 988.672 533.549 cv
988.776 534.083 989.007 534.499 989.205 534.475 cv
991.651 534.201 li
991.862 535.944 991.547 537.34 990.882 537.417 cv
987.86 537.759 li
987.136 537.832 986.249 536.28 985.889 534.271 cv
cp
987.854 539.516 mo
991.544 539.1 li
992.638 538.979 993.117 536.432 992.576 533.425 cv
992.039 530.414 990.709 528.075 989.614 528.196 cv
985.923 528.605 li
984.808 528.737 984.351 531.273 984.881 534.291 cv
985.418 537.299 986.745 539.637 987.854 539.516 cv
cp
.0573129 .0562753 .253849 0 cmyk
f
972.619 542.08 mo
968.101 542.731 li
965.762 531.384 li
969.896 530.723 li
972.619 542.08 li
cp
.801724 .541039 .24744 .0843519 cmyk
f
998.248 549.221 mo
1060.49 565.634 li
1050.85 569.688 li
997.881 549.505 li
998.248 549.221 li
cp
.803983 .529473 .355688 .224247 cmyk
f
958.233 543.767 mo
958.233 543.767 916.887 612.412 963.458 616.365 cv
963.458 616.365 1012.69 626.088 1096.36 625.651 cv
1096.36 625.651 961.916 633.824 944.727 621.75 cv
944.727 621.75 913.537 606.2 958.233 543.767 cv
cp
f
770.956 252.203 mo
669.142 252.203 li
578.752 294.682 li
611.477 252.203 li
583.481 252.203 li
583.481 159.392 li
770.956 159.392 li
770.956 252.203 li
0 0 0 0 cmyk
f
583.981 251.703 mo
612.493 251.703 li
580.408 293.351 li
669.03 251.703 li
770.455 251.703 li
770.455 159.893 li
583.981 159.893 li
583.981 251.703 li
577.096 296.014 mo
610.46 252.703 li
582.981 252.703 li
582.981 158.893 li
771.455 158.893 li
771.455 252.703 li
669.253 252.703 li
577.096 296.014 li
f
586.557 299.134 mo
585.726 299.134 584.914 298.757 584.381 298.066 cv
583.602 297.055 583.622 295.639 584.428 294.65 cv
587.19 291.27 li
669.253 252.703 li
771.455 252.703 li
771.455 158.893 li
588.08 158.893 li
588.08 156.647 li
588.08 155.131 589.31 153.901 590.826 153.901 cv
781.825 153.901 li
783.341 153.901 784.571 155.131 784.571 156.647 cv
784.571 251.841 li
784.571 253.357 783.341 254.587 781.825 254.587 cv
684.787 254.587 li
587.696 298.886 li
587.328 299.054 586.94 299.134 586.557 299.134 cv
609.009 254.587 mo
590.826 254.587 li
589.611 254.587 588.58 253.797 588.218 252.703 cv
610.46 252.703 li
609.009 254.587 li
.337194 0 .362554 0 cmyk
f
588.655 289.476 mo
617.156 254.587 li
610.272 254.587 li
612.493 251.703 li
588.08 251.703 li
588.08 159.893 li
770.455 159.893 li
770.455 251.703 li
669.03 251.703 li
588.655 289.476 li
.33933 0 .362432 0 cmyk
f
587.19 291.27 mo
588.655 289.476 li
669.03 251.703 li
770.455 251.703 li
770.455 159.893 li
588.08 159.893 li
588.08 158.893 li
771.455 158.893 li
771.455 252.703 li
669.253 252.703 li
587.19 291.27 li
610.272 254.587 mo
609.009 254.587 li
610.46 252.703 li
588.218 252.703 li
588.129 252.432 588.08 252.142 588.08 251.841 cv
588.08 251.703 li
612.493 251.703 li
610.272 254.587 li
f
703.131 179.479 mo
605.292 179.479 li
603.635 179.479 602.292 178.137 602.292 176.479 cv
602.292 174.822 603.635 173.479 605.292 173.479 cv
703.131 173.479 li
704.788 173.479 706.131 174.822 706.131 176.479 cv
706.131 178.137 704.788 179.479 703.131 179.479 cv
cp
0 0 0 0 cmyk
f
753.581 206.024 mo
683.294 206.024 li
681.637 206.024 680.294 204.682 680.294 203.024 cv
680.294 201.367 681.637 200.024 683.294 200.024 cv
753.581 200.024 li
755.238 200.024 756.581 201.367 756.581 203.024 cv
756.581 204.682 755.238 206.024 753.581 206.024 cv
cp
f
699.987 232.125 mo
600.294 232.125 li
598.637 232.125 597.294 230.782 597.294 229.125 cv
597.294 227.468 598.637 226.125 600.294 226.125 cv
699.987 226.125 li
701.645 226.125 702.987 227.468 702.987 229.125 cv
702.987 230.782 701.645 232.125 699.987 232.125 cv
cp
f
760.324 179.479 mo
723.324 179.479 li
721.667 179.479 720.324 178.137 720.324 176.479 cv
720.324 174.822 721.667 173.479 723.324 173.479 cv
760.324 173.479 li
761.982 173.479 763.324 174.822 763.324 176.479 cv
763.324 178.137 761.982 179.479 760.324 179.479 cv
cp
f
753.581 232.569 mo
713.348 232.569 li
711.691 232.569 710.348 231.227 710.348 229.569 cv
710.348 227.912 711.691 226.569 713.348 226.569 cv
753.581 226.569 li
755.238 226.569 756.581 227.912 756.581 229.569 cv
756.581 231.227 755.238 232.569 753.581 232.569 cv
cp
f
663.324 206.024 mo
604.503 206.024 li
602.846 206.024 601.503 204.682 601.503 203.024 cv
601.503 201.367 602.846 200.024 604.503 200.024 cv
663.324 200.024 li
664.982 200.024 666.324 201.367 666.324 203.024 cv
666.324 204.682 664.982 206.024 663.324 206.024 cv
cp
f
1733.18 458.889 mo
1733.24 460.788 1734.47 469.797 1732.67 477.536 cv
1730.9 485.274 1723.16 490.103 1715.42 488.317 cv
1601.67 462.983 li
1613.7 440.215 li
1621.84 440.215 1733.18 458.889 1733.18 458.889 cv
cp
.816403 .572534 .237217 .075349 cmyk
f
1753.55 462.937 mo
1761.51 432.637 li
1772.14 435.432 li
1764.18 465.735 li
1753.55 462.937 li
cp
.0226139 .156374 .145357 0 cmyk
f
1738.52 396.13 mo
1739.25 395.831 1745.38 384.207 1745.38 384.207 cv
1762.56 352.755 1785.78 357.672 1785.78 357.672 cv
1804.19 363.865 1803.14 383.067 1803.14 383.067 cv
1799.74 425.401 1772.14 435.432 1772.14 435.432 cv
1760.6 432.397 li
1740.71 447.96 1745.57 400.635 1745.57 400.635 cv
1728 409.805 1738.52 396.13 1738.52 396.13 cv
cp
f
1763.84 383.718 mo
1763.24 386.025 1761.8 387.647 1760.62 387.34 cv
1759.43 387.032 1758.97 384.908 1759.58 382.599 cv
1760.19 380.286 1761.64 378.669 1762.81 378.975 cv
1763.99 379.287 1764.45 381.409 1763.84 383.718 cv
cp
.876707 .762936 .417975 .416999 cmyk
f
1766.72 342.362 mo
1766.72 342.362 1722.74 349.91 1726.52 365.17 cv
1726.52 365.17 1729.45 377.064 1752.51 375.858 cv
1752.51 375.858 1777.11 371.203 1770.6 384.484 cv
1765.67 397.456 li
1772.86 400.557 li
1772.86 400.557 1784.51 372.419 1783.56 403.373 cv
1783.56 403.373 1770.51 427.752 1787.24 424.163 cv
1787.24 424.163 1814.33 407.572 1812.37 377.086 cv
1812.37 377.086 1812.09 362.5 1799.73 351.037 cv
1799.73 351.037 1785.82 338.917 1766.72 342.362 cv
cp
.492378 .624262 .746151 .700801 cmyk
f
1786.17 399.577 mo
1783.96 404.053 1779.92 406.431 1777.14 404.883 cv
1774.34 403.346 1773.88 398.458 1776.08 393.986 cv
1778.3 389.508 1782.34 387.133 1785.13 388.677 cv
1787.91 390.225 1788.37 395.099 1786.17 399.577 cv
cp
.11133 .223423 .216831 .0059205 cmyk
f
1716.03 461.977 mo
1716.03 461.977 1717.12 461.827 1719 461.762 cv
1719.01 461.734 li
1772.34 455.836 1799.67 472.831 1799.67 472.831 cv
1817.9 553.539 1798.15 662.383 1798.15 662.383 cv
1754.11 669.664 li
1714.18 662.383 li
1714.18 662.383 1699.82 499.805 1716.03 461.977 cv
cp
.358495 .033051 .0577401 0 cmyk
f
1752.69 661.602 mo
1757.68 661.602 li
1757.68 459.176 li
1752.98 459.176 li
1752.69 661.602 li
cp
.0732128 .000244144 .0180972 0 cmyk
f
1782.75 466.013 mo
1755.39 458.847 li
1768.12 476.016 li
1782.75 466.013 li
cp
.333654 .134432 .158267 .0030518 cmyk
f
1781.53 464.889 mo
1755.39 458.847 li
1768.34 473.126 li
1781.53 464.889 li
cp
.0732128 .000244144 .0180972 0 cmyk
f
1755.72 458.939 mo
1729.85 459.058 li
1742.97 475.92 li
1755.72 458.939 li
cp
.333654 .134432 .158267 .0030518 cmyk
f
1753.24 459.001 mo
1732.33 459 li
1743.11 473.029 li
1753.24 459.001 li
cp
.0732128 .000244144 .0180972 0 cmyk
f
1778.78 623.453 mo
1778.57 463.993 li
1862.71 488.688 1818.62 540.994 1826.05 643.406 cv
1778.78 623.453 li
cp
.816403 .572534 .237217 .075349 cmyk
f
1718.11 460.839 mo
1718.11 460.839 1723.58 460.217 1735.31 460.217 cv
1735.31 607.754 li
1680.37 591.969 li
1680.6 551.017 li
1680.7 551.017 li
1681.3 497.133 1688.68 459.176 1718.11 460.839 cv
cp
f
1735.31 461.734 mo
1735.31 459.034 li
1735.31 459.034 1708.84 457.074 1698.74 467.625 cv
1688.64 478.171 1711.01 469.445 1711.01 469.445 cv
1728.28 470.425 li
1733.95 467.109 li
1735.31 461.734 li
cp
f
1714.89 469.469 mo
1714.89 469.469 1707.72 493.701 1689.42 482.86 cv
1684.61 500.589 li
1684.61 500.589 1707.02 498.125 1714.89 469.469 cv
cp
.813413 .562676 .346319 .213413 cmyk
f
1701.48 512.351 mo
1724.55 515.57 li
1724.55 511.563 li
1703.24 508.531 li
1701.48 512.351 li
cp
.358495 .033051 .0577401 0 cmyk
f
1724.55 511.563 mo
1703.24 508.531 li
1715.16 504.169 li
1724.55 511.563 li
cp
.0732128 .000244144 .0180972 0 cmyk
f
1700 515.688 mo
1724.55 519.027 li
1724.55 515.57 li
1701.48 512.351 li
1700 515.688 li
cp
.813413 .562676 .346319 .213413 cmyk
f
1798.29 661.573 mo
1798.29 661.573 1814.51 756.494 1779.32 850.57 cv
1767.53 849.46 1755.46 849.052 1743.68 847.899 cv
1755.92 662.413 li
1798.29 661.573 li
cp
.816403 .572534 .237217 .075349 cmyk
f
1745.91 849.939 mo
1745.91 849.939 1722.82 865.783 1731.9 895.051 cv
1759.35 1051.58 li
1780.59 844.042 li
1768.9 845.876 1756.88 846.988 1745.17 848.778 cv
1745.41 849.166 1745.66 849.552 1745.91 849.939 cv
cp
f
1766.94 661.602 mo
1772.15 848.573 li
1737.71 928.15 li
1731.31 898.862 li
1755.19 845.612 li
1743.68 661.999 li
1766.94 661.602 li
cp
.813413 .562676 .346319 .213413 cmyk
f
1713.5 661.999 mo
1713.5 661.999 1696.12 756.494 1731.31 850.57 cv
1743.11 849.46 1755.17 849.052 1766.94 847.899 cv
1754.71 662.413 li
1713.5 661.999 li
cp
.816403 .572534 .237217 .075349 cmyk
f
1732.65 840.844 mo
1732.65 840.844 1705.25 846.641 1702.45 877.161 cv
1667.9 1032.28 li
1766.91 847.417 li
1755.41 844.642 1743.91 842.313 1732.41 839.485 cv
1732.49 839.939 1732.57 840.389 1732.65 840.844 cv
cp
f
1713.48 663.012 mo
1798.92 663.012 li
1799.67 655.545 li
1713.59 655.233 li
1713.48 663.012 li
cp
.492378 .624262 .746151 .700801 cmyk
f
1748.96 659.184 mo
1748.96 657.87 1750.03 656.804 1751.35 656.804 cv
1756.73 656.804 li
1757.72 656.804 1758.58 657.417 1758.93 658.285 cv
1754.69 658.285 li
1754.34 658.285 1754.06 658.569 1754.06 658.919 cv
1754.06 659.271 1754.34 659.556 1754.69 659.556 cv
1759.08 659.556 li
1758.89 660.692 1757.92 661.563 1756.73 661.563 cv
1751.35 661.563 li
1750.03 661.563 1748.96 660.498 1748.96 659.184 cv
cp
1747.19 659.121 mo
1747.19 661.096 1748.79 662.697 1750.77 662.697 cv
1757.36 662.697 li
1759.33 662.697 1760.93 661.096 1760.93 659.121 cv
1760.93 657.144 1759.33 655.545 1757.36 655.545 cv
1750.77 655.545 li
1748.79 655.545 1747.19 657.144 1747.19 659.121 cv
cp
.0393988 .0398871 .21912 0 cmyk
f
1781.68 663.324 mo
1785.38 663.324 li
1785.38 655.545 li
1781.68 655.545 li
1781.68 663.324 li
cp
.816403 .572534 .237217 .075349 cmyk
f
1725.27 664.128 mo
1728.97 664.128 li
1728.97 655.233 li
1725.27 655.233 li
1725.27 664.128 li
cp
f
1761.68 1068 mo
1747.36 1068 li
1747.36 1082.77 li
1756.31 1082.77 li
1757.2 1076.95 li
1757.2 1076.95 1834.63 1093.73 1761.68 1068 cv
cp
.876707 .762936 .417975 .416999 cmyk
f
1655.08 1039.6 mo
1649.91 1049.11 li
1649.91 1049.11 1660.62 1043.34 1657.14 1056.54 cv
1653.67 1069.74 1653.67 1069.74 1653.67 1069.74 cv
1653.67 1069.74 1651.01 1080.47 1664.49 1081.2 cv
1664.49 1081.2 1669.23 1080.24 1659.22 1072.03 cv
1659.22 1072.03 1657.84 1069.68 1660.46 1061.6 cv
1667.9 1042.99 li
1655.08 1039.6 li
cp
f
1601.13 458.323 mo
1601.14 458.322 li
1585.32 329.93 li
1633.33 392.194 1625.42 436.667 1621.89 448.783 cv
1614.88 453.708 1608.33 458.302 1601.67 462.983 cv
1601.13 458.323 li
cp
.816403 .572534 .237217 .075349 cmyk
f
1581.9 319.698 mo
1576.11 323.28 li
1576.11 323.28 1507.38 251.212 1570.35 301.82 cv
1570.35 301.82 1559.31 246.658 1581.9 319.698 cv
cp
.0226139 .156374 .145357 0 cmyk
f
1900.36 746.74 mo
1894.53 750.968 li
1894.53 750.968 1937.6 847.292 1913.25 765.228 cv
1913.25 765.228 1962.91 798.192 1900.36 746.74 cv
cp
f
1857.07 602.775 mo
1856.94 602.791 li
1828.02 502.306 li
1826.08 495.256 1818.8 491.108 1811.75 493.042 cv
1804.71 494.976 1800.56 502.257 1802.5 509.307 cv
1829.2 605.664 li
1829.2 605.664 1834.8 683.802 1896.53 742.67 cv
1857.07 602.775 li
cp
.816403 .572534 .237217 .075349 cmyk
f
1804.61 512.266 mo
1804.76 512.896 1804.84 513.249 1804.84 513.249 cv
1825.94 593.884 li
1825.37 605.938 li
1804.65 535.877 li
1804.14 528.032 1803.78 520.178 1804.61 512.266 cv
cp
.813413 .562676 .346319 .213413 cmyk
f
1334.25 1038.12 mo
1311.19 1042.27 1289.15 1026.93 1285.01 1003.87 cv
1280.87 980.818 1296.2 958.77 1319.26 954.629 cv
1342.31 950.49 1364.36 965.825 1368.5 988.88 cv
1372.64 1011.94 1357.31 1033.98 1334.25 1038.12 cv
cp
1417.35 996.051 mo
1411.8 965.164 li
1392.55 968.621 li
1389.44 961.225 1385.13 954.563 1379.93 948.767 cv
1391.92 931.55 li
1366.16 913.62 li
1354.39 930.535 li
1346.72 927.31 1338.45 925.406 1329.89 925.037 cv
1326.43 905.784 li
1295.54 911.331 li
1299 930.583 li
1291.6 933.699 1284.93 938.005 1279.13 943.209 cv
1263.16 932.115 li
1245.26 957.886 li
1260.91 968.759 li
1257.69 976.418 1255.78 984.684 1255.41 993.247 cv
1236.16 996.704 li
1241.71 1027.59 li
1260.96 1024.13 li
1264.28 1032.03 1268.94 1039.12 1274.63 1045.18 cv
1263.74 1060.82 li
1289.5 1078.75 li
1300.1 1062.6 li
1307.49 1065.58 1315.42 1067.36 1323.62 1067.72 cv
1327.08 1086.97 li
1357.97 1081.42 li
1354.51 1062.17 li
1362.41 1058.84 1369.51 1054.18 1375.57 1048.49 cv
1392.49 1060.25 li
1410.4 1034.48 li
1393.17 1022.51 li
1395.98 1015.39 1397.68 1007.79 1398.07 999.914 cv
1417.35 996.051 li
cp
.198672 .135439 .0277409 0 cmyk
f
1319.82 957.735 mo
1298.51 961.561 1284.29 982.007 1288.11 1003.31 cv
1291.94 1024.62 1312.39 1038.84 1333.69 1035.02 cv
1355 1031.19 1369.22 1010.74 1365.4 989.438 cv
1361.57 968.13 1341.12 953.909 1319.82 957.735 cv
cp
1334.81 1041.23 mo
1310.08 1045.67 1286.34 1029.16 1281.9 1004.43 cv
1277.46 979.698 1293.97 955.963 1318.7 951.522 cv
1343.43 947.082 1367.17 963.589 1371.61 988.322 cv
1376.05 1013.05 1359.54 1036.79 1334.81 1041.23 cv
cp
1417.35 996.05 mo
1417.41 996.04 li
1417.35 996.05 li
cp
1329.63 1083.31 mo
1354.3 1078.88 li
1351.4 1062.73 li
1351.14 1061.27 1351.93 1059.84 1353.29 1059.26 cv
1360.74 1056.12 1367.51 1051.73 1373.41 1046.19 cv
1374.49 1045.17 1376.14 1045.05 1377.37 1045.9 cv
1391.7 1055.86 li
1406.01 1035.27 li
1391.37 1025.1 li
1390.17 1024.27 1389.7 1022.72 1390.24 1021.35 cv
1392.98 1014.4 1394.55 1007.14 1394.91 999.759 cv
1394.98 998.316 1396.03 997.105 1397.44 996.819 cv
1413.7 993.562 li
1409.25 968.827 li
1393.11 971.726 li
1391.65 971.987 1390.21 971.207 1389.64 969.843 cv
1386.73 962.929 1382.67 956.546 1377.58 950.873 cv
1376.6 949.783 1376.5 948.164 1377.34 946.96 cv
1387.53 932.336 li
1366.95 918.011 li
1356.98 932.336 li
1356.12 933.564 1354.53 934.022 1353.16 933.444 cv
1345.7 930.303 1337.83 928.536 1329.75 928.188 cv
1328.27 928.125 1327.04 927.046 1326.78 925.593 cv
1323.88 909.449 li
1299.21 913.88 li
1302.11 930.025 li
1302.37 931.478 1301.58 932.917 1300.22 933.491 cv
1293.3 936.406 1286.92 940.464 1281.24 945.558 cv
1280.15 946.539 1278.53 946.641 1277.33 945.8 cv
1263.96 936.505 li
1249.65 957.095 li
1262.71 966.17 li
1263.93 967.019 1264.39 968.611 1263.82 969.986 cv
1260.68 977.434 1258.92 985.308 1258.57 993.38 cv
1258.5 994.857 1257.43 996.09 1255.97 996.351 cv
1239.82 999.251 li
1244.26 1023.93 li
1260.4 1021.03 li
1261.86 1020.77 1263.3 1021.55 1263.87 1022.91 cv
1267.01 1030.36 1271.4 1037.13 1276.93 1043.02 cv
1277.95 1044.11 1278.07 1045.76 1277.22 1046.98 cv
1268.13 1060.03 li
1288.64 1074.31 li
1297.46 1060.87 li
1298.29 1059.61 1299.89 1059.11 1301.28 1059.67 cv
1308.51 1062.59 1316.07 1064.23 1323.76 1064.56 cv
1325.24 1064.63 1326.47 1065.71 1326.73 1067.16 cv
1329.63 1083.31 li
cp
1358.53 1084.53 mo
1327.64 1090.08 li
1325.92 1090.39 1324.28 1089.25 1323.98 1087.53 cv
1320.96 1070.72 li
1314.28 1070.2 1307.7 1068.77 1301.34 1066.45 cv
1292.13 1080.48 li
1291.67 1081.19 1290.93 1081.69 1290.1 1081.85 cv
1289.31 1082.07 1288.4 1081.83 1287.69 1081.34 cv
1261.94 1063.41 li
1261.25 1062.93 1260.78 1062.2 1260.63 1061.38 cv
1260.49 1060.55 1260.67 1059.7 1261.15 1059.02 cv
1270.61 1045.44 li
1265.92 1040.09 1262.06 1034.14 1259.08 1027.68 cv
1242.27 1030.7 li
1240.55 1031 1238.91 1029.86 1238.6 1028.15 cv
1233.05 997.26 li
1232.75 995.543 1233.89 993.905 1235.6 993.596 cv
1252.41 990.578 li
1252.96 983.49 1254.51 976.563 1257.04 969.918 cv
1243.46 960.478 li
1242.03 959.486 1241.67 957.517 1242.67 956.085 cv
1260.58 930.311 li
1261.53 928.94 1263.59 928.564 1264.97 929.523 cv
1278.92 939.217 li
1283.98 934.967 1289.52 931.442 1295.45 928.698 cv
1292.44 911.889 li
1292.13 910.172 1293.27 908.534 1294.98 908.225 cv
1325.87 902.679 li
1327.59 902.371 1329.23 903.51 1329.54 905.227 cv
1332.55 922.036 li
1339.64 922.583 1346.58 924.136 1353.23 926.671 cv
1363.57 911.816 li
1364.05 911.129 1364.78 910.66 1365.61 910.511 cv
1366.43 910.364 1367.28 910.549 1367.97 911.027 cv
1393.72 928.96 li
1394.41 929.438 1394.88 930.171 1395.03 930.997 cv
1395.18 931.819 1394.99 932.669 1394.51 933.356 cv
1383.93 948.552 li
1388.17 953.612 1391.69 959.151 1394.43 965.075 cv
1411.24 962.056 li
1412.96 961.748 1414.6 962.888 1414.91 964.605 cv
1420.46 995.493 li
1420.76 997.185 1419.65 998.808 1417.97 999.145 cv
1401.06 1002.53 li
1400.53 1008.93 1399.16 1015.23 1396.99 1021.32 cv
1412.21 1031.89 li
1412.89 1032.37 1413.36 1033.1 1413.51 1033.92 cv
1413.66 1034.75 1413.47 1035.6 1412.99 1036.28 cv
1395.09 1062.06 li
1394.09 1063.49 1392.12 1063.84 1390.69 1062.84 cv
1375.83 1052.52 li
1370.48 1057.2 1364.52 1061.07 1358.06 1064.05 cv
1361.07 1080.87 li
1361.38 1082.58 1360.24 1084.22 1358.53 1084.53 cv
cp
.38996 .275914 .102663 .0033875 cmyk
f
1463.07 1051.27 mo
1448.62 1048.45 1439.19 1034.46 1442 1020.01 cv
1444.81 1005.56 1458.81 996.122 1473.26 998.934 cv
1487.71 1001.75 1497.14 1015.74 1494.33 1030.19 cv
1491.52 1044.64 1477.52 1054.08 1463.07 1051.27 cv
cp
1526.66 1044.75 mo
1529.76 1028.83 li
1511.18 1021.6 li
1510.9 1018.14 1510.22 1014.76 1509.14 1011.52 cv
1523.43 997.628 li
1514.36 984.178 li
1495.91 992.022 li
1493.38 989.889 1490.56 988.059 1487.54 986.541 cv
1487.82 966.6 li
1471.89 963.5 li
1464.67 982.088 li
1461.2 982.369 1457.82 983.049 1454.59 984.124 cv
1440.69 969.839 li
1427.24 978.906 li
1435.27 997.145 li
1433.07 999.739 1431.17 1002.62 1429.61 1005.73 cv
1409.67 1005.45 li
1406.57 1021.37 li
1425.15 1028.6 li
1425.44 1032.06 1426.11 1035.44 1427.19 1038.68 cv
1412.9 1052.57 li
1421.97 1066.02 li
1440.21 1057.99 li
1442.8 1060.2 1445.68 1062.1 1448.79 1063.66 cv
1448.51 1083.6 li
1464.44 1086.7 li
1471.66 1068.11 li
1475.13 1067.83 1478.51 1067.15 1481.74 1066.08 cv
1495.64 1080.36 li
1509.09 1071.29 li
1501.06 1053.06 li
1503.27 1050.46 1505.16 1047.58 1506.72 1044.47 cv
1526.66 1044.75 li
cp
.198672 .135439 .0277409 0 cmyk
f
1472.66 1002.03 mo
1459.94 999.558 1447.57 1007.89 1445.1 1020.61 cv
1442.62 1033.33 1450.96 1045.69 1463.68 1048.17 cv
1476.39 1050.65 1488.76 1042.31 1491.23 1029.59 cv
1493.71 1016.87 1485.37 1004.51 1472.66 1002.03 cv
cp
1462.47 1054.36 mo
1446.33 1051.22 1435.76 1035.54 1438.9 1019.4 cv
1442.04 1003.27 1457.73 992.697 1473.86 995.838 cv
1490 998.979 1500.57 1014.66 1497.43 1030.8 cv
1494.29 1046.94 1478.61 1057.51 1462.47 1054.36 cv
cp
1526.66 1044.75 mo
1526.73 1044.76 li
1526.66 1044.75 li
cp
1451.71 1081.01 mo
1462.45 1083.1 li
1468.72 1066.97 li
1469.16 1065.84 1470.2 1065.06 1471.41 1064.97 cv
1474.63 1064.71 1477.77 1064.07 1480.75 1063.08 cv
1481.89 1062.7 1483.15 1063 1484 1063.88 cv
1496.06 1076.27 li
1505.14 1070.15 li
1498.17 1054.33 li
1497.68 1053.22 1497.87 1051.93 1498.65 1051.01 cv
1500.69 1048.62 1502.45 1045.95 1503.9 1043.06 cv
1504.45 1041.98 1505.56 1041.3 1506.77 1041.32 cv
1524.07 1041.56 li
1526.16 1030.81 li
1510.03 1024.55 li
1508.9 1024.11 1508.13 1023.06 1508.03 1021.86 cv
1507.77 1018.64 1507.14 1015.5 1506.15 1012.52 cv
1505.76 1011.37 1506.07 1010.1 1506.94 1009.26 cv
1519.33 997.208 li
1513.19 988.102 li
1497.15 994.927 li
1496.06 995.389 1494.79 995.2 1493.88 994.438 cv
1491.56 992.489 1488.95 990.782 1486.12 989.361 cv
1485.04 988.818 1484.37 987.707 1484.38 986.498 cv
1484.62 969.193 li
1473.88 967.102 li
1467.61 983.233 li
1467.17 984.359 1466.13 985.136 1464.92 985.234 cv
1461.71 985.493 1458.56 986.128 1455.59 987.119 cv
1454.43 987.491 1453.17 987.194 1452.33 986.324 cv
1440.27 973.929 li
1431.19 980.049 li
1438.16 995.875 li
1438.65 996.981 1438.46 998.269 1437.68 999.19 cv
1435.64 1001.58 1433.88 1004.26 1432.42 1007.15 cv
1431.88 1008.22 1430.77 1008.9 1429.56 1008.88 cv
1412.26 1008.64 li
1410.17 1019.38 li
1426.3 1025.65 li
1427.42 1026.09 1428.2 1027.13 1428.3 1028.34 cv
1428.56 1031.56 1429.19 1034.71 1430.18 1037.68 cv
1430.57 1038.83 1430.26 1040.1 1429.39 1040.94 cv
1416.99 1052.99 li
1423.11 1062.07 li
1438.94 1055.1 li
1440.05 1054.62 1441.34 1054.81 1442.26 1055.59 cv
1444.66 1057.63 1447.33 1059.4 1450.21 1060.84 cv
1451.29 1061.38 1451.96 1062.49 1451.95 1063.7 cv
1451.71 1081.01 li
cp
1463.83 1089.8 mo
1447.91 1086.7 li
1446.41 1086.41 1445.34 1085.08 1445.36 1083.56 cv
1445.61 1065.55 li
1443.54 1064.4 1441.57 1063.09 1439.72 1061.66 cv
1423.24 1068.91 li
1421.85 1069.53 1420.21 1069.05 1419.36 1067.79 cv
1410.29 1054.33 li
1409.43 1053.07 1409.61 1051.37 1410.7 1050.31 cv
1423.61 1037.76 li
1422.97 1035.51 1422.5 1033.2 1422.21 1030.84 cv
1405.42 1024.31 li
1404 1023.76 1403.18 1022.27 1403.47 1020.77 cv
1406.57 1004.85 li
1406.86 1003.35 1408.18 1002.27 1409.71 1002.29 cv
1427.72 1002.54 li
1428.87 1000.47 1430.17 998.499 1431.61 996.652 cv
1424.35 980.178 li
1423.74 978.781 1424.21 977.143 1425.48 976.291 cv
1438.93 967.222 li
1440.2 966.37 1441.9 966.546 1442.96 967.638 cv
1455.51 980.541 li
1457.75 979.904 1460.07 979.435 1462.43 979.146 cv
1468.95 962.356 li
1469.5 960.934 1471 960.11 1472.5 960.402 cv
1488.42 963.501 li
1489.92 963.792 1490.99 965.117 1490.97 966.642 cv
1490.72 984.654 li
1492.73 985.767 1494.64 987.014 1496.42 988.381 cv
1513.12 981.274 li
1514.51 980.692 1516.13 981.157 1516.97 982.414 cv
1526.04 995.866 li
1526.9 997.13 1526.72 998.827 1525.63 999.892 cv
1512.72 1012.44 li
1513.36 1014.69 1513.83 1017.01 1514.12 1019.36 cv
1530.91 1025.89 li
1532.33 1026.44 1533.15 1027.93 1532.86 1029.43 cv
1529.76 1045.35 li
1529.47 1046.85 1528.15 1047.93 1526.62 1047.91 cv
1508.61 1047.66 li
1507.46 1049.73 1506.15 1051.71 1504.72 1053.55 cv
1511.97 1070.02 li
1512.59 1071.42 1512.11 1073.06 1510.85 1073.91 cv
1497.4 1082.98 li
1496.14 1083.83 1494.44 1083.66 1493.37 1082.56 cv
1480.82 1069.66 li
1478.57 1070.3 1476.26 1070.76 1473.9 1071.05 cv
1467.38 1087.84 li
1466.83 1089.27 1465.33 1090.09 1463.83 1089.8 cv
cp
.38996 .275914 .102663 .0033875 cmyk
f
1338.68 1054.7 mo
1338.12 1054.8 1337.77 1054.86 1337.65 1054.87 cv
1335.92 1055.1 1334.34 1053.89 1334.1 1052.17 cv
1333.86 1050.44 1334.97 1048.79 1336.8 1048.62 cv
1338.04 1048.45 1366.75 1044.18 1377.27 1015.92 cv
1377.88 1014.29 1379.7 1013.46 1381.32 1014.07 cv
1382.96 1014.67 1383.79 1016.49 1383.18 1018.12 cv
1372.36 1047.2 1344.51 1053.66 1338.68 1054.7 cv
cp
.114443 .0714733 .0140078 0 cmyk
f
1309.99 1053.5 mo
1309.6 1053.57 1309.18 1053.57 1308.76 1053.48 cv
1308.18 1053.35 1294.46 1050.28 1286.41 1040.46 cv
1285.31 1039.11 1285.5 1037.12 1286.85 1036.02 cv
1288.2 1034.91 1290.19 1035.11 1291.29 1036.46 cv
1297.93 1044.56 1309.99 1047.29 1310.11 1047.31 cv
1311.81 1047.69 1312.89 1049.37 1312.52 1051.07 cv
1312.23 1052.35 1311.21 1053.28 1309.99 1053.5 cv
cp
f
1494.57 1068.79 mo
1493.75 1068.63 1492.99 1068.15 1492.51 1067.38 cv
1486.58 1058.05 li
1485.64 1056.58 1486.07 1054.63 1487.55 1053.7 cv
1489.02 1052.77 1490.97 1053.2 1491.9 1054.67 cv
1497.83 1064 li
1498.77 1065.47 1498.34 1067.42 1496.86 1068.35 cv
1496.15 1068.81 1495.33 1068.94 1494.57 1068.79 cv
cp
f
1460.03 1066.89 mo
1458.32 1066.56 1457.2 1064.9 1457.54 1063.19 cv
1458.18 1059.9 li
1458.51 1058.19 1460.17 1057.07 1461.88 1057.4 cv
1463.59 1057.74 1464.71 1059.39 1464.37 1061.1 cv
1463.73 1064.4 li
1463.4 1066.11 1461.74 1067.22 1460.03 1066.89 cv
cp
f
1507.13 1035.9 mo
1507.13 1035.9 li
1502.74 1035.04 li
1501.03 1034.71 1499.92 1033.05 1500.25 1031.34 cv
1500.58 1029.63 1502.24 1028.52 1503.95 1028.85 cv
1503.95 1028.85 li
1508.34 1029.71 li
1510.05 1030.04 1511.16 1031.7 1510.83 1033.41 cv
1510.5 1035.12 1508.84 1036.23 1507.13 1035.9 cv
cp
f
682.895 1084.94 mo
682.338 1084.94 681.781 1084.78 681.283 1084.46 cv
679.882 1083.57 679.472 1081.72 680.363 1080.32 cv
700.236 1049.18 li
701.133 1047.78 702.997 1047.38 704.38 1048.26 cv
705.78 1049.15 706.191 1051.01 705.3 1052.41 cv
685.426 1083.55 li
684.852 1084.45 683.885 1084.94 682.895 1084.94 cv
cp
.135653 .112306 .169863 0 cmyk
f
863.438 1084.94 mo
862.447 1084.94 861.48 1084.45 860.906 1083.55 cv
841.032 1052.41 li
840.142 1051.01 840.552 1049.15 841.952 1048.26 cv
843.336 1047.38 845.205 1047.78 846.096 1049.18 cv
865.969 1080.32 li
866.86 1081.72 866.45 1083.57 865.049 1084.46 cv
864.551 1084.78 863.994 1084.94 863.438 1084.94 cv
cp
f
773.061 895.144 mo
771.402 895.144 770.06 893.802 770.06 892.143 cv
770.06 872.085 li
770.06 870.427 771.402 869.084 773.061 869.084 cv
774.719 869.084 776.061 870.427 776.061 872.085 cv
776.061 892.143 li
776.061 893.802 774.719 895.144 773.061 895.144 cv
cp
f
784.917 875.086 mo
761.474 875.086 li
759.816 875.086 758.473 873.744 758.473 872.085 cv
758.473 870.427 759.816 869.084 761.474 869.084 cv
784.917 869.084 li
786.575 869.084 787.917 870.427 787.917 872.085 cv
787.917 873.744 786.575 875.086 784.917 875.086 cv
cp
f
744.527 896.508 mo
744.527 896.508 717.141 868.063 688.686 892.284 cv
660.118 916.602 687.261 946.452 687.261 946.452 cv
744.527 896.508 li
cp
.0304265 .0170901 .0740063 0 cmyk
f
687.261 949.452 mo
686.446 949.452 685.631 949.121 685.04 948.47 cv
684.488 947.864 671.554 933.417 672.679 915.789 cv
673.295 906.092 678.03 897.416 686.739 889.999 cv
717.009 864.232 746.395 894.125 746.688 894.429 cv
747.837 895.622 747.801 897.518 746.606 898.667 cv
745.416 899.818 743.517 899.786 742.368 898.593 cv
741.325 897.518 716.552 872.484 690.63 894.57 cv
683.205 900.89 679.179 908.161 678.669 916.169 cv
677.702 931.29 689.365 944.303 689.482 944.432 cv
690.595 945.66 690.507 947.556 689.277 948.672 cv
688.702 949.194 687.982 949.452 687.261 949.452 cv
cp
.135653 .112306 .169863 0 cmyk
f
801.298 896.508 mo
801.298 896.508 828.684 868.063 857.139 892.284 cv
885.708 916.602 858.564 946.452 858.564 946.452 cv
801.298 896.508 li
cp
.0304265 .0170901 .0740063 0 cmyk
f
858.562 949.452 mo
857.84 949.452 857.12 949.194 856.546 948.672 cv
855.32 947.559 855.227 945.663 856.34 944.435 cv
856.458 944.303 868.138 931.202 867.153 916.134 cv
866.631 908.137 862.611 900.881 855.192 894.57 cv
829.182 872.431 804.497 897.512 803.46 898.59 cv
802.305 899.792 800.406 899.818 799.216 898.672 cv
798.021 897.521 797.986 895.622 799.134 894.429 cv
799.428 894.125 828.818 864.232 859.083 889.999 cv
867.798 897.416 872.527 906.092 873.149 915.789 cv
874.274 933.417 861.334 947.864 860.783 948.47 cv
860.191 949.121 859.376 949.452 858.562 949.452 cv
cp
.135653 .112306 .169863 0 cmyk
f
867.955 987.039 mo
867.955 1039.45 825.468 1081.93 773.059 1081.93 cv
720.65 1081.93 678.164 1039.45 678.164 987.039 cv
678.164 934.628 720.65 892.142 773.059 892.142 cv
825.468 892.142 867.955 934.628 867.955 987.039 cv
cp
.598321 .167056 .201816 .00949111 cmyk
f
773.061 895.144 mo
722.389 895.144 681.166 936.368 681.166 987.039 cv
681.166 1037.71 722.389 1078.93 773.061 1078.93 cv
823.732 1078.93 864.956 1037.71 864.956 987.039 cv
864.956 936.368 823.732 895.144 773.061 895.144 cv
cp
773.061 1084.94 mo
719.078 1084.94 675.164 1041.02 675.164 987.039 cv
675.164 933.06 719.078 889.143 773.061 889.143 cv
827.043 889.143 870.957 933.06 870.957 987.039 cv
870.957 1041.02 827.043 1084.94 773.061 1084.94 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
843.563 987.039 mo
843.563 1025.98 811.997 1057.54 773.059 1057.54 cv
734.121 1057.54 702.556 1025.98 702.556 987.039 cv
702.556 948.1 734.121 916.535 773.059 916.535 cv
811.997 916.535 843.563 948.1 843.563 987.039 cv
cp
.103395 .0553597 0 0 cmyk
f
773.061 919.536 mo
735.839 919.536 705.558 949.818 705.558 987.039 cv
705.558 1024.26 735.839 1054.54 773.061 1054.54 cv
810.281 1054.54 840.564 1024.26 840.564 987.039 cv
840.564 949.818 810.281 919.536 773.061 919.536 cv
cp
773.061 1060.54 mo
732.528 1060.54 699.556 1027.57 699.556 987.039 cv
699.556 946.51 732.528 913.535 773.061 913.535 cv
813.593 913.535 846.565 946.51 846.565 987.039 cv
846.565 1027.57 813.593 1060.54 773.061 1060.54 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
822.911 1039.89 mo
822.143 1039.89 821.376 1039.6 820.79 1039.01 cv
813.722 1031.94 li
812.549 1030.77 812.549 1028.87 813.722 1027.7 cv
814.894 1026.53 816.793 1026.53 817.965 1027.7 cv
825.033 1034.77 li
826.205 1035.94 826.205 1037.84 825.033 1039.01 cv
824.447 1039.6 823.679 1039.89 822.911 1039.89 cv
cp
.670008 .563043 .539086 .581659 cmyk
f
723.206 937.185 mo
730.276 944.255 li
723.206 937.185 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
730.278 947.257 mo
729.51 947.257 728.742 946.964 728.156 946.377 cv
721.083 939.307 li
719.91 938.135 719.91 936.236 721.083 935.064 cv
722.255 933.892 724.153 933.892 725.326 935.064 cv
732.4 942.135 li
733.571 943.307 733.571 945.206 732.4 946.377 cv
731.813 946.964 731.046 947.257 730.278 947.257 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
815.842 1029.82 mo
822.913 1036.89 li
815.842 1029.82 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
822.911 1039.89 mo
822.143 1039.89 821.376 1039.6 820.79 1039.01 cv
813.722 1031.94 li
812.549 1030.77 812.549 1028.87 813.722 1027.7 cv
814.894 1026.53 816.793 1026.53 817.965 1027.7 cv
825.033 1034.77 li
826.205 1035.94 826.205 1037.84 825.033 1039.01 cv
824.447 1039.6 823.679 1039.89 822.911 1039.89 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
723.204 1039.89 mo
722.436 1039.89 721.669 1039.6 721.083 1039.01 cv
719.91 1037.84 719.91 1035.94 721.083 1034.77 cv
728.156 1027.7 li
729.328 1026.53 731.227 1026.53 732.4 1027.7 cv
733.571 1028.87 733.571 1030.77 732.4 1031.94 cv
725.326 1039.01 li
724.739 1039.6 723.972 1039.89 723.204 1039.89 cv
cp
.670008 .563043 .539086 .581659 cmyk
f
822.913 937.185 mo
815.842 944.255 li
822.913 937.185 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
815.843 947.257 mo
815.075 947.257 814.308 946.964 813.722 946.377 cv
812.549 945.206 812.549 943.307 813.722 942.135 cv
820.79 935.064 li
821.962 933.892 823.86 933.892 825.033 935.064 cv
826.205 936.236 826.205 938.135 825.033 939.307 cv
817.965 946.377 li
817.379 946.964 816.611 947.257 815.843 947.257 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
730.276 1029.82 mo
723.206 1036.89 li
730.276 1029.82 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
723.204 1039.89 mo
722.436 1039.89 721.669 1039.6 721.083 1039.01 cv
719.91 1037.84 719.91 1035.94 721.083 1034.77 cv
728.156 1027.7 li
729.328 1026.53 731.227 1026.53 732.4 1027.7 cv
733.571 1028.87 733.571 1030.77 732.4 1031.94 cv
725.326 1039.01 li
724.739 1039.6 723.972 1039.89 723.204 1039.89 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
773.059 916.535 mo
773.059 930.035 li
773.059 916.535 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
773.061 933.036 mo
771.402 933.036 770.06 931.694 770.06 930.036 cv
770.06 916.536 li
770.06 914.876 771.402 913.535 773.061 913.535 cv
774.719 913.535 776.061 914.876 776.061 916.536 cv
776.061 930.036 li
776.061 931.694 774.719 933.036 773.061 933.036 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
773.059 1044.04 mo
773.059 1057.54 li
773.059 1044.04 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
773.061 1060.54 mo
771.402 1060.54 770.06 1059.2 770.06 1057.54 cv
770.06 1044.04 li
770.06 1042.38 771.402 1041.04 773.061 1041.04 cv
774.719 1041.04 776.061 1042.38 776.061 1044.04 cv
776.061 1057.54 li
776.061 1059.2 774.719 1060.54 773.061 1060.54 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
702.556 987.039 mo
716.056 987.039 li
702.556 987.039 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
716.054 990.04 mo
702.557 990.04 li
700.899 990.04 699.556 988.698 699.556 987.039 cv
699.556 985.38 700.899 984.039 702.557 984.039 cv
716.054 984.039 li
717.713 984.039 719.055 985.38 719.055 987.039 cv
719.055 988.698 717.713 990.04 716.054 990.04 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
830.063 987.039 mo
843.563 987.039 li
830.063 987.039 li
cp
.598321 .167056 .201816 .00949111 cmyk
f
843.564 990.04 mo
830.061 990.04 li
828.402 990.04 827.061 988.698 827.061 987.039 cv
827.061 985.38 828.402 984.039 830.061 984.039 cv
843.564 984.039 li
845.223 984.039 846.565 985.38 846.565 987.039 cv
846.565 988.698 845.223 990.04 843.564 990.04 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
828.373 1013.77 mo
827.975 1013.77 827.57 1013.69 827.178 1013.52 cv
779.238 992.745 li
777.72 992.085 777.022 990.318 777.679 988.797 cv
778.335 987.277 780.082 986.573 781.629 987.236 cv
829.569 1008.01 li
831.087 1008.67 831.784 1010.44 831.128 1011.96 cv
830.635 1013.09 829.534 1013.77 828.373 1013.77 cv
cp
.670008 .563043 .539086 .581659 cmyk
f
773.061 982.661 mo
771.402 982.661 770.06 981.319 770.06 979.661 cv
770.06 952.916 li
770.06 951.257 771.402 949.915 773.061 949.915 cv
774.719 949.915 776.061 951.257 776.061 952.916 cv
776.061 979.661 li
776.061 981.319 774.719 982.661 773.061 982.661 cv
cp
f
780.436 987.039 mo
780.436 991.112 777.133 994.415 773.059 994.415 cv
768.985 994.415 765.683 991.112 765.683 987.039 cv
765.683 982.964 768.985 979.662 773.059 979.662 cv
777.133 979.662 780.436 982.964 780.436 987.039 cv
cp
.598321 .167056 .201816 .00949111 cmyk
f
773.061 982.661 mo
770.646 982.661 768.683 984.625 768.683 987.039 cv
768.683 989.451 770.646 991.414 773.061 991.414 cv
775.469 991.414 777.433 989.451 777.433 987.039 cv
777.433 984.625 775.469 982.661 773.061 982.661 cv
cp
773.061 997.416 mo
767.335 997.416 762.681 992.762 762.681 987.039 cv
762.681 981.316 767.335 976.66 773.061 976.66 cv
778.78 976.66 783.434 981.316 783.434 987.039 cv
783.434 992.762 778.78 997.416 773.061 997.416 cv
cp
.621485 .204379 .25864 .0272526 cmyk
f
685.778 929.327 mo
685.532 929.327 685.286 929.297 685.034 929.233 cv
683.44 928.823 682.467 927.213 682.865 925.614 cv
682.93 925.365 684.459 919.418 691 913.066 cv
692.19 911.923 694.094 911.938 695.243 913.13 cv
696.398 914.317 696.374 916.219 695.184 917.374 cv
689.957 922.446 688.696 927.038 688.685 927.082 cv
688.327 928.426 687.109 929.327 685.778 929.327 cv
cp
.445106 .337133 .440162 .166781 cmyk
f
860.12 929.335 mo
858.79 929.335 857.577 928.444 857.219 927.102 cv
857.202 927.035 855.338 920.193 850.708 916.94 cv
849.349 915.988 849.026 914.115 849.976 912.758 cv
850.931 911.402 852.812 911.077 854.154 912.029 cv
860.607 916.562 862.928 925.212 863.022 925.579 cv
863.443 927.181 862.483 928.814 860.882 929.236 cv
860.63 929.303 860.372 929.335 860.12 929.335 cv
cp
f
703.524 940.186 mo
703.044 940.186 702.563 940.072 702.111 939.832 cv
700.647 939.052 700.095 937.235 700.875 935.773 cv
701.414 934.768 714.372 911.094 747.625 900.969 cv
765.119 895.639 781.271 893.875 803.278 902.614 cv
804.819 903.226 805.569 904.969 804.96 906.511 cv
804.345 908.052 802.604 908.808 801.063 908.193 cv
780.679 900.093 765.658 901.747 749.372 906.713 cv
718.475 916.12 706.29 938.375 706.173 938.598 cv
705.628 939.612 704.59 940.186 703.524 940.186 cv
cp
.136019 .0260014 0 0 cmyk
f
822.911 920.002 mo
822.167 920.002 821.422 919.727 820.842 919.175 cv
818.193 916.653 811.372 912.928 808.969 911.707 cv
807.492 910.954 806.9 909.148 807.656 907.671 cv
808.406 906.195 810.217 905.611 811.688 906.356 cv
812.655 906.848 821.223 911.252 824.98 914.827 cv
826.181 915.97 826.228 917.869 825.086 919.07 cv
824.494 919.689 823.702 920.002 822.911 920.002 cv
cp
f
2129.1 405.945 mo
2129.1 463.483 2082.46 510.128 2024.92 510.128 cv
1967.38 510.128 1920.74 463.483 1920.74 405.945 cv
1920.74 348.407 1967.38 301.762 2024.92 301.762 cv
2082.46 301.762 2129.1 348.407 2129.1 405.945 cv
cp
.571405 .481605 0 0 cmyk
f
2024.92 304.691 mo
1969.09 304.691 1923.66 350.115 1923.66 405.946 cv
1923.66 461.777 1969.09 507.2 2024.92 507.2 cv
2080.75 507.2 2126.17 461.777 2126.17 405.946 cv
2126.17 350.115 2080.75 304.691 2024.92 304.691 cv
cp
2024.92 513.056 mo
1965.86 513.056 1917.81 465.007 1917.81 405.946 cv
1917.81 346.884 1965.86 298.835 2024.92 298.835 cv
2083.98 298.835 2132.03 346.884 2132.03 405.946 cv
2132.03 465.007 2083.98 513.056 2024.92 513.056 cv
cp
.606226 .525231 0 0 cmyk
f
2099.81 405.945 mo
2099.81 447.309 2066.28 480.84 2024.92 480.84 cv
1983.56 480.84 1950.02 447.309 1950.02 405.945 cv
1950.02 364.582 1983.56 331.05 2024.92 331.05 cv
2066.28 331.05 2099.81 364.582 2099.81 405.945 cv
cp
0 .702388 .51696 .000183108 cmyk
f
2024.92 333.978 mo
1985.24 333.978 1952.95 366.263 1952.95 405.946 cv
1952.95 445.628 1985.24 477.914 2024.92 477.914 cv
2064.6 477.914 2096.89 445.628 2096.89 405.946 cv
2096.89 366.263 2064.6 333.978 2024.92 333.978 cv
cp
2024.92 483.77 mo
1982.01 483.77 1947.1 448.859 1947.1 405.946 cv
1947.1 363.033 1982.01 328.122 2024.92 328.122 cv
2067.83 328.122 2102.74 363.033 2102.74 405.946 cv
2102.74 448.859 2067.83 483.77 2024.92 483.77 cv
cp
.0528572 .726345 .531182 .00311284 cmyk
f
2061.69 405.945 mo
2061.69 426.251 2045.23 442.713 2024.92 442.713 cv
2004.61 442.713 1988.15 426.251 1988.15 405.945 cv
1988.15 385.639 2004.61 369.177 2024.92 369.177 cv
2045.23 369.177 2061.69 385.639 2061.69 405.945 cv
cp
.0766918 0 .445716 0 cmyk
f
2024.92 372.104 mo
2006.26 372.104 1991.08 387.287 1991.08 405.946 cv
1991.08 424.604 2006.26 439.784 2024.92 439.784 cv
2043.58 439.784 2058.76 424.604 2058.76 405.946 cv
2058.76 387.287 2043.58 372.104 2024.92 372.104 cv
cp
2024.92 445.64 mo
2003.03 445.64 1985.22 427.833 1985.22 405.946 cv
1985.22 384.056 2003.03 366.249 2024.92 366.249 cv
2046.81 366.249 2064.61 384.056 2064.61 405.946 cv
2064.61 427.833 2046.81 445.64 2024.92 445.64 cv
cp
.0866102 6.10361e-05 .583947 0 cmyk
f
2133.79 319.123 mo
2158.43 329.333 li
2118.53 358.386 li
2092.82 352.043 li
2096.51 321.669 li
2133.79 289.679 li
2133.79 319.123 li
2025.55 405.945 li
2133.79 319.123 li
cp
.00555428 0 .0424506 0 cmyk
f
2099.28 323.15 mo
2096.61 345.2 li
2130.87 317.72 li
2130.87 296.048 li
2099.28 323.15 li
cp
2099.22 350.606 mo
2117.91 355.218 li
2152.48 330.041 li
2134.28 322.492 li
2099.22 350.606 li
cp
2025.55 408.874 mo
2024.69 408.874 2023.84 408.499 2023.26 407.778 cv
2022.25 406.518 2022.45 404.673 2023.71 403.661 cv
2090.07 350.441 li
2093.6 321.317 li
2093.69 320.591 2094.05 319.922 2094.6 319.447 cv
2131.89 287.456 li
2132.76 286.707 2133.98 286.538 2135.02 287.019 cv
2136.06 287.496 2136.72 288.534 2136.72 289.678 cv
2136.72 317.168 li
2159.55 326.629 li
2160.53 327.036 2161.21 327.936 2161.33 328.988 cv
2161.46 330.041 2161.01 331.079 2160.15 331.702 cv
2120.25 360.754 li
2119.55 361.266 2118.67 361.44 2117.83 361.229 cv
2093.47 355.218 li
2027.38 408.23 li
2026.84 408.662 2026.19 408.874 2025.55 408.874 cv
cp
.674647 .619043 .555383 .667079 cmyk
f
1939.36 368.185 mo
1939.03 368.185 1938.7 368.13 1938.38 368.016 cv
1936.86 367.476 1936.06 365.803 1936.6 364.279 cv
1936.8 363.708 1957.62 307.228 2024.92 307.19 cv
2024.99 307.19 li
2067.91 307.19 2087.65 329.949 2088.47 330.918 cv
2089.51 332.15 2089.36 333.992 2088.13 335.036 cv
2086.9 336.079 2085.06 335.939 2084.01 334.704 cv
2083.82 334.487 2065.04 313.046 2024.99 313.046 cv
2024.92 313.046 li
1961.71 313.08 1942.31 365.706 1942.12 366.235 cv
1941.69 367.436 1940.56 368.185 1939.36 368.185 cv
cp
.453742 .400641 0 0 cmyk
f
2035.49 471.632 mo
2034.04 471.632 2032.78 470.557 2032.59 469.079 cv
2032.38 467.475 2033.51 466.008 2035.12 465.799 cv
2068.76 461.454 2081.91 428.459 2082.04 428.125 cv
2082.63 426.618 2084.33 425.874 2085.83 426.449 cv
2087.34 427.032 2088.09 428.722 2087.51 430.231 cv
2086.93 431.721 2073.03 466.806 2035.86 471.609 cv
2035.74 471.624 2035.61 471.632 2035.49 471.632 cv
cp
0 .655482 .430884 0 cmyk
f
1377.96 178.938 mo
1377.96 178.938 1319.62 179.536 1293.89 231.486 cv
1268.15 283.436 1300.27 325.74 1306.45 332.412 cv
1312.64 339.083 1348.2 372.14 1386.96 366.43 cv
1425.72 360.72 1420.87 352.761 1420.87 352.761 cv
1376.4 270.979 li
1377.96 178.938 li
cp
.418311 .13022 0 0 cmyk
f
1423.11 354.092 mo
1377.96 272.279 li
1452.91 328.083 li
1423.11 354.092 li
cp
.474586 .14786 0 0 cmyk
f
1379.46 272.279 mo
1469.35 252.978 li
1469.35 252.978 1475.17 273.975 1467.49 299.093 cv
1459.81 324.212 1452.91 326.98 1452.91 326.98 cv
1379.46 272.279 li
cp
.508385 .155764 .0297856 0 cmyk
f
1375.2 181.674 mo
1326.36 183.242 1287.3 223.283 1287.3 272.279 cv
1287.3 322.271 1327.97 362.943 1377.96 362.943 cv
1427.96 362.943 1468.63 322.271 1468.63 272.279 cv
1468.63 266.807 1468.1 261.227 1467.06 255.658 cv
1378.55 274.982 li
1377.74 275.152 1376.88 274.958 1376.23 274.436 cv
1375.57 273.909 1375.2 273.117 1375.2 272.279 cv
1375.2 181.674 li
cp
1377.96 368.48 mo
1324.92 368.48 1281.76 325.324 1281.76 272.279 cv
1281.76 219.233 1324.92 176.078 1377.96 176.078 cv
1379.31 176.078 1380.58 177.054 1380.81 178.384 cv
1380.89 178.854 1380.86 179.319 1380.73 179.746 cv
1380.73 268.84 li
1468.63 249.65 li
1469.34 249.483 1470.1 249.626 1470.71 250.023 cv
1471.33 250.421 1471.77 251.048 1471.92 251.767 cv
1473.41 258.621 1474.17 265.52 1474.17 272.279 cv
1474.17 325.324 1431.01 368.48 1377.96 368.48 cv
cp
.613794 .208652 0 0 cmyk
f
1399.59 152.734 mo
1399.54 152.823 li
1399.54 246.164 li
1490.8 226.239 li
1481.66 184.235 1444.33 152.758 1399.59 152.734 cv
cp
.529686 .156161 0 0 cmyk
f
1402.31 155.545 mo
1402.31 242.724 li
1487.46 224.132 li
1477.7 185.099 1442.56 156.791 1402.31 155.545 cv
cp
1399.54 248.932 mo
1398.92 248.932 1398.3 248.718 1397.81 248.32 cv
1397.15 247.793 1396.77 247.001 1396.77 246.163 cv
1396.77 152.822 li
1396.77 152.338 1396.9 151.86 1397.14 151.441 cv
1397.64 150.583 1398.6 149.965 1399.59 149.965 cv
1399.6 149.965 li
1444.48 149.989 1483.97 181.82 1493.5 225.649 cv
1493.83 227.144 1492.88 228.617 1491.38 228.942 cv
1400.13 248.867 li
1399.94 248.91 1399.74 248.932 1399.54 248.932 cv
cp
.613794 .208652 0 0 cmyk
f
1423.12 356.86 mo
1422.14 356.86 1421.2 356.344 1420.69 355.43 cv
1375.54 273.617 li
1374.91 272.476 1375.16 271.049 1376.15 270.191 cv
1377.12 269.34 1378.57 269.278 1379.62 270.059 cv
1454.56 325.862 li
1455.79 326.773 1456.04 328.509 1455.13 329.736 cv
1454.22 330.955 1452.49 331.22 1451.25 330.301 cv
1386.57 282.136 li
1425.54 352.753 li
1426.28 354.092 1425.79 355.776 1424.45 356.517 cv
1424.03 356.75 1423.57 356.86 1423.12 356.86 cv
cp
f
1301.37 246.525 mo
1301.08 246.525 1300.78 246.479 1300.48 246.379 cv
1299.04 245.887 1298.26 244.316 1298.75 242.867 cv
1312.68 201.799 1357.8 189.23 1359.71 188.714 cv
1361.18 188.316 1362.71 189.192 1363.1 190.666 cv
1363.5 192.142 1362.63 193.661 1361.15 194.062 cv
1360.71 194.18 1316.96 206.419 1303.99 244.646 cv
1303.6 245.798 1302.53 246.525 1301.37 246.525 cv
cp
0 0 0 0 cmyk
f
1459.46 195.311 mo
1458.59 195.311 1457.72 194.894 1457.19 194.121 cv
1452.69 187.635 1444.24 180.609 1435.15 175.783 cv
1422.45 169.038 1410.45 166.737 1410.33 166.713 cv
1408.83 166.432 1407.84 164.985 1408.12 163.482 cv
1408.4 161.979 1409.86 161.003 1411.35 161.273 cv
1411.87 161.371 1424.31 163.758 1437.74 170.893 cv
1447.72 176.186 1456.69 183.691 1461.73 190.963 cv
1462.61 192.22 1462.29 193.945 1461.04 194.815 cv
1460.56 195.151 1460.01 195.311 1459.46 195.311 cv
cp
f
1377.48 356.938 mo
1369.02 356.938 1359.63 355.816 1351.43 352.178 cv
1350.03 351.556 1349.4 349.92 1350.02 348.525 cv
1350.64 347.13 1352.27 346.503 1353.67 347.117 cv
1372.8 355.603 1400.54 348.763 1400.82 348.693 cv
1402.31 348.333 1403.81 349.217 1404.18 350.699 cv
1404.55 352.18 1403.66 353.687 1402.18 354.062 cv
1401.44 354.246 1390.58 356.938 1377.48 356.938 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.1.0
%%For: (vasily merkushev) ()
%%Title: (ico3_09.eps)
%%CreationDate: 6/21/2018 2:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6f66H#ehDEQH]3CYE5VdY*1TH<[^!Y/$4t#V@3N4/ou6stB?htu#`M(+?hZI_nQNr,1okBR:m+G/MfH)P/688%\G=`g8DjY3
%']i;c%nWJuLTD\=^]1aPGZ_X7g7LW?U*t$bSr5%T.UXVQ-LoHRoSgm)a(+k>=m.]$VOb!9K$eH`bdqMr2a`F/H8BZ?Qf3lE\i8ns
%o?U7GXqtj"7lq>je()$l2Q_^OLSPbS)YmI_q77$K?iW;9mIKR?".HNMD$,MH2M*S/cL+L+F$aqAAQbF4iBUEh7H35j@TAQ2"'$*>
%71Ma-YDdM0D-OSW24MoB30JG1d@%=19;a.FY0@LcruuD;PVc!YVf#Ft6<u!!Zr]RR`*2B!Ke7/i9+!DL1LT5?UYf1mCN0;B=o@.\
%qg=(;>_imsFIl/QM0!VM5[m'3#cB\\"8cd6TKNu480W\-7\`u8D1dXI'Nd!-Ye1$H(0NQ8abhdVdHq>dU\^[a9MCZb'jq_FM$Ya&
%>#[ac"GJ[Q/0AA$M/t_$<Q+[-CAbU[3]-K'@6'dL=a%7M2b9I&"JA#C,j3*GVf#Vgc)Qb.-#G,se!X>ql>@OY+C3TU@ec<U4roHL
%DNtYMeD.-L:e[?%KlPG0G8dCU0>m?TEmZY23V.uub-Qs<@p)8&3Pf?%&7nfp*Xr-hPs_RE\:PG_TOD,G]//Aa31)deN0;D87UK9J
%Ej`G,a8ui(99-G&=Ogk^fjue3cjrH?9_&(]m]V7&Yedc-VFq6=]dD$PB#DR4ZHaH#8uIeil;_@>Vh?<=U``]X0TKaC[rl@rA<d0e
%r=t4iZAgc4A`/@,nPbV?'=7ag&dc#^H%MZ5QKRchcdT5b2!IcI8J6W+QmMYu0M+Sb8P5o:5ueY.<#&h@p`\Hn'u<ia_=.^p&M0&0
%YXAQ)-5(PMO[,:U)UG;07%s)M!Rb]9M'>YkVAR]@kumB<T'+MGi?&1i]'pBLO=ll'H4GeK:P;$.n<;5eZ@d<i]'pBJ+]8#k6W%IC
%Togc$,dcS42BuKe/*/5!!5XaRr'Zoo)V\LG&`bC=.5*-Nn<8$le5HDsq@l"P5=+-@Pm]p.&.E9k:E56!P#>'$3J,-N"@F)58Q43e
%c:B1/i\r-El2c>paC>m4+rJaaT2_1W>psbC"urN]$Nt`VP?cL4'IiJ_N&&`@%AfX/5`hnBd@'7OY1P.Yqh$RnTW=hY+R)WMVl,YH
%r'W6=lUW8^$ginF#_N7HG?;sn9;:dJF&5STe_*q@=76Fc<+W"+\45K#Q?&VW7sRmCVT^:+]7P%eUZ`qi4$OaW%RA@h*s[(+W)U+&
%lm[SN&8C]&<OloDZk%8&Xg`(Y0!i-45W.B*JZ^>_mTj[M/\`fQQe,MW+AOON8bXi1>]a89h3mNCZn''!nq2E4=33Kf*(NeIs3_uT
%T\mA2kmqkP7G?8i97LK?Idd945DheB.uH9tir!I.4k9L(J)YJE^&+/q5kefP2Kf&JT2^\sn,B.JN;)B-H'BJ$;Yec0mPjtYC#jr#
%+Jt>(1-Mc@+#P@8PiM77Kql#p@7qdSD0V)2f6I-."dG5d#67NA.3+UpV!S./Vr0X,Nl_hd$)d=GMD:2;bo3,l3t`NrEe8H]_nf^f
%6O.!I%S;f2W:3uJr!NG<kp.4Gh&&/C<Wkk0J(RK2@FJBe84__+n-Au%(C%J!%[nRh78?U@!Rb79ggS,\rl*PZ^mg:>F5pZr?fr9O
%1(k'F`7#&@_649#-(-_Y*e75a(D'X[;)or-U8EbA9@(EW82J*2`KtW%BlrL!3JN_X=bq,-bXU_c`).uuFfbmso]IdLj8tH(r5ebk
%E$g[1S-8%K)G=Zibb8:=1C/(,PcH!aE?kO@+t<`"]LYGli,hA(=HmLA'qg%O<sfoL111d["L9c@BkNlVB94%JTa^(\MLqY^9U'[!
%Q&#]S?nr0"Nhuhl.RI>+-qTSbOjLHlU+N9^BIX*]P8KF@NbSrS$^C7CRBRYORiWl_KEf>j>g?9.!'fC?N!$s8_Kd,.,C5(-1/u_d
%X?b-U#N[d;:>pK@-[ItMTg)?M:kiC@PXQC"i4nEB:7C+:&db8N!Rn"*<#JA.-K^/8,"LeX.:.[IaE('Nb"3C2Jin!M+D`8HETThc
%/<pO\^l\jJOA)O-Pk4E%SJD/Rj>-s;QDq93%$`pP"ah:b-sW4'5T[ieWuh+p9-Kji=Lg\Va/,<C:o5u\'c_3g8.i-q'OZAMSkq<B
%eTd4C'1adJk?)8uS.Jgu7SH?s.(C"S8,D/".M$N)83<YG,8r#NM<t[V)^MMK?!BppRA.5i>t7)WEI^_.3;c`5R)JM[XG51:DZfVd
%NaP`9dKi1-`8NoaRA>sT16L;P&lfm+@2`!MpNn+?AJCK*88Iur&Qtcti?V;43><qq_\+Hs9?EnZWLAcpT;m_5n^>3GM</G)S6^2X
%$eWLr\2:K&*JK9M6J[9,>"#d^0,:"$MXhG2!puU(l];=Y)k`[BV#cIi`\E6?n;.k%;FY@G;""B'd6X+\Kua<j?"`;&,4Tf7K`"9^
%,2PdXZpiMf<#G@#7,pK2`U;g6*Lft]88;I1!R:[WS4o/=7,8DCe45KiUbku,b()UPnnLK**I"0&^B=Xqi=ilfU5n)\16lDWlU6=W
%,"s!iJmfTA+@X1+)%%2gHDbr^6IZ5'@i_O0*2W"Thc,r51f0p(':7^uG7sfob0cCs@PW[P<R_jW`)+_<X;m%[92PoB,f28R5a-D?
%M!GfsMc6V3UY%[fN_W:lqFMGc,Y/l2D9J.e9\MkZrC`[`eUFNbKO:]rO@%M(a=\dA#dS4iMU0FE8;K7LEl_T]Nejl;E&J]$:^:L*
%"Gjaf]65j&&!2=$WNLJ'hJj>G8b,sU,!FI?Sdt)+@2`bujH4RQ@54ZF7tm?GC)2kIe<I>s?RH)pIrqAUV5O6a7(WSl!UToi&!(9L
%?m>]XXN"6K;F$9G%0DB&/Bo%QY,`Vq&J(3Bi&K\Q7e8Z"J>H+S1s/"RO?h$EO@#`RrW$4s1@5K<ZV';jb8cp>*'fPZH]c6)&m<_5
%(*cS7T>qcUe:CMZ5ua:e:tZL/&mR,b'CBk*`oT>J18,<.(P3Jr_@_eplq['j8(W#9T#nJLlHZM/hbKqR%k]8:l3@n+m%,Jo*UK+c
%e'f/>#VL*E:a#e#Z%T4jkr:U'\=V8+#XhiqO\Xtj)sq;cNU?i$GrMZ%m4o!pF9WqX1_l:R/kK*?L;OV`EVVo^`6i%Xa>N&h!FSLF
%`gk[JfI,$sh<?&$-[e8fBM3J\F;0Fb$phE<T&C<(1)c3EH9`,Q7lY6BH`+dXYsRtA$:?3%8Ttf-jXuOqM;U,YFU9G-igjH,F^pYY
%W.mm3Nm7<Kq=&sV+/^Pk,#5f`mETo9:Nb"F"gL#:Fc^KR2dFF'Bi1X1p5"),\:XtT\YuAf(^tClp_S_Z3:D`XB!+tj;?4Em+/p:&
%!;%r&Mk65U)!3hO`?RW:o-@HT:Br2g/^Y3\;-K,l]ClEl_eI*7XJ*6mJ+9.`"Z]&XW4R!Y$);`HWi5gQCRm@"VB=CRm]jb:8Gri(
%@:#fs>6X2n7[H*oh+l8N,"]Vta(Rk4h/o/tRM=I5=NY:.@5n?cB?@^UH/=n5m;TlRSDqc<]93p5l543ATk>A#idU;/j@N7*3BV9t
%<2PZW`>rN`Ok/L+1E_Zs/oPHf9JU9?RoT[ADpcVN?<CS//oUX']"dGB7*SBTHY->bc193B`Hfrr%Q\[60"URYoB(/Zo;#-(hA_Kq
%nqYpDYa:\jG(CFY$RVc7<Dm*dqh>ii6p^NU@cgKR_>6U\H=!c?D,i6W;On`W0u[Jhpf5tg0,*mD+p\IClF`b(Y)=VdU!i^p`SZ8&
%E)L.H$sgYt)%[h_ahS34Y/R)%d+h1WU>.C,O#(;i.Z%epgr1nb1d1()9.gE^GI#ZiHPD&=DD88b?cP$31?-^M)Anm5E*Vop+WnkV
%Bp$!S+ie#d>E&3+HXi7-M>,\Tb6Q@1\q97qDb(GP\CU',3,kj4<&gt_4/K['Ic550@Ar4#]%I6_FP*#)4\`s=U;fr?V%EU%%Zouk
%9WsfOFk6nU#4%rInN_5S;P283]q3Q$MD"H@TO1uQc<HqJ\l7^:n4lH46TAXar0-buc`\"KmKef*:qsuK"$'%r5'.?t\@RRaZBZmk
%?+S"_=OPh2a_onQNa?ti>R3!s,C4ghp&";d+p`*t<suX3<cOZ5.<BerH>I[-`+5DKd\l]nfW%$+gVrc>!]=6*mN+UMlf!\-o=9f:
%ARa(D+t#oY^I",<N\W?V<6iQc4A5M1UkCMJ^QAe"N:[lh\BNn?`4>NO)(f-,OK$f.cHBp/^>PAIYKM)ERK7,[K7%T^Uc.>Yi%B$D
%AN*e"J0q+b.oQe,AO'<4l*RqlmlG@6\+h*:h'B4S-:d?9g/DE09Jfkf'8Yg"#VbFhj.$.`nt3p.2aA$.`uMssBaDlnFY@Dg$h,4$
%*M5^b3,6@\LSgX42&D`'.1d7nVqnEFSlt[mMB$]+G@cH$96,ZJ';$rPA1XYV,Z0.5J#k[[Z+gCk0;huO^/>uDgqADI-TuEZlI_Sq
%r]=XMBnXYAH<Ec&WX#\,dcqS5=JV-e"/7j8-)f,#*LXT6e)6nW'FJ/mkW2^(m:B=(=n[Y#hOg\>Ee,A%R]'$"($@mr=W!g^"u0]8
%GU^NN_)^kFe(o8DHkA-F51j#I8]bjhF;Bu8bf$'S)_aek:=CNWY1NCF\E[Bk,-i?U3j!6q*cak^YZsSAp_#C*6I-+@mNjr"lp0BJ
%L\"/mXBdLmM:^[9]3/oFIO0H+#edV*f6OBE0#_-9?%*?(*RS0l5kJd)jefsoY=<`>:cRjuMf)geVY6oWj9M#18Cm,3#e/T5=R/^/
%Vd3*aFEQu]=(OO\C2'sfkU*-p'4GlEc)]fNdG#=JR]]eUeN/^sBVPc#=Q]f6?fdAm="26XLE#FS4JEf?ZhNQWWe6(6KmbD\?\KN:
%;4:&g8?a4<M=;E#-7&RgTQ`@6,(9GrnJS7!V0rF2$Vsa'AEe`85*tu[(!//@dA6*ch$"AA7o4CQ32O%B+f;h^ITKL+J6.JE7AVL^
%N&#i<E9\2!JZIbJ(HQ0g$I);CS-iFp'"8^E'cLqZ4PF)C<^'"R.\FH)aHNh&<GL+`M\e;-bIGJU&I22+QmMW--'EkkUq)ZPcL*5n
%3ih/<PLXnT0'uo9,m@[8)C"MF6Gc./UXbPf7NU/epb"/fmY)AY#?0R&<R8$nKh)f#dH=kI2eXB'j`IsOE3?]3"E;l24,`J_k9H\K
%9uj3-VLM0Hk"/\B\[9^^8Unm)\u]sh)X/VAl#AfH;d<r=%8!9qV;*Sp+?s5XU<r^HEWsBa=<qZ1Y/o&JE\kCVYIY=K]6XV]fSQ?9
%nYRf_cX9=3_M^%:QdI;.r>ph@0#\EhdetIqL\-*#OP_\2h&O>3jjRNTNHg>-dtlG[/mhFq'-J3%*'p8i\OqRO\B'SW;t52j0@TNA
%l$&T1\t6@"?1FLfTbgRs1dU^d[5pql`880SRS,*c`E^8RHD/=&3BZ&lq&Yt5mipoL\Dc4,i2#=':34p+1"@i7*Mgth_JJ/4^Nfc,
%]t6+2R<>k&SF(bKkH]iuC&LfqRO&EHk9b;L2Xq:.hg[_ckEORl]`TVm/@3edC6m*$Iu@u/1N.qaN.PnMe\@)QkT^$:?WKK*Epn6$
%BB]R:"29+90tl:E)):&`[:t<XaUgH?"->FsZMub`)NJ/]o^9uj5mGTb%(f@#+4b0)^C6X8l^!G]$p_P<ItRAh)C:cO3rj+l2?,Aq
%B$3+eKaTYFVQMk#bG3Hrl5st7#H;m%6pSZ($T+_h[9FbA1.j217frH\NL6__GAJLnc<MHaCg),cfNYK0iCh%hf;h?Xaqh'n4qM'W
%\m5W]lUJ55p5l(W]*ps%d'b&A-?R%sD!A&o[1J4"STZ<D1X3KiqLJ1o9`B+o'_Vs2\%`i,ZX.K-]P79q):7/RTl+Cj[;@.UEo>4-
%<qE%Wq=C!]#G@[hc*D&UDdi\'S^$IXBI5]!8[Dq8KJS8CkWS%Pj"uhK/B"9$1Xr.;X$trMf%(clpY31DR:o3m=G9TBKbG@3PPnDb
%B7F+0O0Eel<N4[TD\L9:Wj^;4E3ms/8%(b;MV^+Eq72U?mZ?EY`)qKtNCHE-=-fO-ZSr-In8*JGB>Ze@D8NcoZdX!%BTV7b[=Ae;
%kglpLVm\pS^DcblS;[M^JC>VLn:p6/W*,GC%o]E+lUB!1&dU+sE<O+p4,G'Q0-hK37TbCJ>R>7X@F/Vs([)CChJo4f6kOnLf$kWQ
%$4q17f#O5HMGYs,li>PFJ3QIt&7U(lT]=XKPOMWR')q_f'""E8Xkp)AYO#q#Wl4tF+OEmrA!4depUod)RS(MBOXCG;&D%#t*fQ>'
%o8279VDLAoMh8)2@0GPG+8D`:Dg/;\BX01ah5LX!N@s-bP1+u8^L3!IMY7r[OuN/s&C`PCFqq<OdH%Y@*'R+;7/)##Ik1rF(i_B@
%H+e'j/`WT.@LWt$qVVH:S$+5JLJ]bZ8K,-:)X0V;\/`N@5?++Zq8T!+LJU43CKTAN,/\47Q4AU;!*Zt,5=JE"lrXGOJ1`hb&Q'YW
%rOBP&)QZZ5Z2j%X04@/0Q-fkR,`P]8CKAT;*AOluDS/N-PYt8DQ#cmDV-F!dcUta?/`fTj%NMUCS(756R%&n@0#0g+XHo@+EjJqe
%<m/a&\c8o3&Z2On$Ui4We8eE($ECXE7#ZUY(H;=IlIh&$2#mKO0@3F&]p#XD^@Hi==<#V38S[sK2Hl,V1"s'o8`Pj]fcW4M6/W"J
%i@NnPn$LhL]c$iR#KJoE2G9mT@1PYR&ksdA8!jM8.0bW0`?,Li6"gOe2ACYT6G=S>16GUt[kM02^;>:29g$5!oleA*kli;9d-Eu`
%c[*E?Y3Z*U7NKYe]R@.PG1uu&no^Y]P6q-o-7TAsA$m<jJ/#5t:0k>,J$mLtd0sJ^T=b"<J\gSDR*E(AIuD$YQO,6'U1ETPaY/Fg
%5ZE\f4WNR8$01ISAGlDd3C_#i2XSt$MaHb0*ZA2%<)4Mn5"g4A,3epcd_P3Qa4REIFC+&G2\/`gg>o6\.<5IHd'0c6J).-YQ%i]P
%\L]^;DBM2*;Yt3;`(p[@NAD#NeHnAqY[^tZe:Ldom0AUr#Ru.m)YfrM>Q2Z]!Vem"Ib\DuG:jk/MEoJrX)&n+V``_%:3lc<=Np4(
%q5<3i41i]!.r'P2/tYDiN;^%o!#ik);,]Q&9pfNUDAgIO!Nqp9T%fWek;ECCktTAW7?I2aEECk''jl>OAP3]cFa"]B$a=Q'V&-2'
%+ATiYr9:<7Zs"4"jY/rm*Q'XCR\%t8njpmHNK%Y"R5qI=oD5o3#?Yl7*:G`o]6=F)Wc-*54Z^1_FrZH&^ceG+pL&A48.:n#LGadH
%`<VOOq"rtlJRmQ,n<@if&4"QR)\i3\B)0tGqFPeY6&6D.Y85&6O8iKb;rO5KkYjS,F$)\a!07oR!a;=m2k*9"CXgJ,7=nc?qpa`*
%kdq1@EUEYqII?[Dd3`"5\*A:U^fSpRl)i&93<@:JM$Z0O*JOr@h/G-LJn`krNsWAs6D"b@T#8soP/AEq[L5(GREpQA?Br<=1XCg/
%eX66C!"1h$j55G"1\NFEOC&t$>VsONYQ';.9?,61!jJM3R>i=JlO^:m&oRd'q+1''5:6SmUob1,Vhbc>9PcLURUlC;%8F/H?klcs
%'KV6!OA"@ldd[A<QtX3+F8Qi,K'XgPTmhk-b96IT!!*gm<IB4(&Fk"<5F0b&&5M(1#Duq"geX&1$@)/UM7fW>a;pT>T-Hh/s/H#*
%+</D]Cu#Gcmnq/u,,nmc)L?phB*rsuE+T<"#/UWAUQpPiX>U.Uj7Rm0K.5H?XY<InU')WOr/7$nW,89OlqWd"0^^&F857mA.#$?V
%-tBsS*(2u#mt:d3P&^65;gp7>m)=`i*e"IFF>$5t@`I<-9ujpq;rO8LUr]lh;.fQsbjIpqQ=lT@M__GH_,T9L_Yt)$M\7H0RGEel
%hiYl7h2;o!R'CiAJc+63kFuI,0?PPFV4#8KC'#:,KR!".hE3I<m<:?X9]">1P9Ym5'oS^&@&ioRe;dk!A4Mp:IsBdh''%SCmOe#`
%mT)HQcdkhd/i,;up)Umpc2?;>Y>'OS$_XCR^Gb\!8$=?L>%[$QD\3'h1%T-imF>h%g<?UG_lM%F[@(*c!3\<(eRi,>OB;$\&UOD2
%mnB*:k8&ROs&0^6B4gda1QlB_'S$?C1Ra_/^DUU_Ii7oQ?2sRY%1b/lfAFI:1]&[V+Ygc<IMCD75WAQ8?mjJ(Yp":K@m[7&T1fN>
%\)8,&DS_1V'\sB^8ue)iZceU$MS]SNH"497aq%?,7GFP=7`5.el]\b/9!qeY9%E(UY9<8Dqm^5$Fu#-cq-\]0Zmjf#V;9!O?Ug59
%h)i?0>ABB5oEso@\T^7T3FcEs9\4UuB?LhGm/m]-ULgkWN*^T-]KUaQI)3:q,)uO'k$M<gUgE6mkcQ;oLA-@:7hb=pVJ5e4DoU51
%G65?U[4;^(%cYqaar(=a[]Fn"6-rC6!f\uF?PuoU%IDEg&A\'V6*-mUK16K,L9L#&l_/n03?#VuQMo,5a[s,Vn]_n4.5IGWl*ik4
%f70],n&3oPhuDBq^P"%\"dif.!]"G4c$+?UGBV5TG0P5Sc$)E4QsK=^2b9FTCVI-aI#MJ3(pCMHbQ@8"Rd]a2J_;p<J(j[qi0nS7
%eYcla<9giMK\;#,dL>+A55"\"mJCJElfOh78ZZ":'cR.I"l+Va!/:@lIYpCGdo5>H"&h&MN]b*`HL6_mJsn,-F<gH"n1g!1iuXTi
%?eZ&?SK@!FEG=4F!Hjc6A]lcr>9ITh$OX"Ng"cG!C=Wi@b;+rZVPQ5d>[X2BV6`GDJ$seaY3T`,=38b=cXuKUh]ugBIPtCpS#r=]
%+!ZgZhu]YPGI>i'^O""-O0a!QInIn[!9=u>p_IhF`WuCYb;@<j=bo&V7.3Y79hEdup=.2D-W9?*#+4BbQ$1>!5XoN`f/"!)Cb]D3
%(F+OQa3i,\?S/5;!\M?>mdaij#)Fi`[bk2$rnM'O(LEVC(:s"pXMU(lQeB7!CuJs6n1n3mq(>[RKpUK0bA?-K[dZ&3$SV/rFo3Lj
%+eC8.bncDTM+H2HGU@_?BfajJVX4EUWS;"D>A?)GcWj6=AeXj;S^FKF0(ho4)[Llpg\AC2fcCeO./CtJ-A(T$0^a9]"HgU3mkGE-
%L2l*\ia7)^at,OO?\@AqmDAM?*,HB6a4[MQH\@pV_DE;GEZ0+0$=9_0cNV?\]\`XIfK(JPSF+%trqdDt^6Gb`7J"jYX*=Q,Xd:B^
%1JQP$q:#!rH[lRPArj:uT^eDG;VSDfIEO#C<4[o@V(&t,28IBtMdJo-St!b!)K-Mq]FgJ1rNOOR&<losX9&;6B/,sr^plsJ8sc;c
%(#&:[BWT!#Nn2QAX2R?5E&hl%("QJN#Vd&=fPOG+i(oIKA]4Z1"GtUB`gqo.$.BFI9AO`LfbW#BFc8mC^8>Zd6^k,eN-,1a>K7S1
%)cEP@*?th!ZZV3]O0l69N,a"#ZZV5[3lZiS@pk"&l[eJ6S(20#:nIpEOe^TD>SM#QO$L<Kpjmoenq@(e$PS^OQRj0P=[+jG5oqDI
%rC.F]%6q;l)12*UpkNc+qk6_UZ?FbNI'kBYZOhY+\S=9h([-GL.H6^sJGk`'HJ:tp`^e'_(4t$qIIIp8p&hRsA=8E"@??$<fJ5bn
%q+^kN5tiiF.l;&uM!$^Hdb@IW(.bbPOM2LVO7.TUgGUHVN]YuRkas5:[VaC+\Em\c3``snLT!GZMh89`6GB,Sk9#*\<2<:1;XO3"
%nsV.pNn+]+RALq;!YI4C2gbcPB$>2f$:;W)hsAl&dB?n?fK2YTI^9Ch!LOSZ?@n$GSm[0l:XKm\HW9,iC"F#qHki+gRq:qh/N9`l
%-F&jEk.kW[goQs6<HJ,gbc83V2:l3["\;0re_Du\ErhkOT2fs=qnm%=gir%o!(Jgrk@Wi2XIPcFF.\G'<mClIJAc.Ok5l5O1$)Z)
%SUuGG(_Pe8dbU@(Z#&Yj!lV13Rtc6,b-kdcp^Hu.X7!atJEXMG)U.o?R'9*"-cRO$_fc$I,d/mJ)e@/NqOGD314JAGggKT+T,:?=
%OIi_$<2DX?&Q(m>B"kDaC0Mk8A@D+sec)roBZ[Sts/H<,RWdV<fSn6Li'^br<!WF]fj6?e-&2)bD<Wi\Nuh@m5*ZN(j6#5#Cs1bL
%S2F_5anr`',]<QDIS//iX9<kEZgPIC4??.nr<2h<paQ%@^Gg@G6;m;3!KVRe$?4Tm]47,uJrqYK_/d(-n6)I`D`^-t$ULW<"!''B
%NE\4^IVg"3)e/UCk,85bD0,hbeFXl5MB44^`a_IY^'.abp;-`IqNS(E*8ra,"kiQu'+kk&:7]`qOkJNsk<%RI'Cs*&4L7^i]JG6A
%^=QB/e6af6B`ooK5'In)<6.N%)b&]J/sDe>c#TO]:@u;f'4i1'T'2t`3g5<OD:`:3bl'-$Rk8g`G9T%qJc-:nJ`,jjj6m%kX(k]S
%7\K_P-d!/,85s>2?1[ehJj<gN,h0P[l(NYKD`Is*P1gEb8IufSg-2Nl#6(NAQ`5>Nb:GW5=`F:N$8r9Rj6Y:84[94F@GCrqO<?dU
%!AXoiiuT=qqr7XdfJn^<aKq3B:4CVISauPWZ'\(AR*&LCNSIuR'!qHagra9@?C3q,)\^KiR2pKIIK7(96Z/9Z7%`)X@CQ;a2,&\4
%@mc4HDpXWu17DBe(rUL*J<LP"-RI^sO,oh@e'%9)'3"aDhfP\-ZTU(`gP@JZq(^QPDrKhk[c<g24XQm(ZL?Hn'E>W\E*4"%,<&o?
%"TKk;C]^a]:>J'Vh^J"A-_6jiRgArk+M`&O'B9Y<kNBiK"^ltqd!h9Ws0*[&Pmf0K[AI[:l3A@'\4P?(o0M"_&M&-3.)8h=6L[^r
%V7I`3+8.&G::"msO`"]uPUn/:R*`4@ftgA,ITk"Kl$$b0+2'[fPW8HZF3`4'm8B$).?'tG,8G<_IEHT;Dr7*M>PIn!h$[O0ba(Hl
%)_rSG]P7'8^Z,VIZ,6=>LR]&AS[;TPs!8)fq%BJlm>,=[;pD'21*k9p@ajYRg!%5[A<3F_diLHjeY`Ajn%YF&a>nsGbLAWCGsU:t
%!XNL/1N.s+<i940S`rk^CfmA=WsC\F3Z4Z)'7.>u/^q5mJEBP3^&ajs6=mssNKm>a5mW;17H\##m0iiRK!-k5EGi,AKFl<\j;7i9
%o\Q$d*ds<Fdk!S=)c*rZ*)E$cT2"kcD)1YflC`c2HNq_T#;%)GS#nSPFi+;j65TFUh@YG@mW<9UJrc;CEJc#qR$].?.^-X=#iBnK
%%V1i77/4sr1+/4eNYNk**/K1b]$kU4pE$*A?hj"*No$Js:Z,"3/G/_]KSmO^aX]1ZR(*FsOaG#DM>c/0,(G!)Nb2E`Y8aoe:td[M
%,Xu?JR:QtQ78bB@WFAki`rf<W"@[KQNBCO`#]8<?l`7f`,ie<2A8(Fghg`f`"u.cO9D/R2:B-rRW0;#VHD0J[(.mimkMZ(UISY,P
%ada$4GaBp%mGHBc;]r24CHf(rK)CB2$SI:+bl2A<brQ@-s7or#?gCcL3(PFA6Djj,9iAHO7uOPiD?D@GIdIHSd,9i)"&==dirI_i
%ErW7Mrh3K/$:]rW6^*AGf>pjrrVD:e[C8V;&cdk<7TSXm2XTA)'@3[*Ph/42<&Y1BA)t@(";;SnI4PZJ=.B!AZI/E$!\EP/f!*I,
%2$"!UKE%--nUG2od!T^#2&IjD\.f\!14i'n`t\WG6D;l:c,RN^(<1sKn%$0W5CugjYi!n$IoSorgH$[6(dl+LK59b%_eucTDq"Q$
%j"ju<gb/Ocro&8FbbSOJ(8f-3"$bdAaUY"'Dqa.0:Q:Nc@9(LG=,I8=T0&$d46JS(NA7^?<*pO>0WG5gFI?ObII6UOe&O3ner'$3
%qLZD9R@rPd'D'OK(knEHM^aN5N$NE(4idbc?XlEi^^G0V'Lcmb>pF8!Vc\mTAjKZK?&p?$4oWL7kEJr*b^e/*%((/XCtOhji6"Re
%-lGPX5'InQ7?8F$;?ppbC?VGeIK8S0[;HD,mNpQt5"uCm\:-P,8No1]]kRfDH62ETW!"n3$#*OSfeV:Kl6!j.&piKVKuO^R*B3B;
%)W2]iBt>C6>UUR87AGu(MFWLk`\Pq:"-NDYc\0[!1s]QEA(W:QHO9*,0G[WJ/e6*k?#<R@%_.\dK,tEs,4fO>'-n&F^*h/p^F[DK
%%iZC3s1<%q]a;h`T]Bc7\Y;#`Lp]m*NWgI5_q'aWrRFhlha'a159hskFKY0<1.`QEBbD.6->*_pG:^-F>r]'g`RcWAGZ0+F?!u";
%CIbH?.b2qZRt_[+Rs$Xl\Wkql4Xr(>HoWV8)q=6,okMq]fu@BB=)pYogU:\E4GOR.\/61Vhb78'NmaJEh7Y@c"/qoNgKpiCGJ5,9
%%D?%gCK*f5"g`+>P5m^aBBQs5[FhM!q?^iE9U@/6E`pr@MoDip[%i`6Z-CX\hR3k$!lel%WM,X7!rC[%7]5*knu8\L#bkOHhUJZ:
%W8Ma8S.EETgL+6sKq&'parhoGc^RYi"A\c5Zk+%Z]Ke@f'Tu<hmj1il`NOhqhmamso3H,K$1#W?,f79HrE@?u>U'U+RV&5tl3H@<
%S^qc4C>/k7))/'VXr\'LC,V<-K\`m30L@crqbX:p[Inpt=/E,6YOEUYXsPOgjr\n2gD*rRn]WC^4,qUP!OHs>Rl3Ar+B*Q0#Cqm(
%ZpJKQS-TUJaEJ)V'g6n57\(FaMPle/msOa%otT8CU1:Z_9d;^@?.nlf\4*ttrr>7bK$!>$Sa9c@e0u*seJ:[g0BW09g/Nf0>h`eC
%mPLR2E2kk?*PH9B11n]_;G'TpDAYh7@5g@lr4,YlDhp)%Kb[Tg<[C0MrB@3]k5`D>Osk;oK0MO:^X</t08]fKVAICQXl)D<oCI#t
%^.N&ga7GY,=6K.>R*iM.1Pr1u;R9'):c#0bb\Xh)C&VOC/\LtVr>"]R[W`r'SD(apN*53J"K`,JeNP]m>o%grk@bqME_4IFd&HPj
%;=@^/!joJh/3$G:m>kEJ<*9h7jij#t5.r=8>k=R'h9uUO'6NQ_BQ`V-Y#5IeXt!"*UPLBa7(O#3Z3!DT4&!5uaGQU_#"_lgA2:fb
%Ontk8#X:nHA5QB0*;1o\"B?5VcSY:S-SPnJnGOR@_CpA']tK=O1'-lSGZ>FqMVsiPTo&op:u2W@+"-V/Ab-3*["Or@JD^W8#PZn4
%5&3K'c&ssLLUmrKIqfbk3r7/\!>o)#GgN,:L38aIJb>Y]U%.'j"4]D,Xto[L]5,@<oPKC&?moZB'%q)/SRs0NQ8uD>OE%5:gt?Bi
%Xqtgim[D+V^U@WB6\_nTDLYDu#PU2m&1=Q+f9Q3R,4O3$_ZA9@^<Z^/C=(VhW[9,QHKX]kS*f90B"^1FJKeL=D#O3h=/:_%gFN4R
%kSqqlJbt6fC)6**U(OsubBu`G+"$&\=1fhc[mRXTB$pO_4a:X)i0dmg9U?jb\lo!4TAdNUeXl\ml-YZ)VcBo90I]UqlNZ_k2_+YG
%<V&kQj+O!IZ?TNkfA1eb/!PZA.eL[;7[Z(l%+_U&o&W`_r%Qc6SD3SG=Rn)>eSfVAs3hj>JKbuZY@#X`Zgg]aohGat"p=X@^9@;l
%U74!d.?3W3r+D58K,&2j0B#-bbgg<cq,TFM9>8GqV/Mc2<3IA'kuZsYF7GlElg&9]5m`JPhric"Kaeh$*I0Rl%Y[#!:TJs^Y"SB;
%i.]KScg-a2klnt>h\_Xg:@<0QqdkgfULjHt)"i3%TGmRuaX(lqk)2V,%1;GU8t=N7UbmJ#$p_n-$'h"5Zoq<s+alm444@E$$Mc0a
%@FVnpEh=ul&&a>fps=M]Er]bN8UnS>#O$31A".<D665A,1utS@l'G9AE\k..g%k\):tM/T:TEK.82^(CiXCK"dq]/"$Nl\-Hr*m6
%!s86dZgK$u-##Q9I\\2c]mDY@Jt1MdIeYtPq6QViaU@G58I\_OOA9Q9HAT[Li(ChmMFMT9lORj&Rs*]bGh"sTAJ7R(MO9(g7Ij-t
%U9JjHoXM>X]<f/HhlS!l9,H"N^3.f$CmLRLj)fN/ZCIlYZ1`ckI@-2[2tsKdG0biTc-rTPZ[JlQOOGZH9Nbm0@@go]anK=kSQXV&
%HASclDm-Y(qs>&7"/ac/3Xo:Ge?L#I+'tQ,D[T#m;;KnW,\++@nu'#nMt\p!S4kSRaq"`#o)1R$4@If/L3_JW%b[,T?"q$::'qB<
%nb;nN/PM?Z0us*@UFjQ%8\V`_I+!%lfZi$SqVa?)pU=r&kP`YKXKe'r?gOR5#K7<L6hlpqHbJVg9@((f]Y7afgFU;oG+p0FYWWtO
%>=o[`duXIp^#`HZ&0Te(]Tcbs3*Q/L*YjaQnYl#mTOjni9o?l[?L5Hal?d'DO=H'QO[MW_h:gEqq5(Loq>/k"IU`+6SM3+*]/Re%
%Q*!A=YMi?$/QFj6d&C/[6^Oq?_V8\qjgZ/20CCD^XgP'eG+)_55QY![[uMt$9I"E14R[(1_K'.'kA4p$DER;cAU1%Vi\dcU`3.WK
%=`;AJo!j)MS<K9Kq3GZNS(5H3%ROdRFs>=V,@6]m%8+P:l/I0OBRB_:[B>D^gf3k.;4?C-'B[Klp.b'sPKV9:PAtf9Ma5^nZoX7W
%H'E3Cb9jN02dT^NU5ji^'MfV?H2]A*Tl2T\_eTbu:*\_S(GZ<uJSCMLglXk9XR2moSYPT,e-Uh)XJaq=B\Yap"<)[.XR5GQf"'jJ
%H,gfdG%Z0&pjW3/V!2:rj'BSlG8c!h++#CuG>V`m4')]!#c(0'a-3][h+=BT-V+crHU5h$hq+$fNK]EfXtMHHV>U"_RT[;8eh.U*
%9X9nbIdDPHDjFh#\8\'eV$qd6M@Z[fG3pV/gh@ShjSS=[UA?KZCm>osj`I6(aoW)thdlP_BQbb&Z6,&>mG`6\,b80hSl"jb]V[$+
%.U]_pQYUq,q?J<\=&S\hXdhPPjc8`RBB&cTlf3XKN&rQV%[@2*\k(bs>H*D;@[VSthFfWgVgY0#_=lW,3XIjQ]"Sq=eX(`1oeP,P
%>ZVbAIJ,/X%cJ(!j(Hp4l%/PSbS%VB?>FDkV'Dh#R)Wt**k7JhQYhUO01Vh`Q"m*>9<FII7CoLqekT`>Y.fK.gmc78A5bore:"R(
%`Y&hA^QL!H;Jg][E.+S)&);$:*&<<BS"@IZ%T:^I]K/S7C<\_0^bf6_XLJJ[Alh^H:[`(On0O_k\:].="NHYb)"'XKqlDu)-G>SA
%Dl&ZW"1P^cn:m"5F\)\H$Dhho.EZWZH>u<":Q.HL=XUO&2r7`=nTVUtLtA+TVO":</\i2NCYf&ne@KqNV3dqIUNTY;/46o0V7<mU
%>&dg19!YgO-iq%oKt>4Pc/#)Zd:%cnk8^,N0CR\i^OJo=L!$N@]i\tB_C]J'\];;P?B8t;n(*I+3)(4)4D)%^[7I?ehEG<l5$.c'
%[As,W!jT`-\lgB;8O[edDS)%/mjor1`0SSsTTT0UTY.CD*OSPu^C0XBSF+fJ[HuXf_E"Z3Du8:EM&:cUh1.^L?&Gs!SQ@DtaU-e0
%";lP*Zo%KY_WDIGRGUh"m^MpC&kuLmdH?p-qf/5gM)8-";2d:YCf-rta7hYF*8U!KS%e?0A'8l?"/k[Al;#Zh83,Z&I#"I32+'Gc
%h;&t45]jA6)W:=li93<q5oegK1Q@/46MUj1dkm6dA,+FFH5tOo8I$8n'4OI$!@5`CPYs7^U9tW[dPb_p65Q$o]D$Bg6b7cudqsk%
%0HR(QER388fY5uBW9ZVAGguZH,kFN4p0C.*?i$-T=o,@MmZ-k4Fd\0:oL`o'I(q1j5"TjoiPGgP^Aq7=rc-P$<=_SJ>k]aK)PTDT
%ok,PaU*b[u#S$FI*RZt&o+cD#aQ<m'(nqr[iDVsH?%)Om062Y<1PfD&>f$o9,<i+>GT^@MK(u9fGh?S25N0u2REunJ(EK-U;M$!7
%HY17ekcB!?e8DiAlP2!_*tCm$JJj)6`j&5(L3DKV<AN1<,9$d\0"XV'%H7.(--iE&T(KXcW'-F[s,f&LYrDkbV@f<;fiOsWpP=oa
%KMYj=T6bRq<@rE9dS0*_)`ai!8t8+pW*0k/BDFC_G':Wg%^3l+X>*1n;fOUDkQ9g$akHa]r,k"sI<jq%72DpjiGfKsQ6ES<\b'GU
%\`:uh=)ccQNf&,+C^*m/rj68"+aIn+^@bJq8CAEU%BrZ6LLTUY]-h2HoD:JiOa+065CJ9#820A!7c&GN9l&bf`c^i+d[\oam^(00
%Zhfkr>omVP\"iM!np#"Xm&:5`p;Gsu)qIRjh%uO?q/Xnc9q;o;?!=G[l.;2>L!jr4R/>5c7k7Af@s^=6bN$"dq5mj[lQjH8fPY$7
%Bb'rWUsq(m?WR-/Usq(m?WKmWF(u$Tn0t=q%rS*'33K)V/C]MZ8`^f?>[ld:]E)i2UfFU?hUQY:^=$RmG:6.&02A?gH9:d6o4kJ]
%nCfC+iIsY@o(B>/6;mL"G'9XLGm+"=I3^6"4?*!o]UTC09A[DSh)t(NZ0(,*JI;uQX-2T.ar])r9E)iY:2]M9^l6i.\t"Ce*'([M
%cVO`O_k,qIksVdr:NYLA;'..)75Ctk%F<>'*/P5mhX3eDG0hfdcoaPC*'R=4icV6ufI\>Z$NZa;>Vskf/u6$i.8aq`V.;%OR,M*.
%Nt)b4_f[kP9k,5C7A]JT0ge1dhR6H@#f(6l)g-lq5%'G.',tOj3I-,?jF6Ni2-1*2.^4c;_$+RWp7V0jR^Q^Gqq#8A)Tqon`oBgi
%_\r!^ges!#n8r!9a/hXO4d&Wg$d/+UAQ>mec*Q.f1<LB=\+PKp&6<R?8PL0b$OiSQd-k$50J7J,%(guEp.F?-(c]p`(JW^HM0^Oi
%_FL]-3CS=5eR4CJkI,p"Z*g_3Aju,_NQZJIB)ed,`aq5-1],d5\;/dcU@K#TK\Gnf[:f!]8\B5T#";st,kT7<-!oVT_VGkN&3<6'
%QScRGkOH+qB+rhbj"`UHpgoUkW+`.sm:1uD7")PoFS_hu>#&k"8)WhH/gF?O3D!FqI.c<8SCH%-B3.kINm*\e6!)N!l]&oqTT1>m
%NY^!#&#1Bq,1B"cZ<C%nV''C:`rsW]TXJNa*F*Jl=KCoBH1iA#;XY\?<uLoO[h5ej.ZXn?Gj4S^o=2K7!Vap@%`n'.K.]BQ_ttO&
%"iHVeE^s(!XYO/p!+j6&H'Ic]V-$iq/DW=pg<@t)_7$f]PhJ7No.bHSj.(\2EbgFl:BJdD]]BCdn7c%K,qcLFfMsZ;^Nj.dG!fA5
%qrmnBdc&`I-9i:g;sWRK7oMA3X52">=YV0jr'`D3<YA44oOe(@"u#al/I++Miee6GQ97/^[h<Ve\,\ODFHJ[8XBe.sNcjmpBE%Ql
%\WVt>_&f"CZ<OGd<.9HK_oG+ZVV+'bDcKa3gsS]2H:%bXUQShbaJN>-Q`ec?)9p1omJLAabDS6>TfRse:PUW18rVB`b;GIRTPR0M
%6fXB;*SIorC.Gm@9pXed9r$5tlR&ZccdOE=)&n_g[cj8A?/%A"0.)SdFhKjo:`,$Se6'RfFYMuqU$(3OAYW_I]X_Mh^9\s"K.r[*
%nR__Fc>J2Gioa7fE(oOEXp5FEO3Ni2E\\?o8G^uki]_qCZ]")")Am&Jnb=P5fNSuP-V*-sRTY#6n$e?Rh[*Q>fmMAI7!3B5EpRd%
%"\?R9lhq1M>i"&2m,+&1j!a/X5AbLs>!$tp="p^iio0K+Du/`i?`D'<e4Z7Beh4FL(OZUq,=j\T4Dnf#@-:GS@.E1><GNX\lb0?#
%F=<:[&D`6ZpXREM<X3\@SnV9:r==B]mbkMSH0sjr-9l>np,?nSWq%af)d5um5:IX$eir*QMY*Q!%p(tL(YDJ!g-1eTh2uqp>_I<"
%:\+1X7of8C#&B&P56j^rjaG6U\;O]HRM&:-D6E'71i%l%nn>58^V/A_f<.&-[T!!5;>LX\#3*Kl)rm^UGp_V7iI!\[4dY+PqO1/k
%cFAGS[+G&sB^QFjB<0I!*ad@\>ta[JnsFfV/42Ot=$1XV?"nkF505*#U7H;U:`EF7i3tcL"H9C)C2Hs#q(m6iLpgXM0Dd[9[bYH&
%Dr`ZNk4mog7l._eI^.7]]'Q<I]YfkQ7a'MHeRWCYYc`f5eh+FqZXpd[.Kbo)_Jj[OCRt:Vl;BYT='%,34,8JbZVpYSA&L%N_L<k8
%Sq">,g*BQe'r7+3NS-I4o]bb/EQo5]a(O"Ji)gMbT\>G3`/Ism,T-]Of]*$-]aAuH-,BGoL91"7/U>"HF/bLar,]0.CW<sGDBC34
%pIG;lEFJIk\TA%0KWdjeYM\\=DlRth(0^"6pj*?XBjO(<R`]?MH<'Ajb'09p_,81p]9&0H23#(HPM0%./=FYI??ZTK"&M<P]n"bP
%>c%k;qb"W.1%"W=Z5=&8c19\`J0E16c^%B;M<&Zd`-aG%ps?SHHApZq+f1$BV:0PIj?WC'<^TR3YPkV?^+t3R88m@P<'c!f'%NO9
%"`QMZq6,!2__hsL(".t_1jO1r=j]^OSi!l_k-W@o"54209CXff(f[mIA.5pT:8QoSc[=*Fq,Sr8XKuo$gG.\O>((0$im*1`]6PRn
%ebOYgo7_3%I(cWCEf7Cj8X&@0:L(YEA\-U3JeI]es8=eQC<r6X#uh`.Sp3W"!H!72KC4LH;#?=KV[Oi;XT>JU"n4iS[IfB&Y,:be
%mH^i=g2.SnJ?C,u4bk@&fu*Wd>m6D,imLZ5*82Wq$Ob43`M=+3S!oSOmd05X/UrN_Sb<]g^<n":1dGNnBJO]C@)-1lSbIdpWl@]&
%Q9cu;jqoRJVuiBec^cs<MA`V<;YBh^HY,Kf<4oT%a,rn2]ti%p:$tPJCNZ1]c>(L.3XWJt+*U8%8Q,6QpKFaLjM9E:$0Nd`fDSnE
%`Vo0e@3&nM>"C"J%G(!(O#se6n<+jL`D;8Xc!mr>gH9u-GLCC_>Q`FQ4[+B7P;O]0M++<8Lc%R']QS'sZ;9hXoP6Uud5qffd:@T(
%hL&JLP#S\nanV,J&"Z292.:d`<8$#i%8Airg[l87X.8&%5,^Dkla:2A:cFQjgmbl!mj/H@U#pm!WO_up9E#*ZB7%q9@bl1K]274h
%f(%JF%4D<7fXj2&.6E^b_5_4:L4Dn.+03H(6:.k%=0!9oc*K;,&^5=</+?hOjgchd4[&Jn>`a5mF)UXcQ>p;/0?fpX_6bps:V?/:
%HnLiG1.uCE>,iu:][Lb^A`:0(C2EA9f)I/>`U\(".`i5lRFO<$4RF+Q*7JrK-h-:oL#`<SULc"0SfflGcc9hCjnI7l+oa6(8<ZM3
%m4)p4[q52j$`2ZN0"ni:E(j1+mTEW?[Z&J-/Kal\GK(BMaR8"QmWJ3@>NR3$^4R!R>19Y>k,*M89&hP"&q8ZBnTpGE*BYa\C[K8,
%IDbSo)TQU+SFA&sHNIqDA6qalFQ?!MQEE$_%C!_8p"lNH$#6X84Ke2AO_)/d]d<<9'o8HE^>DUhSgC#dA+;a-jl53(o:4&m19Kn,
%$m&Y7WPgHt"Xu(2S!#>c>",>smp!d9kqh);WBt5-Ef@Na!Ka8E=+SPmH&/587CtN^]u:q5Wh;`&G2Iu0.'KG\M-J/lWKeZVFmBP0
%Efs$Bo41:;i#):gXcj,3e8>/e57Q81/g:6W9/"1>#E.ia"6JMj-+YYsYHN.u"KbPQbm1]C-@;Xk+ku%&B;M*!Ips?L^L4_-5@oc;
%P]Cp!?(]eVmj.Mh81kmEDl^Eq@MB@_UA%pr+fqbGEM+oJ2R^Y@]N(cWGe)i9*=D_a0kQs[Yopu]rBe_(Y&$XLj(4oMdtX(@7!pMe
%03ZN;6[4;6]gg=+cCR3fb__C7[U@sg'@3`FJBh^?8:TrUcBm,u=cn2e&![:^eCg8tM0Jk<bd5jQs4CPdq1$$5m>NS43]?T'M\b/^
%f+'+K6cm%9m.ESnRr.HYh1_VAcu\Zigupr'^O_HiAWl:Znj#]M\,(#?*<^`J4uB]'FBf;aF-bZtGu+Bd0rfbc8[CZ'JE_P5Ae51'
%@sc*J?mu<1`gL_p7SlRYc.[KMfY%H/1_0.lSH(di4,n7O(<pl>NoVZZgBd&0&[EoVW(=Cn%^k-i@K3DGbtsnd"0FLL8+h1@L%HV%
%F.629[gi`/D*1C6FGG.Sa&?L/Tba+kdAHkg#6&1W6EN:j24Gba=N*'!%6A0*Y;Sbu-LF=#Fs^K*_8P11:#J:X2K>CA&ZXR3-)?=]
%3plYL+/B))P=It/q9V%f.^.kQb=SI7/N::od@$R$JDhNag+7@YWjY9cAdu4uO83[7*@*of\R8EA]sfDN&E8uD<pO1_FCg^8MDP_u
%Xgd\%,C`WLrX>G><1U)7>(D_kHJ(8mQH[.oj\48j6lpc>%/G(l+2lNX=g&d_SbO:2MK.X[$!gcImCR`D95<r*Nim*3<0oaP3(_#b
%U+]MA>@mt2l;,m/?&bG=BSa"Z%_6EtkKK<dT^J&^Q&@j!S1pFG0P9pT#_lA3<P><L^5$Z/0Z+n939Dks`,XcBmO#b`kT77pIXE_c
%rmCbM_k=/FB%&;1!*R2upIVbQ_NRn5Fe15:$C7+3m8NtMiPh)@#SU[&?lVQsq"SFLG,4JSk^Ds5UGne>SlC%\K(#]7hTeEZTI3P#
%#F+]?c@P'2*Pa%/:6\5).0o54592SL]gEk"s+8B*)i3u.!cJ%eMVSa)#5-&\ngI,:Bj[Pj!d_&$m/(7\Tpr+lB/r`;a75knLX)+T
%m0++F=bDri]SZb;lIjPDCTNU3h)9;=:*\ZGX*(&Z"SMRS[Z/eI_;0d<7Y7'm`238&_WWr++T#UV%FrNm_npqkle-gT9*%"?2ZKFS
%g%9rp&UT$:d/l:'pAj`/_s]TC?`H9E"ZpX`q)-mp%eB@hj,9De6,#qonr;Spld``b8l5FL8cN#Z_D`[:02G6gj?0-Fkftn_j7AR)
%5oomT)mg%D]-B4Lq,0gl7,o>FiRSFZ1f_hSQZ.D&9MGsRc0ema=Cr8YDtiQ&B%^!1PGO>J-(JXie[o7K&"!`=8&J_]2p&pBSBu7k
%kd\5gEqK>nA=B3=o(_s`62WD4[q5rP#nV7g3"*Rddj1^>&-b_=d"jQj>IUhh4H!4Hg+c[,g;?O&(sLg,VU5)qX<OBKG++,Y`^lcd
%4$?h4[]^2#TqbRR@T?!WE\[9g&dVA)n'F(*#//^^[K,=lPD-h\pnA'4aWQY0%a--sC;nCt_&NX+*gS2S"D/d&Y9"2e#XDkY2?JKK
%/=S!3_l%WBrVOA>oYCNbgYE@lL2%9uoa,`5*k&!_qK-\L$\SP-*SmAk@4\Xc^>Zd+XKr(nNt/?$E5[W?1b<.TE54i1]Td+I:t$iY
%G'C:N08K*rWZcnH\eXi7Dk=VDD4!o-S,&FiUV];$JKT%kBD;$A_mSkmKf,sonAGAOSWu%06U9S\0S=/KXBl\u:jN9Jo=m:od$tC%
%biq=YXbni.('c0sr?EcnMsgsK^4P`tXheB["":H\9s!3rkn"#i)\-`h+5-?'2SKqSAS7@s8=;L?KtP1-N[0SsP_6qOr`:L^JXTeM
%G]E*=e!_Euegb,GX8@F^QLecb;_XE2dU!(VNu$Qc<jnUI#MLb]OW>T87>kVf#Qu&]Of[4GgAGBP=o77A:dD^bYM'H!28]5IH8^Nt
%#iZ&^Q>$jS[pTpo#ZP"Ce,%gA;"@\<VH&?JePGk2G_(r%*?DEO9LgYSrWiSd\WO_E!l<Ro]l!rXr*ok2g4`S`bKU8=B*>0[C_,-F
%,QK)ef3>LP:r#r<g&<jcJPNf3W5[K#M9&Ld-XbI$N6kB&fp@\HZ2RH__6)`!Q/>qu3GdPrV/$@.?mKpG*fX_=ggdbTU;1.rbP-&/
%;6U5Ir3Tbl?ol(2q4l'`,@WO$mp9K40Wb3n*;gspE&^;U#%#126TG-g(R"j7eqbhKV5>7`elu1slrIGFm#AlAE.&#Amc<-?<^e_H
%p$KLS0JdF`nmhih@><Ddc:kk0-!/u+RY"Wt+u'4VG,IcLdQd7J_re2EJ5LuSO$WUA&DKQ$FkVRsd<XqZJ$3[8ZB,&if`T"Nm0em=
%(n02,jP(0m^M,="dHM#!`XQ4(M>,LGUWW85drT_WAB55&_`]?'eG+oB+66M/B\079-kEs@R=g1>NVrJK9sjc5/-As?%FaV1aS6Ju
%VG=]cX>]RolVcU].$nF"O-`s9]pj-;XY3s>f-><g2`0t,b4](;nr&mP%?kf#$5>f;>(U5[f<e$*f)sK[?I/>l'_&odMjOd(oOcKR
%(E^4U2!oFC@qukI7<ZHfI"BK,7@E]5a_8.+Z[I1uB\Cq3;im*Q6^IK'.?C0I(X?k$nqf.9DqK;O)eK%eCd-fs9R#>eoe3)30s$O8
%p`q&%`%7^%"1B$?c6k4BcXGuWN*<eu)750jreGIt'hPf52mbcDLidPcTdtteO-oRrV#Jn=s(tECg-q<=am[OQ?ir#mp#"Q#Oi%T0
%_]WG#LN7G!G%BQN37Uk^a77dNrU);1gpf=CafSi1nSIH+rfl;$%u78k-G1TD?L;Z;m+Z84IJ3<BEcL!9UmDQd>CZ\OG<!8+Q4/OM
%Qfl6EaRL5YX,*[QMnckg0MRqh[k<_D3*<ESCJL(cbB5dH]S)>+jWM9U*)MT[.L70bh`QCi^qoRsq3lU[*$+(k/b1dE.pIAqon!8.
%*X\D3[6VH@asGqsK?,#B^9&iPpC\IJm,6J89QREXe(3L$.RMBc*A#deGrStla6oop[@Q'fY67k<YqOgcK.'C<VA"^WJR>VNCGb^m
%q[pXH*BmFWc;jENq+@V`!B3SdF90gHddtcAdY$&LV"-NX0"mhBBJKL.Dj?B%6o/$7UV3$i`E,'IW8fn'?eBbE%=AqT-QW2?E/j?#
%[h9nu=OZEM'eXdMT5hu,a%b^`L;!H\n"nTe[4b+leZtEthEPtYE&>:+C$`"514elgLBneeG[5>X\6=6PNP;_,(3!o8%XGb]8fFrr
%Zl]CLb9nsi?E:ZQF.4SPMcVlZFO`f^-;"rdbjHqXds6m8Lu1F%Bii9eV0H`b?6C(R@c`Z;[H)4B-adLAXWGEQUpkScZadaLEF4_&
%1o`Vg5&<n^p9C:#<;Y#\B"=,^:*3b4dRaJKTKCq69:_WZpi*(BQ9%a49Dh,SnFtfZ[H!J?g9,;7%[WX)Rp'u`^R;$dMn"h6gj%P4
%iUbE:lCjH&PIoI+:.f;Rgj!A5qsZW#3bfaCV"2`U7m"8R07c7CfA][#nr_^kr4DPGBtQ&Nk'OOb;kMH6jt;^'mSd'-G/BNPG`"!l
%BWMrf/a2bo&rk-^9@5+N)*^4;m2)iKdD(MnruI\<@ADe,aAp-!`P_Fh3-d$)nlglhGjj9S9]mCHXfO_4KicRg5/O@il7,YS.U<$o
%X>f^/hr`B";doZkDPQm4rUrid_,F31o'fP%DWuF&4MRIM%khm;q=(*e<kPe\+ef]&D__RVaBng"]TUF+iRO-o=Es4R/fn?6H+=5O
%T2P.:=?a;/hC)HL_Fu1q).qX/&a&9DKeVDpQGVY0p2O2<T770jm&Lk%p<WN<RMHCNS(HVcn5c65@LDQTh9+^4h;aF_hT\eU]\d8O
%_XYn$A2s*=ru+Wa=UX21k$pW'\Cc*7+'l89_^Eil(-^7b?c2&RCFeAfP&qDPb\PaJp?50U?ScoXiLA-i>klTL:PBlsGOX2SnC-4$
%*.GH"5DA!8id*S6F-R1Nmog+X;K;Ff>VU@_>[(YI_i;q<O0EmA3s^<MDEl#33d3P"512N6o<%f@gerNKBeE;o]:N5"lnNS/p>XgH
%F/Em#na%,W#WsKKD][4RkKB!uXj-"Wh!VJ^4h#@cJ'92g=4t.VbD@osoR'W14+00&R(Fc<$$02@bN@TfI?U/4B4.A[XZe]<RLR$W
%jVomrC$USEX'W[DNVV/s>UuT-@qKfUo!L;=QaIUkQ\<&pr(8hr4!2^>L\!'HYKVntr7\g3d+e0HDd0(6rN#[Jq;hAA`Va/18^F$c
%eop13:RAqGmX6HDIm:]R4TDLkk2u>qDTs-^Ch*I84*cTqk*oG/b'\P-.kf+Pm$/?Pf+[8"[?lNg!jd%?^*&06)[kr[lc6m18LqH8
%8@$DHLV+C.3*X!0(Tu?D3t&O&c%C_JNLS.D^,c5':c^\;/C`P1SV<AX&6fQ]F`q/]`ML3<e&A^)meh+.2]!cE>?flH?eSeE1SsHt
%605DXG]pC!ZC$neqht2ip>+_$^%S^5I'6/#n#pYt`E&tb=:,je@;38Q]Ng=G2-NY)4L_`*R:.2(p8_@"VHGsADGHMCmV:"CgsZ&E
%d_k04IS"1P_G]%u+.&G<gXoCO\oPEqe@pnp7u`M?A`;c3[_-anos>]'0nn_aMemAno<c-=Hs;T;Q<u\<ZfR?l^UDoW4aLDBC\r?@
%IUm_J-QIu.e@UO48t1s6GK#T<dT^pX1[pNh>Viu+H$[mHOlCBH1fBAj;T+TfbcNG:NP`h-@P+o1T:YJRm(Kc9.gI0<p.?Z4/$@YJ
%-Z3#Bbj`_HFZ5*)XF/M4EHO#3Z*kQTHCS?-Ss(7sH\Xq)ooNN7<\Ke5IJ)GR?<3boH!7=MT-%-OoC[*?AYo=;`[U'9g=G4fIP(B8
%Ph+.3PP)?<ZTDqsT5-*_]q6aY21+a`L2#3`YOh:,/q%iU^)]'Qf2M'YFoA&]SmT6^cLC.R2a4Y+aOb=)F3RrA)I;-(MoqMd/ZP@k
%gdY*),r9il54R%0Vq\Ok/Tt-NG01=hCb>X2(6b'Tp"4_iL"!t8DBcQpS($bYR!s(((on`;lPjocr:WVPl70QB'^*Gp7-F&Nj'pL"
%2]f,_?T(.i`Jor&9:gu.Zu(Q4T!'kqU7PtWmE@\6;bl1)q+G%)RP6J.GSE/lBit(VAV8g\Y#O$uSN12`9poM_Cr0_PLRB*!nY<+(
%gs5I/[qhl+ge$MeT"A3d*H4Fl.ruf1o?7&(1>Ck9@HEJELi:mm7ZJS^cg&A2s*e-PKXohF#,Vtjm)5?sZRmg:a7j@j_VOL//K"3i
%D5#3-[)KH,W\(6[nsjrd81]YM)](#6+^/KrO7cLU>$[-V8IG?<.&GrC=XeQ[I?jBr86u'gn!E+c-UEpGPp/Ei,9ORggrVLe>YQhS
%k,R2h@^%l)\5fsJ%pR1J+tb8S]3FGjojn).S\Nh?<6dJFW:?^RQ?nt!Co_Ko!a*1B]tV$\]t`@X9[AF/II/%khA_a2Ai7&MRo!rR
%SCGe8+`WV#8g]nZ>IihdkuR?JG^7K`RG2R*1,!P6-f1oYR7cFO>?@Cs[Qd@pD`c@[qo$eJC2mhJ>d"ib?>gTSG$;p1^Unr6@dWS/
%o?Y&3-`]bLY7G9E!kYRLCM>F?:"8l[c`QBDMq2TS:J\/ApT0[`mVc>MD!Ypm^V$1u/;EnWNESs_^HC+)?@T%kWT&>/].Mp+[.e.F
%&msLu]uS[H:*Y59@]]>tr*V_FZ3n*M9-SPnasT%6F>o>imGgS`IrLTV\Eaimo#5l9H$g3^-(f*+>-dgEQ;)3Im8d/*AT];Ar=mg\
%e^_ZfHMR9JS_i)!W9JAuG+Hocf^4=\k/tu#(falPN`OGFRY0eB_V)cGg5:$oW$dG>AB(VihGmIcLQ0i1q.Mp8Z?rCLXLoW\58Fl%
%n*5IH][GcaO*?TZ[Gu)+npF]Q0m6>:(Q[sISVNQ$';u^IE1U),1nn+HV`V(%DKg8m?.N%P.lWOXB.Ifnk%qLF:RpOLX5)BTHn0TY
%-C67GRZr+\^D5qXcPtV7ac"eSHKudN_Jg<PF.Mu^O&TsV_c?@)bgG9G-hD)ffU(R[;WgqLRrao4C1IpR\LajS.p%jm%!/hs^WT\;
%b/W:<j8Aa5]4!6rB+Ho'o%B@fPu]M"pU$5bEdQQOb\#o[=11ctld`ksr,qr-AFoX@]75*CjgJn_il_gYF&psW].#>.hJZKT=TPD1
%e]O`SgBV;0ma`lTVXC7tkP)TH[E-p)\TV#`?[H"=muu)Lq>9>F:3d-2e^D?Ij`Kr7\%ZQ?1f>j%O)1f/qKTlD?QP+Yq;%s6SO3*#
%YulF!HHN^?T>T![-(*h?l[1MgI!qDGI5Z.hq*iZ,q3R$/6g:EsY?nu`Y-1d-7hJdN/_j@WhH#<)c<I$bf%s^Sm=N&kP^h-Up2=jA
%L]'nImi5mko35:a9`Co6PK@%0q5]*fDW@$dKl!6,/=7eTH;Rj!^DAO2N)a]L4K]O<0d@U)SVO^P:Ma=%pqr.Zl/ME>;lZ,Vq(g:d
%8*,ZqdVHDE2T$:/ZFNuWCc$#ZopTGlKr:3<lK.^$A$pT2MM^T0PURTcB:m`nn#c0.:/,#o(Mbs$9s1n]>C(]ZFfEmZ406hs]5-ak
%p:%Af`XA+sDD"H/j^r7qI;0NUQlU6RNnNRb+b+9.o"3X.Nk(NqA[8LX/TWM&cPV'YDnG#Lm?'SFL&%*EmDkf:XOgJJTY7X5;L9Jf
%l;k@c%M\rL5WgP&rhB6&XKSr/:S%lm2J_uo*@ppA_s=Id*AqW+dq[Y209,eb:=ltNdXo?LhS1gC1O`p")t",^I@o)*)7h^#%:B9>
%-a\1_CZ&c%_m`YA-c0h,+i*;!eLZ%8Y6#JKXoqH%4TZe@`f5#H8T%H+rAQW&s"X!R5@l^jE_;-$7JJ'9lY6@mh]`1A?c$d9,YSEt
%#/+:=qBuYDVpMUI9tA?X!r2HO25Hhqqp63uWbm,D61<!GL3;\\6l*H7rYlO!nDir_hgatirnD/m^Hh=F049ASWJ$WUYDAo&&u+p8
%AumQ"Q^B$*.`29+mW@e^R0)FH_JdJ6oF>_fL0,dE(4(@?6H.j@jON_6$'HFM6sc$C;,0s_R%SD7W8Y0X4>_s)(ZPWi#mh4l`Y_iE
%=Ae!dWXS%oM,@`pWi0g1Wlh":$m;QbN0edCZjSUCjb/^<b&U0V70+>f.4.@##`Uqcj*4UI)J*5!!senME4jr,YWN^7":9C*`uq.W
%0j2@j8Y[\qW?a2F,I1h_BU9TE<g8db`0Wb((a^R[]SqiO*(,#U;.*lb95p/@*X5GG)O))^b8dsK1;3l!d$5k:-HQ=`+=Ubn;SgjR
%UV`r\1s-.rMfD5%G#`-o"@YcQW[^]?!+)a_,H*^@'7kCAAFWB+SDZ4r4=a;R(qe`nP+?c!iEudpOCP#Z$=m6uNrl,:U.FF0=eK#o
%308;Y5Xm4I'4W=B&qQB<R#WI;0WN#r?=gb]TM\`Mfti6#0bPK-gLUs.L*9qU!OVrH#a'Y`JtR-4'@(H)7?oWk",[67Bbk9U5nk&8
%RhQu=:_]geFGID:MTe/&!9QAa_UL;@"qq5-!`B)XdZo)8#08#e5bOk@aBIM@N)^bHT`BgGM9o[=*n<m@74G)`/.o$'@sH"-;^@[-
%&o\,`JP#stAQD7D"DAV!1^"XQ`e[%H!"]7qKA+PS0j\H<Vig1+eKt"-/$rT<WJgu/&M%>o,Rb)1#!+;i#+?fr:]c,c9mqU!l4m5#
%JY8b<A\_Z[>1tV#U1:Vo$gf,?,I9MK*@?S^/EdO:MNSUb7R8.T"&'G=![mJT3uAY31OtT[J\`$<;$Q;cTO*j3X.YRi=itI_A11>e
%_0.LFcn'l\@KK2e7?j&SQmQYP5[m6V*\-XNLLut9M6Ofm<$GBI,ik=JC(OJc0FCRKSIceGA5jEtQ-]LXj7i^m#CSiU^cAY$O2:s0
%VrAI0OTuRGeSSh_XCMHqZ,4QrQieoP=9)A*:h#_I8tasuj>Mn64G!%<3_#hg5eG7_`5YXd=]B;SD&"$8Z"5ft*+UK5Nm45J1T4m+
%#?_)2WCX0ZhurP2K$4;d%.Or;i3';7(c2<77%&6Yabj&1Yo0n\=jDWm!`8rtTWB$ad6`ZpF?u)RKLF@)'NiB&"gB[PiE3"Kk;Zui
%WYiVeeH64*FR]J+Ytnq^:2mXp;5+1'LBh6GS9>0D`:n:7^4HqrQ5G7S&B?;p*lGnt#XX\7W\:#>aRfTF5h[MV4V*ZC%\7&b&&p%1
%lW,%(-_bf]JHs+TJ3Sf["&f67%.STu3(arX_dUAk``Phq3:3)j9K=EdT[PY&9.K-CPc(0Z,)7n(+gPQR.3ZViN<3)\:d1W1ZrKC+
%<:CU[0nD0D"g4mo.c>?`"!Y8e>?$l4!R_0E8uMnp-rL5aAf-aF/&umcn;F[E.M!bs-ZZSR6V5GA=eM7\>Z?8o,#X$Qo"YH!-K:/!
%*!$HV7tsms&1Bo]j\`<-`#HKdTro2WTE)MV*XJ,mH#*UDdZHO]E*Xi*LTsUFB#geo+2Ko2g+gYlJm]Gtg*q7Zn:Q>Xcj0(Hg41N1
%jq=Ia&BT#F#YU=+d;=Vgq>XCf2SGR@3-sM3JGB_"kqV,3dC6J67h7;+\\K%'];BAoM_Mfd`->2eoY2J3%k3>rn%"RG))mQAC,\3O
%e@BrQ8g5^I,"X^Mfe\UX)L.*J/sQFU,/W,a9N:We;mh0Fb`d\`:-AK\jt^TFin[uS&j0%.X6UDG-Ke)Kco(G`a`p5*QdB/(?%$0i
%'fcdZ33Hf%Lo@+b$IKU?pCUFJ:J2Ac`.M*%d]u.\O-ZBOnFfYtdN$f)9@31&E.0^XoZe+=l$2GGVhBf(PjH1=3GOG0&.Vd40P?i_
%Pc=a2,M5UB%8(seam5Z=+?0eJaFP*DI2IAF=kY&'$:ZCHU'W6FB'Hj"&.A@-K;lL*K')'WAI!X?OfL(&<t$@B_U!tgd^_pm=N'jl
%e:;`Vm0!2hUr<ng[\Up&!06PF[uNi+L4QZ"HE9QmaLS=mE&epo$i*Pp<[QL^%?iTpD$0qJKCVM$T\9PohXUkq+>7;ab79aYPT'U]
%X/9@=6.rr:.f7;/(9sNQXGZP=;`.OoY@O[^X,<s@iCRkJ;IrK)1*&Ro@'M/Xk6^0``Jt%>gU:RO#pY2Qm<(1o?eNAma;[-:R=(*u
%g^>qd3,)"gO@CNUfeK"1.'-%7<or$kU<s*"'FVQsi9-##AK4a+k,+i-dDCupT4l^,$:"0QGL;+9N?teO->_K]nknj=Zu::m0#H8_
%.ZK;.$L#3dAZ\*kVTU8PU_PiG<N?"$KB@X<O^F0?>B+pCZ'o)hM)g/^.l].E1hqa',&Jg];";E)KOOU-1:n<<6oBDt%M@:+6CEh5
%ed,';rcf0Y#c>AQ'r)"BR(/lLbJZ,>Yt@GQ>Z?M(F=J_K=21bp9WWn8\koE(&*49Di]e5*/2Qb+P/'MI;1DS:QDEgkf0eo6ApAnW
%dT_TrC:H+N"J1X9#ibCm!/`pN-7V:70GoX;Cg7Fh`*lAlZA<Yes#tG5RD+N;Y_Iq*UP1('R`oH6rZ=[6N.^qaQqPH-"Qe!LSYE9=
%7&8p7*;;c7#2iM%?!uVo'n*k'AYJ2r)m5mG!b-.:ccPb!VU52E5Z,^-7tNt;Cru#*hBgX-G0bilEab!&jC)g7qmcdYV4a5+\1)X%
%-Gh+MZ#]@A3YgY*=!qg'q'"_G--&RkT,n0@%l-U*gToL(!-[W#OSpU@B1uEFV9)i+kLbU6Aufs+P7sg+.B'd+Qn5ih%uq%,Z']C5
%AKB!\`,<O_OP;2SG!KQAM9NYj_/ei6VGTbg?!mh[WQ]'_iIj>DQgW]a9eqYR_IBR62gi#gA^'`:JdErZfLprFggbWbj;<c:3a!^4
%[@Um]jgcopanSjMk_M%-.[Oh=8,9AXM#>$Xp@&!i[t"C,i@bh]*d:iaa.Vt!rh:_Tn:2=S_TZ]_+EcAkM/FQc+:SPYoIj=]&-l%#
%@S)IPL.N.'#MXC#eHr_,`I!6q)($hL=aVABg--"Ng15dU\k0XNOYLEq_5<l%'O4%JLIhNP@R3D6_Bgp>5s_;,r'#]AS;3b@.$>m5
%6cMkL3j^C6>rL?R8!/]Ok@Yig'3p_Z$K$d[U5C9MAtFF`5hX$UP5U5S\h&>d"nn;__=bTm(iQp@a=.sI4lgigTM7$@"m[n]Nm?q0
%'-Z(L$c9U`Yai9Ed%>59X9lGD_`7r6cf5h?m4N_O6u?q]/<!maO\6LeZhm^>"1%178^r<4"A6Jg,(*eVHE'=b';LOs!#+DM]>;'s
%h/jI\#9Kg\li/IID7BVU4*r1$AQ.K_qaJoc)&HpM3l>k%fq7[M4/*e'&_u"Pje"8a4EXV7WJ0R[q#N&5`ZG0IT%57b^k2mc5WRil
%Eb>mm"Q\e:MfQ"a,?KrR:$cDOqp`l8'6W4Q_4<^qRRH50Vjb^!FpqbfGP8Obh/jI\#9H"37tc8Q>L!V'i(Sgd5CO2>JoPUu$/LuT
%5'590'Kp+oJ*.9bm9[rORgP2MoB.KEkDfAic"Rc<@))k_6l(U70OAuKWZ'IWadWJVG0\.l-?eFprm]2;'D8#Xi6EAU#Gq'4Yc!]J
%jVYeOmd+rNmV-O4%m5)J:P)raKGV0-o.i&Wi-u>&_:6bi4g>rQp8;fJS*1(.#]B!#+q>50-&u_LN$0:#@:;+gpi"u1(XWI/.!tqD
%mbkT,M2$p="ss<D^PSpG%?qmcqAkI`N,QP[oL7:`i\adqX2VtcX9G#o?t+@^\f)-k_)W'p+S&.\m0f_r65U7901YG?\M2Q'Hc&_R
%TT+I92I:CNWWTtt9t&2/o0nGg*lA%N@?&le]B842^9U!?_ge5qpal6d**P!-=).J>0utBGT$1?qNB-E:2r@?[JTCs<k.m#Df8Ve"
%qGfq[N\O5s`gm"pT%>=cb(<^W^cPZA$Ze^hepO%4&^rhW"a:AkJp6ADO551B<<pe]gmQV&GRQOn^g2XBbqXqZhO(XaFjjVa?Wlm8
%S9Ek7=C7FOi5u?RF$soBd-E]r$/V)V5BcYS<&_<VE+=nF7du/1K/mu0O^B^gEu'!Ua*kRt]8=8-i0?<C3U4<6RF>Pra=Y=dVnllB
%LVaL:JiDi%O551B<<pe]gmNcpGt9mVi'Nq!NB%Zb0kZ"%VRqYuZJ`2A!+(XY%K,qsl:h`',<,nfBG"\6dC\7Ajba`$e$JP9M"<O^
%4C6r1c\5]X8C%?jaoOu:WKQ(D2id+]JB@W9*LB>S\@LGA?#gl"lO7d.4gkNC46Nng;!o?t>c'`%+rrl77[NcH\HB4DOn-ND>^j9E
%F5lWN2N+1%X:'O:.*3p#A\-e5bP4T%)]=PoWbea0n..Q%HECO@*7K@t.;=m<FKl-.K9HZjPC$ELQoLYu'9eo1jm"i7;-OKi3;=+M
%oI@K=V]-')jN[_OKnsslfI)#F$iG1n@c:j9m:&B.KtE2_`ER4roIS904!5K.DMX"M=o<B^kD\5XD:Ui>f7Y$*@hRfb;$JEAA$D/L
%Qj%p)$\,qO#lc1[YoRpM_De%crd4TC%C`95e0IeFr98GF,22j]3+D5maA>.I<&HANNYbMcerU_QMZ`MJ6-#eZ)7^'lZ-=/&Ja@<?
%;(FB3&EiH]E@5.a,JkPYU5!ZV*&`qq#Q@J'mdZ-?@1X#B!$]:></Y(R6mG4?3hL#^m\K%,[9[YI0E:/6pm;$Ps7r#]lS&;&5Q0\N
%^Acaar7CuI9J2NO6P^BFEXE[EAK$1kr_(f>S;$u2*"aFX74hb0GU0kP+uHHA#=WV997q2nr:Ll:8TgfpE!4lV*,5<5YU[_QGk5EL
%i4!b[$ic&C<+J%/!T>!^nbBWs[';(AKs/&bFN<R_h9TpR4n3g^`o0nToF?bc74_)rB'Sq#Fp^jYJ+*u%e^Db;;t"*aJcd6EM8?Eh
%Qh1?iO``B+rY'85b;%7Zi<$kk0D[E/3KVnrYSNcCN5Cf2MlS*2N(9"e!=:%t>UXiSmG\^=dd3&debEoh7j);nl!5JmMQZ%DH0rOM
%]IDs!K/,2@U8A35,"UWA,G%-?X=cS+F)4HOQD_c5.\nUS\uno94`@-WKZp(C*-u)c<-P)(!nCSd7(tu]"Zb39$[H%KZVZ0]j9?rK
%npfbU.tc7BKCt]O_\EPEk'prJ^FE-_;RJ(RSTrO-!-LgdGN.HBaD^,er(d:j;rl#RKEk%>kkU2(7@4DG.RSp!SCS'QOTV3N?TR/j
%Q'.&@iip@QZljup&&E3;lb_O2pTJ3e9X*<Sl0LI*`1u/I#O57<+S9XCCjii$j'GEQKn;mO<Phb)UP1J_hT#PO-$1)C5^$#t\;p8\
%WsnkZIR/hoLP:Gmq@!3dh*sKD##2NeeY<uAE`5lP:a]bFe75XPHS)8s@DJ/$)[i(FM"l;oh=-LD-A9h5Re\0^d[+dbV(YRAbnkJj
%*`Rg]!tOCGlq`nV'Dr2DLkQbY>)s=EO,t,;N:8):i^Q=g$KLep1'o3N"ue:`bX(aQNdP2n0(T<p0?"'9`rRFqH)>oik#0RACIWb_
%\GDEjD.JO&!8heMa.6VhOHTd]EYF0\)P(3=m`g^K;`eYH?Qumtr#3OQMnop`KH%4/F@lB=&\W",l,#Wa,-d5VN1?O*Qh>>/I!sC-
%ZE<DgB"D+;H0UrXs0R24eE^-;>Yph91^HU6+3O5/+Jqud,YF1+,,Jic"[k[D]Ru"@1C[bi@!77*Z^=CMdKnC#Sh7EDG#fUJ]#;2P
%Z#GGQ*)81n@==*q5%"E"[UI6GrFQ0`Tp^.\V&5:73)g[u,_TOB^mHHK\IE,F!;=d0-I2*'^fL$#d&MZ&Ss)LRbfg&nHCJD0W*)>#
%K-O-1+M/7oNb]CZX]]$4gDiRI>+^CJS7E9C)Sqfi,b'o<3%9N](gLIDb>&pGm10D%\-NB61+!%T>'^5Sr8fE!jkn]Ego!\d&WSOF
%%Y"sN?lgj86G,kgG6F;<%-R4@;EtR,(Sf?lN)0Pjg5:?LE:kJZA4;dC6)B)C0/JI_a2hF6ksi,G(3!bk`a;0W#ud@UO1)KnL9TFN
%bKQ"L*`Wk,S7'qG;M&q,'eE?2KRe>I>uBN;X,R<'.;8oh=C`Qi%I=J?b"Vrn[KLR1K+T(Lc68!W7<TUop6nrKY\8iIGgLP,i^dER
%E3'qt``+Afj]mQI7WY(%:Nkq53?Os[a8*mLA'HSM=P"BV1uIe1;G!7^\5G-j/a6k9QpQ`P"ab,#m+BNhDmB_*'(7H?@=m;W<%@Fg
%"-Z\BL9#SBp+#CBc'Z4$gjd)V,7c'nBdU(>V=ifkcZ^?Xp'?:\hfdOM)&Xu^i8?a^G];i\CQdo"ji$+ICmh%fp&rE^]Q<"@W"/N3
%`Ops'4GGOE4aUtSqboGW8b8&NO#Nnb^E&%QVo5C.;3W]oS(_]cC!(f2-)OLl%GpbTP]Bt5aoMr644''0KLF,^+DKgj-pC?LL:r6#
%KT4YEoh+<'L1DfJH:Kd_c;?Kp4Jkc*FDoG#S@ENF<;t8:Th4nWh$?-W7dJ1-Bt^h1lcp,,7TaaXarrbYqBfk6!f"[R^g2@tSjOGd
%BF5>r:D4V%YJW.i3J<p%e3#@I^(rLOeH7oojDZ'?-gRZ&b(AgSWnZ[k!Wehh&ZJU1_7+m0,h/%c-Z6t+5\@#09QncsH,6TRi&?P-
%$B6dcO!C:ooRlK2mR)9X`D5ng[d$^SL/=493/0LZp%)?DT:#+<8;0'#VY\do(1[C[8_V;H'ouT</\Y'KTQr*W/a))'#Pas[m&2!.
%86[]#V))4gdf)3M>L$8gP4bIiK#cJ^4kV]r-RLghE/np2#/"mLP4T*qDuo!.Ln1pUo1[kWYqpdSXSHR\>;XE;$F50Aq/HgYhM\H?
%:F8)L%bHnMo6Ol_59q2\@'FU85$QkeX;N;$lVQ@Y1ucUnSsltHE81G/`iE1RnW\OelO<tpAXhkC'\#UMcN58DqaL,UppT^U)8\\i
%JSPN6i,Ljq91:\nVV4F`FYOAd&M0"gfY_hR]*WDU%p\mQH:@i'>O*.PbRKm?FflkpT?CgFS:P=P?*tJe*dWqtGhAljPDhn?4Re$)
%1$^=r;();D0+3r8mIc538Y1d%L_FoXIPL>("t;^.&2`hmRDQ)Km=5m[Z'uHaP&t"sAAh#iO,Ti8,R8,-4Rj"?8HH-(@RXjOTj'ji
%#M53"!*9l<OL$5Y'[7sg_$jllh]A3ZolH+$pm"1tG8D8;/1m=:C?)FS&Eh5F8CCb@0u_aR>cD+CMIBb?f"TYM$^(=p_$+N1U?]NS
%"Jr?mJHocEP9X<$H7]\56Wb03m,@ANrPTK%-SFW.s&&C>%ukL[<3R(HVind!T/[lmIOT?T\C9K6H;KB/PB/]M=E%)`ZFP-=%4N>+
%1bn)%I/'/R^V6g@\*3\PBMnGq++hQ-GW/baZWAc($eTBkUa&_`+lQZJi_<[n\G:.'j`%qbSk0D^]Ej,/PD.WIFbGKtZcD+"Ui^uW
%^[%EaV!>d[8If+fh.5?c?FfRkMXE0JIn*16C_Ei$HGtfO/#rFcNhQ^mIc6<sBkSuXU4tS'ii*upie_pCh"(7q?6?!U:9kA"@itr1
%&)?OV?aMJl9hmP`mDlFr;V2(p+1nLhZ4D>e[*oNBPeM!%1q?<j3B.2T44+V+a!5[QC*%IX2N)08_79f!MZc4$`$WJY_afSljG$77
%"ung$6)!6`^J`lPjhNl/2$>gTdnmX-H;cB<'Z8I;\G?]jJZjH'Y*gjh:I>9ROdaG*`g:&s^h#[uG]2!rE/Ygq@1-ol^3;:9n1oKW
%XbgqkE118M<$#SG\=Of&[;f97k9fN1@gjDc"*S5Le=QHnV;>W9ioPBf[]^5O/^`V2gS3Nk,urOe&0AL;N#P98L5:)S,:fZ%kNZY9
%:69iiBLCV7mc/kfNMX-:Z4?M:E;1KY,J0lI`/!5biKk/qU6m,>6LQ<N@7a-&L+\!8\%iB80+8:N?T(.+kK>b%Hni)r3&)Q"1Yqp,
%@luX8n=DYG*jd)PJ:e+)g0uRZWa[G[;%,C:"YsS&O*?*?B=>lFE5>G3T]-is&fQTmBhdFR38MJ@e'^?"n3RkBDKoau8Km+Z]b@3i
%YZsMoeUnjK8.[M/%\.fN.)'XDWQ,S_]1M^nZ=Em&a6(H6f\plu8f6*G.S!POXfHNaW8D]I&%m,uAB0!qe0XA4G_Sfs8p'&r$)6bW
%4%PZQgd(YJ\p5A<%]PsJEhaW-c6>!aK_=)?K&f6bE\RWYmc.1WY<m,k,O<-T$m&aXG%BFY*r+XrfeGt7glR\nI)9r?m[&VD4E-?4
%!u34AiF6r^aX2e@K^'mh]g['/B-XL'$upm1=lc+CdD,PqM)mu'*+V3WY\E-5]T0"]fE2p"1%pcfq`T_Rn'0,%8@8ts""RGY6kT*d
%m;_4;jn/UDCOq;`NrP]s:>e*DP^e7kA-8S+f/Pu1fbF:RX97W&e/$ncAFe:*5o"=:j*_1Hr&,YnfQd/2DJ"gl!uK1MK0e>rA&SjF
%A`Ji,&^VSbYiKca:LlrjAZB$C\V>piWkh2^$/r;[5n5s7N=Eca$R]NL4aJLr%92R!Xe*;i^c=4ap:/C9l&%mSgTqj]Le"=\a+H%H
%GV\L\C>dLI*#eG)+;%mn:-9b:=3Q<]_sWtCk!50i\UlgJ*0,&Tq"mc"c<T;JITW7`!/Y^or"]HY1g2eOHH?-!a4FEPbrr$R%X:pt
%Nt5QsdH7<`#[oWPZO.`PJck?fQ'P27jNtoc34]1K0Q+0^X!it^(_*"IjAPTlIEX6.)Ie`.!tR:MHk"_jh,A[[_f(]hL\*)J#fj<W
%Ws$\mFPb#WU%/:<079b=$t\#)i*E!377dBe"W$;M?*C1T[&$o@Jr>3e>%b'+@Naf>@5D$U5s,ts6\1W$,#@PUZcfW>p<>nP[#kPf
%:XMLe(:R^0$p=9@\3$7S=@LIYD[2;5,;Ho(1ho&sB+p@0gZ`P(Ea9@VC@`?ec"WPHd=h"Jnjj[]lc>>XQJ'2Z?UOA/pMR3*>,5]s
%.%q?RjhR`cjt)Uo)I-.kWrG&P:1(Sph+M9G:]fTK)b`DFkmCePgBg>?fCJXB`lfh-iuZT(1/Lf1@VGF"rYccn5MttH.WD>,L--Em
%:`lMD*UT\;5mu1X!Sm7ilu4&a2,t*U<#mke0^f_i`tOf?o4##)euU_/O!.2Y'\ms-a)5@UliS'<I4(lahu*d,r6*O#(-)?a5Q9d!
%\%ht@TDu[$;l$7urch-,p*rW]XbBat/8EXV6hr5a'!lPF?:4k)/t?aaGi]Ug3@?UT2\(lUWpb5=nC+b%9V4J$L$?Gtr3j`cg:-Vd
%7?%F?eUbaP*59J*ah!nREoF7Xh$C'A7%&]bHG1>$\;[BRH/l"q33eZ;%VIe*S6JL+Pa;D'9R2:)S(%1MX.(,fWX&J6*570nW:"rE
%o&)II(OtNEeNb0d.Ad4db"DV[_C-W:C"NY$pO#(c-tBptRNRk$/&a4Wi''W(a/2;c(0-.7!K_iL#NARA]oFSb]HT)XO'lGpq`W[+
%WLMB]q(Vj#d*(m'X`TL0BfT%oV5RlR]"E:#^__?s8Q?!nLJ^4TK++:Tj/p5hhMO):Oi;,8-8s%aFUV730St#o+/;qLdSc0rX9\\@
%4MD'5ah"H7nA,J55=UmlMtVV+B6`<ZfikmZ*OU7eSTr2m`Gf34QPPMc/1M&gOt<Ph.UM<5%-6<h)*blh_^K0"RlEucm,3rBpIL:>
%S'T"5T9'#siReaHe\F'"RTl&D".(5ZRZ^,2:q'0tSu<r)_/oO]JXj3:gS4Xa+7j2C/14R*c8"P9hmf&5,8G(u81,toMO7@4WD_(>
%$'KmBN@GXu[r,fIl2r!>IDVc/#*VSRfYLjSMflo'Dp!8S17]pNDSsTP$*%tcE36j&>Yo@@hT1#iF4]A[2C1NLS*Dd)mrnkFllPKj
%d*6:PH^OhK,1^NfS<oYSQUmg+MP_WBClMT.54c;odl(%]_nss!bm+92b@u]?H*PiX\J'EV@>%&lm9ehFFcIXiltW)I^k4\hX?1h&
%"8p<V:U;&!_Nc`k(0WWD&O?oG8E[/s(^Kcb#Y\J-e<-p)I`IQoT#TOTCODSCg=n?h$-j^?WD$PGms-u=Ma-X]2J+32H=M>VX4dc*
%m@s8$%V(5"J06X_NN[Si'?^_A(TJ-Z/`_iFRp=5<EnRN'e4;P3Aknk(DV&DrZO?ie]=CZPM.5%hRR/m."tEpc[@q*EiEBRr@#N1:
%\`4`TkL]0.6]bMo[8HtO>6nd=B9E$P4XUh!5DsC2e?ZanWsBW_k]+$^aMI-`GEhL`-Q%s%DcQ08*:HAfgHcPX%kgtQE^Q4e\qO0N
%?MAGK.C4Cuop?hP_tS*jeNL/B/q!Eepfi#\:,qu(JRqP'Zf+Q_qPf3^G]?-!BT6t!PnDq<^k:;M%k)nNc4c]62,LL:`pF'^\+)q^
%O7QkiA5HlTZ6&XJnG!p+,J0lI^kY]spEuSr932Y7G@S#W;*ecDTFX-YNa`TNW5YF]hXdE'gk"4Wp/LeSG=+?M9#l:JFFMua/608W
%MT>YC3IIH`9lqJA#9NdT#K?Y#5:A5Y6t<$&2^*#b?</@rm^iQ`=RGUgUHR;Dp\e(i6%QdThmKtTObu0#2#TH`*q\7]pc9g`lolg.
%I/*:TPU:_Td[f\U["d]hn^U&!\@9k'36`fB@9CQbg/k5<0calO7K_EU92)>E\RI\G4;?ANWknS1:2F'H*qpH(JPVcWs4T62p;"=h
%k%<Ss1I#A>@C*uPQ33\/G4=<j@P&d%Y-l/C]RK**9G;MNBEp^Q1_@4i.HNJ!:t.X=S$fTL)L>+_-VeV!=3Eo4(ejTa"0G!]FiW<'
%]A[Lt!ON=hgH^,<Rt#2M$lq:.X21cWH:(&ai:2cO88+uF.NJa8P0i5fkr>\9On^)EV1W$^XH3&1a0>%i/T4S\QlgmspM_/'4g>5E
%quLQQs3.0[O?>beBuHZOc4\c&m<HuRe`0<i33l2@*)gupVkKYH3Rs7BE5[]UP4dbLDMPCr40j3J%t+0DX.@P%/E'%doS?!^g'u'f
%*KPQ\F2OscHFiglRTcJa0O#21M?gX<S=Q[XV_ecKGp4HIeP#1VmD,%Qn[MX`#<p[hs0\[_r6W+InPeu3a3T)GE=CPck<Z"o%dlD1
%dqSE6(Tl0hMX$SCF5#fmVtNE+L<,$)VbfG3A$(+<dQS[#1%E0gc;#ubqZ*-f=0I'6AWO9+nET1kX82iF*us&*EKC*uoacGU[A89'
%57@S<p)[.+UR+Tea`E5_@H:iq';":5-iWkRnj*=]Ms]"nE8Gdj=gb5TbR_MJHa&OqT%*oNrW)'?J&Wu\k%_gbH^mmojEc=4[1Dcb
%[DSo.n77kL3Mu)+:G49Z):+B8Yg/5gWl#<YDg78mdG4>>@)BYZc,9N-j)>1mJNOkS`kqk+^YrMjgi2N[7+(SiJBm(i^!_g?RdC6c
%jj9]G+CNYuj,F<O0rV-ns4DlS`T(sAGRf+9!rm%/BDA0G`T*lU'p"imUTrM4Ia*F=mi9"7qLrO"HdtX(oo/Kga5]h]i(`G-`\1>D
%(9+&M=!<!)J6.=MSe:/GlcqldF<$M6ig5s@JrW2OC?L+Alel>U4Isnrg[e4CFBGQ??dm_48nXg#jjd,(oI+aLecKSjOF,=^U'!=`
%iMeG0ieQIb%aqWD%o0%0f^Q2`0ca4Vk""A!4^:L":[EW?It6DG5NDF^5_Z=f?4>m7CmdEiq#MPLG5,#JNp9Lfa$cKL)6(p<bO4E/
%m_>Y%mf<:t4MJi$aR5HZE8f-HGZ[aRj;4.>]#j(ONic6_lU"sXmW[Lg3mO;kgsV5JhYV0ra$E!EjCtg$O5%''E%\.3o5!OYI8Cp6
%I8Cupn4+H4pG9iUJVLD=j5*RVfmSSGZ@.7PWZGMog6(4'hbVcE'm*64rH(X>HdUu[T4C*0YhS,P^lIcQg&iGroLG`_BRY<!4,86h
%'5H?qS#9MiplR*D?l]se*_430\u?4?F8$bDE(<>t*pk4?4?nQmDkeCR4m#8mn3(#HF\h@T$_MoJNh:;]Ke:5ib=CKoTNlmNq:Ks?
%kbm]cgX?D\\bj^Pm\:tR_#rE_>bT"</DtK1p#*Z(LT^_?Z?p<sI/(#hQ,i_m%*#!sO-Zm0;psN8:F"rd%M(??V-C)Pb-E3sl2X]F
%0t5iZbi)i#DgSL_d2`GG'^ZK+O9@2s1sn5=+!WE`AF1eWW#hTNK#dV1*SET^#;5odO\b^-W+1eAEABTuB#Gh;_O5^+g3ilBgU!L(
%_<V9"o5N7B=IUX"^@f(`dm3#;R[n6ga%4/eeMoG.HLU"'_q/iJffcMD-N%#-NB8Md0s"q.^^RlAqq4k'/6uu,mrpbW41Z4JOYIUR
%XsaZ?k)LE48WLj$C5krHku]Lh'8qL.Cdh_$E`-:*O*^[P#MQ]%=ut!J#Ek!T0Z"(O)J_XN?UGLIf(eTKO)0D?Gu%u1P7r#cNlYgn
%qmcgifY63eM3g?\8iImuW3juZEBY!"7ORio&K`5u9nV\mccbNNa=K61WWODG%r,tjl?"\6m#S?Aas<HRosQ3][%(MR2O/r>o2uS7
%Z]/g8*l#F"jOA2tVDS3GI+k-@C*.t!I5nTobDY&jfd5!]1%%=\LCS\]#Z#X0*B/^?n#X_Mp[(_LEQZLX?5bnQX.;t-CRk\_r3?&U
%LXpI%0j?]N'UgVo&+F!#`g;GLA@LRg;tZ#\-cWZWG7'>YB+@&6mI@#t*8.H=*r,6f=$/&LCXmm*'NDlq@a"28i8MG^(u7c'i3@MJ
%?RNgT?+\u'_&jAgQtY#*pFY[?CKXJ(eUr;V%c?;hAG=;S\aW+b#jbnY%LT4ZCS<"t:biq&N-!ksTV&1#pH`e0fA?68Flu0\l$.-0
%cYl\V>(,q$WWQ%'4+*%>Okhg?jhec`A$WEZc?$:T?JKGPfeIC%3UgFHa4H>pAG=r)@lOt@c?aIPn,+"meq8D[%c7A3AG=Rpq!c<N
%e!rp>B>(ea[I[n`f(5Q,Wl+S.G%C@@pJ^`tAS8]dO*?&3,O<./h%!coG%C?s*r,6f5:eEa_-^eZ2M]&k*3d'!*;I0T\=A_)'lj$s
%r\EN^<W$FJV7&>j.gO)oPQT`Q`oI%RF2RZoiI>_#6i>%'A]@Na?Y9532\F*%rGs?r/i+RCQPPoYF5f8ik.&XjE4sK*7%/NgEJZNm
%A]?%EplAK#c+_E36lLQCEVVB1A`gekA]EiZXNSi*meg!jAmANWTmBtdbEgI92.d5:LNt?0iMdq^c)"&1!5.0.#qt`,SJpP0HI*2=
%iHr(pm%2f2'E6WHRR?PRKU49\?#%S!is0gJHfIabGd9u-*)h!+a5stDO&p@\UUm^ofc+7mFYrj**glG85j@W'"g<#Q.Yh(d#OI]#
%JPT"Eo1>7fE2b3kkI=2#YB*rLMkdN)?i2Q;d-2O2H_#5q<=/G->O'(dbj-65&[-92S/mU6*;=4R\5\L/&(Rt,BQ!UfPrVjiM4;Z@
%3AaKhll;Hmjm3s*p[QP&E@PVacl=NJjiX)3a2(F-X;%,*DdGBbT3C-2FD3tFgHd<7ERu9X&,V"?n[6%<>4gouS:a_S`)+q],RJ;C
%<K<9]3l[qb'Msm+f0Za7EhGWg%R3_:M;-m1^U?ph)qf4ogdI0dj<j8MD"bB242?9/*:Ajrb<%W:JHqcDfr3_fdLFg'"<u"o5>MN)
%?fErcr@!ZDXukb=EEJOY3_BC=c+8rK172Mfl$ep.HlaVbeI($Se+Bk+s4jMd-TiC"S'-Ri\5/Vtp<Wh$I=C2)ddgq8:$0LS%60[c
%j$)>!1QJOASPA)5A\`SsbCFs!_]P@\Eu8jK+_DZS/p1cq6jMqRlL8A"H*YU?4/V9O30t3:52N7pNiW=YFut'\fTFugHf2f6hM,Ni
%\5\2Aen1@FO/Y59r=3brF5j&-R/=.KQ7<B\`g<4EE7e7SjKJZiLYj[`-ffF^a@JkO_LhZO4Ld8pJNM+ta/KFDO%l0bN6<ZA@iA,4
%*)k]^*-:hWS`!I0#OW97dt=gf7m(`)F/^s]3Yfs]VrD,3N4jLB\qFq`Ek6T,"O:BNBX^e/1r#p=+_GrPX`TriPgNV0<&uCE8r$g+
%Icb^X4mgEWX4$h:!]h(hon&Y1)9%')B!WL;=ui=RkWA<lWYbUK8"&h/4AO7@n"=m@H$OuRXho>2mW_*mT(b=,'%S7Mc_!Q8nj1W^
%bs50]2`2*VP;"IJZ%BWd;;&"JT"jDR)qnAgi,DHQrJn(,qk%(4E^MXAK\=ea^+aiM"W_Mk[@`Y"(p1KroqgiPX^SSpV$Rr5:]sHJ
%+rBOqT3u:p9,t>QB:3#b7OqOt0VK18a,i'7"T]%F)N3[4W2CjV1kH%RToNa$g9"uHk?`hp;"(&od''KbRI+FYo'qs='RtiNl/s!,
%+T[8lQ)i&rl2lj*%c7K]*7:QoG`_N0`rkJV]8og\[VJg4:"Fl:%$Q;W^B,l^NAjWK?$-LC4S^]_O;.D=h8aDJS*U5!^:>S;kdA<g
%ds"!$Hm&1b^5Ls9)Y9q#6lF?RDL=5/Rk:OC'B8hm$p89Pf9,a!kEEfeK]#@F433;1RtEJ7O(!XO<dVXMj#seEp43b3N\,B&^DoI2
%6>)DMZEG`bpp>*L<RI&=LNBO1]^Mp"Z.gatX97W&me\JD3[l-I$@V3IH(uJ!"E41[II*i>aZf4QUO@:Sal/=G.$nm(;h[Y>De#<q
%I:)B&h,`3>*I.(qiFoLC;EFPP7[K6Z>H8(epQbW#:Ml;Di5>0#=sC(V,j=$3e%$4Th!;JNg_4!DE5Gp_!jd=:6.DkRnZHg]g=`.c
%q>20K7:t`6rS#W8ki^"q4;I:9D[P+DfXfN0RKm\C2hel@np\W;4&>2*-A1*p'KXe3_;L$A_d^ligpM!]Mj=3>\SKrRHNdSlhVc".
%5rqKa?/#G,H*Y;o/O7dL>MB4l@Z*0^Mp?7>(4XrE$bu-s[W-fPRNH<LZunWDa1G;=[7U!03M[k!9o??,C:XT*Un[a2$T^f/JTD5Y
%WE:DA"-.Oq73jPLeFP\T$/VJPqq+V[PC;B,#?(*QPJ_HJnmi%Ee3';mA<1_^2lZ")hLa%8Fl:(`LSMZnHIX'I@mNK#G2nd;2lZ"*
%hG`0>+8G=U;NVCq;J7^]&`3+VlAJb,nL^^eI`Sl[k14Pq\j<*Cl!6!;2#XBO753_eW>:6c3Vq!"%e$Ysn0Su"Hl%a2L6H?Kf0!_6
%]*lV=Q+LGZo6*@-3OFQ"Z(#DhR(Qk[0C:A0=Z%!Q6>r$,iEk/>k4]=KX`F)S(Q?H6B%^fM(]gMbqB6[VdU59C,>u'^Qm:I>ET-(M
%6pmMe#An[6//Xl/]6WJL>a1-k6G38YM_/LbB&[g](3l%$mc,na**EO#&8kqh3QhT.'Fq.0kVk?U4bbZ,RojbS]:!NAY?^if.NV9(
%E"nE=?]LI-/]fmF\o&a_i(YW2O11X#A0'm%jPbWASe%5;3uItJgH&'u-56?uDSh=u.i3Y',bfTh6@Y,e88J`r#?&'i`#HF$eAAmU
%CU+[Q%.ONKGS4AR1C\fWR+#=d2OStYIcpNJEa3\2Ds,a]4@S7]D^*TVf[A"BRKm\C2j(VInp\X2]`$/.%_88NG)F5%aW%,IdU&G"
%XbcqAV?G^AET(6NYmTE08PLlLo[1g*WJH^eI8"OG<!:8hk$BM=PjNO9c6-g\k8NeeET-(e7!'g36//%S91:[;D=OWMZ.K.>_me)T
%dfZ$so[<qGi(Yc6O12'/A0!YME0lIb/Oe+PS3c;>>VT!o`rb^MEI[=Ci$S?:LCXOJaX;k!CC-7PBmN<CW&QsYGa"*Sj"9X<=U-!q
%Eh[QH^!ob3,'FN8I^B:8-):?^$c,:)JIB6PRct\CC@d@!VAJn#$2*(R7IH`>[&k^!hc&i>[sL#-#L3A*[T"&KS^l;2<(0m3n[r`)
%$/W+Tqq0//PC6iU7pG7dP/AGhe>qoD<%3'CHlM)KmosOVlup]%lbJ-K%SpbFdnd^eEb/03\(&?643Du_kI#"f0]CW,'`,Hdhs%kM
%d%3`qn?Jb8CoFbrQ<N3`:UuPB51sHe36-!q<:"fKo!t_<H=*;W;Wtigk(dhPS)=AR52&a:LE&KG^*$C#X:O#0QW&]8m(Sn=Vf$it
%RLVI4j)FpLH<qRkoS^oOG3UH"hbEP!4g.TRJI-ZbIJ!0F_?&LR_T]a@;9`DP,Mo%\713/CoLjg$n2hf+K"f;N%?FrQ"moMOrQ'K3
%]^1jG`ocaUh_,fIV%+H_dk#1]/,#5-rJC(5h,sE\HW$?slhp_4_JdTNLDTqL]YP+<0GM&L<fK\m)Y]org\`d"a!Wnn[![<QK>'0%
%[qK[C@#opb?Lmj"K4O610j.<G(oHZU6Zq:t\Lslm%![q5q"<LU7ZJBjrD_NB$V(2O!PEX9@d`>???&h[/JO6Z/0R_322una'Dc1:
%A)P-74cO;U??l:/O_&q>*4fQIEmfrl5Z1':/*6!bGMB4d;D7/ZJl'eDqtY:S['>$:$4F>R]\i6:EW:*<7=K%W.ch.o(LQt(E;XDu
%_sfA/Ef8R1W"H9=177Vd@:Ct!)=OS*&&A>=^iL"QB7%[/R-Z6T`J:"Rd40nr#Y?9)k]_X!Wk,>gZ9c$XE+9RCA*_:i8,)e,4,,Y"
%613.TV-o46,@KTj'``;!Ar"P&GrrlX:3?;MVi5[b2s,`]%UQt):NM63h!b-%RNLkpG#)idI@^BCipc#i_cPpB$(2eYo*f[01afrk
%[nFk(U)Q02[,DbmnhaEqbl,8:V>7C-Dtg=keHZjP$cL"U\O4l@"Z%0(Ki%$S5!naqG@3ARL#)Hbs)r:?7<3=5q:iAaeBq;t(MW=^
%;9D%fP=ZG"n"TdJT'%Hs3qn\YdD;<3UK:>'UE@)R0sFibE3dNggFdO(Y-$Z=md5$KBZ%OCrH18IOdL3TXrYQUM;<B<qf^;/;gi&i
%pNP!sWc@M84o'N5JlIb-5+q$3Oo'=hUJ5i?5"t"p'mB.)=+JHl^(4iOZ0lQ)Uc-WPq1#W4:B!5#`LQj$>1"cX5Te,=4)'2VGL@hL
%Z%G=]?L]@<F%)rgK3T,6O4AZjB=4^&Yi&RkZm1IiE?@_k7aMTO(=S;k3881<F$/Z]=>tUrYmu0$Q2Jt1#a?F#O((*okQkZYMocRa
%[[$_M&%XIG%:<NpO7.q;TA(o;A+O[kB8E++G5.).3V2TnA3'O'8$\Z0[3A`Yjs!q54sO4U5222NB:g3,/8(RqTe'iKm82B=)eUSb
%Bo@FRTD9Uh6W_4JM3o<Qg8F=o@l_ru^R[.*&`&f^co?,9Rlne-QZ>=Z@p"2YqqF93:%W#j*sfc:3=]Ah-7</D:s*k""gFNPEo/JM
%kD4$"F2st1biD?uJ<]5W$XWY&\o6D0(Y)Rkr/)a^Jla#fnIm9eDYOi=4#GuNfFHm\TF5'H\-lU`p^AMj5;r[?a4OYdb"8'IHK@PY
%,I3#jq`,1ukgb6rkgb6fM>NoL/Fm:li@?;G:-Lbp#I'^L49AV[(@D0gPA`O5jZt!(3q+$&El)c#YadC0!a&27*YBqN%!Mj?fT7n@
%os@A!K]2nu<6#R1qnA1)=5gN()u55lS[EFO#6BjLb7-jDXBP$2)0elXhD]Hc'kR2:T*rMGEgLHXkL^3UD<-E.2R4R5pRqCD&),ZR
%)gT]irJn(<qk%(DnmaKF[ZO?L]8_d=>IaOQ7YX]!p[PPO-[tDVQn?M7jM39!1Xb4nh;e.=1tj_`oXY$u+`lP^GVr_qH.g7P^McXW
%dWtr)90^qk7l\T+/%jtcjbe\-`Si%R:'8*]Vl"VO2s0-c%UO-,:NAn>gopTgR31YlG0ah8I@^9@>5_ul_cK[Xl,k%Go'C@i18fc\
%[nBjcU)Q02[,DbKnhb"KbPf']PPL@/0DC\habT]lMH7d@[s23;72V%7`mq+@4Q%f\$pK=]I#0`:0Z:bIGS,U\pKGFl+@M>o2.H9?
%+o[diRGnI[^mcHOpe;;\,#3m[TC\_8m4J\->jd2_c.g@V`?-H3%D,8!cX@':Yq^4j^Bm1or^QM==G>\M]j(XO:"VWp'Uik./d1_D
%Z),PN'7uce$l/:JJp]#(Hb`>],#B.aD`/7m\"OY9.'rEQ2nqPrk&,0"GWeEPR1850[Yg+`--]:g25_'%&FkZro(YmRN@Yb_aid#n
%?'d4n'?bLD3\bmUeQA\,ij*56E5<3&h?DmBKj.EP"c;0u;\UZa[<t^g.+=:aMOqdshf#i'cc(+aE\72E$;3XllV#TbfFe';;IC:d
%0kjfhZ<^Ga/-2%*R#Ar0'=Ln82DgO$QTh^96P^XPh,lTbBT8f9>GIl$7M_gRCW6.W*:Pi_^HF:2h9&c(OmSX%/<e-k/*us,rQ!55
%rrZS4#qO^oq?ZZ/N*s,"GeY<0W1fu/bOpV8nlP.-\d6ZCs,6olXXkeZ;G`r#49j<PF0ZW,A`dIL6hM*cPi?+'V,%e8BqRjK94%mX
%m\@kRJWRf'/H:NPiI'i>='iDqdbE7>rUMJO\;"5hY()rX5IAi.8lFOd-ZfJ%^$%qPXWg/u+%T#6k!g.6Lf$E"TR$_;$8!Is3$?Q6
%DldUt7luaAWO7_Jg_N<3Ao8OR4Do8>VonbK(kl)^eI&XqNpcd+$2Zt'WW2#6'BL5qG]_'-M1c#`)BPS[/'4Ke(Um3JBHG.U'6:78
%H&/R:Af)l-_5P8)`#a&:?[Al?H\l;tMXhH?aG*:e.$nNNYs>1A`4aZ_>,`f6,!,j=<fW=FRP'j\Ej15'^KBHn3iHn)L\j$7>FjP3
%04o3Uc`@lNbO_*NqG`K0\%hj%+$-(t(%uE@0dJL`h2-Wi_EstPdU^mnWYH)FlMD57/U^*s;DNLk_d&WY(*cl.i)fKA]Vii%N$me_
%%.HUb7K>'i>1ZKeKW52Yr2X+(ekN<d'25*A>:i_JOg$Cr5fAUB88_]/mEft&?gRO,?j3Kr7F6h,6;!>"]'"`,EZ`kn+.0qt)KGM`
%\/cfi=hl)<W/NGj%i>O;`SEepI^#V@5YR*iB`ot6[qKG+ralh+]2_YV'`li"=Ffpm6/S#g^NV=@3=#^W]9RPrK#=Q0W;Va+'KK4H
%SLP@c8/D^N&NB]fUVOann]P&!r;G=2eQCut+:MV&o\f^Db![(CW81nTW7Z&-T_q8U`SZeG6H^O.^"G3BiH6!$/DCB7&N,(EedrOK
%[]4UM(o[XBT2mBj3nhHTOH8$7?dMtL#:?>n(g,$Ya@V=@&&UK@?,G><%27KlV#'f+Kl;IVft!1JLG[lr)?uK98d8<qD88@?h@@CX
%*HEX6FHqPo?n<T@B=;8P?#28sQt5Ef_A*`</:ZPo-\fGn<RKrg$7L]Z-Ps.'k>+k/kfPWK394rPU':1#'8Z],h2W1a;(?WT$qG8$
%j'klmJ/]7Uf0%@]$H1FL%t'Yanc2u&]Ime`A0d]Wa12O..15'eI0/*T0<uRP(^tF.Wcg-``'diuE_*F7EJ!`@#lj"N"::OX;Ag_O
%C+<CD$8R2t-SbnXIJk"r"G\&Y0%YWlDK[4cZoEIFM`'$ILG<C!UYJr$Vt@JMJ'=T&F1_ot+X@8WXB(Dg)//f,OJ6m&0i5ZWRQCdt
%+G-/0Pg6m7(s8C2k1WkX_(o-4'l:'Wn;EL\"\"S8&7j*d2'%B<=\JC+T89]kp?*i!r'iAn2JbV!`VtiP\ho^+&Xi:1dNqHY8hA"$
%ZtkPVh%5IcM^p10*MS.LI2B*q^Y,u_(>ONfP/F'F!t1?Rr_sE>@p\?uCSr0V?"<`5V`e8g`NZU$_Q$4<9I*Y8@mQKLYr6)akTP^d
%,a6nh0[M'5)Fu\*o9;1DLg8*M,.+;:HC=GZmXpj0WNs!D3I,V]/W6bH*[1?N@)\_Pa<_\de9H"-:e&K/X5]oZg/Ru0dO:FA*qbYO
%E)(Su`>bB;rmJ3p,EbrZ)S0sQS+fO2H.@tcO#=<iK4p)cr;S:F>k"t/QjL6=F+u>NL_+f!k32[uMa#mO:0ilD-#eEbNlGD9.[O*c
%*#uADs6tidC0k$&7Pf#L=1(ZnVH_SO_Hpm3M&L/8p*%BuF^_.L`EM8mWVA!3?aFY3[#1g]a/AbYHhF.*MP6h\)3`8M+R:;8C9&PT
%#2N>[P:$)m=%Z>Inqg],6q:L*`J,kTU:E8ALaZ:g;:\i#TQp]5H7sm-83>YC:QhuLGZ]"g97n7mKN^Q=@4_]>i;t3!Lg[eBIYC.0
%_Lio\Vr<'u3*Z^reFF,k&!#1CD-0PUd#'d`MD<%\JrECBQuLBhN8NlQ-n)c]mh8APB\/)r`*0%R>7^)DJbM$5IZ.6U"e1h?"'CGk
%E5[!a_\6VsO_iR'`!1a?9%uP)F[n9d&`T+n0rC;71>Nu\G,p'3m5E6B!_ITGQ8K'A(H[dt7=p\Sa@,f(*Z=OXjisPZqD4(Q`7iZT
%2&DJnHhHnO2p)aUd=Nk50p>0ROq[3J8qX@ArE2sunJr9+4EPXYkn<-1_J;VBVA=6goH;uiQ(Fb..Sib"j*M35TF)?^(-b*;l)*TN
%KpA9bAq>P?@4*&ERap[Z7>nV=+CtI3c@f!H%3,OnRoV?X>llMPEF_'e9uN"[7&rKH^nU;@ORNE3C]B1UP[/5(5Crj0JjJ$ce82uH
%`F@sDD]a\(rZ^-rkWl90%mCWVM%(fXPjtqfIT?<&,g$(j<>,!G,[uf<4N&*%aiJ<qV^8^i6Q*)Es/%+?LH:D$:*p5KWY6]Mb?Uf[
%#66A4_uk;s>J4HEf[PA&S68IeU2k!W1'kjah`me6CPr)"EFRX7,+_;#SF=O@K-a'9E'Ud.UrF'S6)rpDRr]qnfN*/@+2l+Dk)L)7
%MsdN=iNJ7Ipp;YjodE''7Efo1'RXZJGn5K8$K3`[07^Hc+m?D^b^]NZ]=M3qe8Ldf)p!]19"9h01nSt*q/pX4T->A+s#<t%MDjaF
%akr24AscX6!H(L6O$,RcGt,*IQj;h;""0j9<De'_+)TMm:H438d6(u,:5GPi(n95tZPYYu5jPW9<P#Q?Gg7Z9Gr2:bZ#Z-,dL^Nt
%lb(pS?B)9r$@>W/cRZ'q\sD8E2\r?Qd*mCd#)+FaVi9aT]s7NeYdbQ@.O'=fXT_q@g'Tk3,_]m>nm`r6FlcRl5>oKr"p<E:#dX$d
%AK%=2O3h$2,%?M!SS)81="0nSK<d-hA1^48.l;?a$!-LcMfMKi6]3^##D-nc2H8/O")K,D#bCm$Bj&Y,LPeh,.-tQl3g+0(GQ`N$
%BU&3PL[M=TlQ3]s:#GiJ-_kHM>i9ja=0euSAg-Gm9,AXDr:7[5c-uFo*hNtunOR*PFSOeXom@WIS=:RP7"Ms3mbRVe\EEeYc?;TE
%qj(pfTX9+toOB03U#UH-$><b@cpgs'%*=bCWZmg4.d/gfB9:XoiQ\Fmr8p#5H;.2fd-M3nL`=^4X6=pnkMBh^+4d+G4Y1a#qB.+g
%XP.TLSJA6hK\@SOq$]:]D)&G"PEulfic!Aj-rd`2;s(mN^J^R7<(nDR(`i^B\\-%!N9ZYX#mMB)kD`kJeVc;gj"g,L[*SG\rf`<u
%WT/cF6"I2O%MGhG@Q<5M^)P+JQJ<V<@;^-(["'bU^^Dm5<+@cIas"1^)'2:^"Us>+k34:E6sbcpAp2OT&)+(;B61#fSe0,+`gTcF
%>W,EW'<dfu)t7nl#6WH%Z(Y@<Pmin8>[I:6l&g_DAL"9Z-Z,$(h:#Qo2X=hB'.mOM'14&u0dI0U[A!8()AqIZGsR,\f@;7?U)eeC
%C``@/STLILN&bU!eBE>][9/F_\5)QuOd&f%X68YSS\KX=Ielf&iSR>Pk=pV@n,7cJ,Vh0pAs7F90=WM.Md;":Oa<W5'[0a_X_iTd
%>0M/8V>`sfmlohK$9b,3+UTFn8`01JSn:oo,($`YUA@=HJnU:>=#.Eb90jN8?(n`Q]0mjm04m/?:hNY?$Or#.=,^T7"Q?!dWQ;+g
%*k7Q1YHnEc<GYuso=eO9PnqmUBpF0.N!LtP^%qt.,/O/a/"?*"[^"WDpl!LaE3a""1&"!V9gLlAiqjN2`m@1("_e$X>:at^rRtOV
%Cc)fLs-*@`BQp,d&fj61PVieuiuU%\##X*U@XB4lUoTDt:eHC"Jg"iS#qSDF3c)WrMWU%omQ`2L_2hY*IGX^/KN/*W;;:I<A/Aq!
%ZK58nDI^>$\P+@pInJ2M'&FW7fBr4O12<\:=?&kM2*lPrVA$f+H2&GB"<>%nNEJh.pSD_Z#29g>HtqHboau[bhIi_fIDR"V5u4mI
%,*U]^WJ''JihcXa$[HEP2-Pn&G9bF(TAf8o>N[<6eWmEE9RB]`Q&mX7/["m<Mn8'hH7M:JK15+hKa-ANogXmge\_*saf0p7LuWQM
%OXY<RF>5$"Y589coT=t0pk->K;;Nd7MG;PB@;nj"@*n(B"8Ne2a.",u\J&$8p,%^e`u1C`YZ*%MA>`NnB1,Nu8:2/%aA_E9QNta*
%Y';!ADD\j)=/=(6V[r";]*(M2gbH1-4#[?:#HeDfaZS3*YauS4M.,)3p:.`W-F309kIR6tO]8#MBe=P:CkK]"SgD9C-B,JqO@Srl
%oV\]`*0C5dl*JiJ?bk$`Vr]@XdILVmH",c<h?`C8%Dc9(AY7!>m1Ycp#pV_<?U(i4E[ni&-OYds`j5p(F3/lT\e&0jaHfhU+=uMc
%)/LI"LCF[NJe?!WP_L)nRLk+`2fC&[g/b80%JQJ?Eq,L\D6a^j6s4omR3-nHF#3YV1R#4Wp>ZRmRufk9$%Bg^7:RMN%n6[/V0<4a
%T-(R_2oQFsLYURAgP`(V/!+%.""usYN;T^YA:?]rpc3q\X\3+E2pZ9T'biVnfnl.=617\OJV9]m9PBQ"dQT(9Y:EM[6PL+q^sM<&
%d@%dMLqKY&,)2H<Pnt@eFh4n#fqAaEIMVi\BjWOqlM6UirNp6a%9#cs[Ym]cJS<139W!E5-OF+d&f!gW6Y+gV]h_'[l/Weh@lkMR
%/<cVaPAiUhWsR@W)?YsSX$0j9)Vt:TG/$+kYs9b[ELWY4Z'2LgRb+!9pS)os$'sg$F=Pa%)-LR&7?h+LA^NNuZDY5h"eiFIk]$rC
%r;\4=Cp,;n>JY;nYallB*0t=u#WPA>Jt,UkGmHal#6"1&bWdRGABBqWap#BGLfa2]$\%f,gs#!7dh'lh$-T1ToN@gj:W91#YFI:]
%Y0`76*[15f_?bUA3>Zje*Vub>6&[b>K0'^pL!MF!I(olslc,_B(O.%di<VuB`H>+hd#d0SXs<\T(&Ku,R8@^$Alt[Gb/+s3'Hc9+
%Cgs[=;^AOl3d#uE,/Tn1`0%4;=-9(h%?b\AQp@UJ]qs-dk=8,LAO86b]KfccU%pp(G<"7U%ugLg^"N4WM\cPY>&>)*EK8aa$F$%a
%\J/L2%m@.ndQ)`lFWscmP1D:/(]pao"+ITL/_Y%9if+9CQ6670[_(](bJ$p%HAQ&9@X^20YiOo"`tr28ld$GK\N%]s,h;`;C\fp(
%hR#*?k:j%qnUYmJPa>[VT7UfI8Ebm:AfZ8"L)gL:2=c#]fJf-O)Ai+KB-qDr"Za`(;6MdR,O[B2;;iqKaq9Ga$Y)u<-lVoG"/DEc
%pb=g!(J:,(?#%a?$@=jh4B[P6-2K1pU4_m-$^l?Ycs9;d<[']#(K/YT>%e(@T<$G8"76I"r$g@,s5Gn4`?rfK+:,0]Og6?tlr3_G
%:+1Gb"5]ks%2T_Sad`6bJM=d=+J5E/\i26`^d5!K06Ul@TlgDK'&\F17Le4lOTOB<i.A&J5bSm((nn'4L#;H@;1:M8fT516+fGja
%krE/;!Au=A/_TC-K\D-m*>mLTPbn;DO's#,P2HO2&2eO:e5_("^.bgV5nZo43DHcZ\XsH'`6/dB.7-Q91U!0XAK]kc;g)HfNP_fY
%!\.lc>jN'tOp$])Ye`5(DqZ7hP:LJjh$`2/K(,e>S;W_PWdtC5S4Dr?V[?9e'R^i'[e?D,\==@O*;WJU6Ml#;UM&CV/iYDe$iagc
%3bde+d*J;o+>SML=k@W66rC#K7O>)hU4G2c94(G!r<:9-m1>L=Lh'hfMRs:e[8]ZINt@/R*Ea"3>KSKe%!*rZQ'u*bbVe<S(ADXF
%$^HK[guUj4gq/E2;QIA1$dOpo%kO.rd?!Fb;$T"=XTpnIZP`nOdco3@?c3SMQ75k]0i'T07#&g4/]I3\3n%4,OmV\dn;q73jdBD4
%6ARZ0e0WKF?0Gh4_gZfK5B>q[DkX3(LhA.*;uUUR]BUV,24=%m/0JP72QI]mf`I4:%OKi],5d2Ndg=:&e\FHr$8s]s_<&hq$X&m;
%X@8AJ@[)UC7)TS9U%:7R\SZfNp-;`josjio+Q*'/_lG,>2l)aGRa4ec?YY6s\Hb;q(s6;9#-Hkq4"IAcaXESnZrRPa+NjD&_Z#gm
%<a6"41H/'r=#-:tC/_>R#o"5uU<'lK0Z]>j81cH-/sh>WC6&W@krXoW7W;pP8T]1tn78esZ^Y!=#uLQ9^4[c;l9#g[_fX?jEC`#o
%61M$c%HMJ)"!-M-'q;5c!eN9M\HG,7N]tCsjnb(c0:[8RglgBFp!cF0.?8(iMd!BMm5O_)JjnhU5hT;SRX,mq0;!2?jIud"2nd5D
%XR^%8oYo=q,QdtQ76@6b,3JX*'d:ip6t]cC1_gIV+9U1!=*PF=eeP]CLFjEL;3<EMrAVfL]H,cp;%?!)J,*K*5CC/]?#OC+1U7O%
%"FAB&aQ'CgFb2;:cm?6L,#Q&03MTQ+HsZs?i2`uOOTq9I/VP%I']O&bZ'"K-*e3Z8eh84cY3G7(R"Y15KQp@676I$%MT?%FVACmF
%"R"Sh$JfJ\32mp=N:2192;,tn$O+(Z3N9a4<P3'`ScWP8bFCI=TVTdNeItSXfZtjMct3$VI*L82!S.XD47^S>70\D2$7:el,0Ln>
%KNc1=."!_5F[],k(!$-R+#)dSZa+p;adfuW<BpnuH*;bQPo+c7@_O<_b;[l2F.!d8d58*b=4IQ)%F)3.SJ2s&)JZU7@*9iJ>[Pt?
%-*SAlXBI+<Rk2:m'.rkM39[P1H@doZ6dToZq'Fl7W*#.XeC;fug=7Z2$K!CJp)ItMYS-b"?QU?K*]a;\plrsbY4468]#teZIdJqO
%%pU)p(-.,320\=uZfUacSj2^l3?.E)NuCDbs&A9MGptCkBueF=T\o%jS9T'Ihg#WI*mXg>$H4F]>?j@J%c%q(di?fAVQ79B1S/S_
%=#77[o%`EJ-Wi_VIY\=69qc#,o`2.,#!f4j9Rig9&pASi`I*f6>9MICi+5LbMd!j[3Qa1)Z3il;]kB3Oi9^>RV,doq$gD>(:UnM:
%NK?<+KANmAS7OLo^#5@OP?EDapG?`4oR-Z&"8]$>IQT':mKBT1Of0BrLnmGr6F4MOZu*-[6r)0&6/deD?u9=u*Q+N`0(V-KD+3oI
%p2MJAU7T/RfK1/:d;Ko'VEhL;RrN?RR`*W.K<FsOK_K[bLXqRBA,@"t]i8"L_iIJ7KR;1XM@r3!)fKH["6pkFR4;p2N31@TZ&=:;
%$dP0Ye<lf:6f7kFf=m`n!m(mprhcJ>SS9u_1!A=A84Yk5*/LV@o]+Z3nMS,bajC@,r;oAe=Q<gWCW1$&7aQ?T`7q,c(,*)(2Q9B]
%[((t#Y$?Ms)"AcG>PZLfn8tM3+s`+t(`qq>5Y['!$u6,Ik_IP<[!:pXbWCW]NOj!?;o+B?>\]c:.0;"Jf]j2!\;)u8!U"orX+.@I
%%9s-MQ4:"/`537%l<^tKcL<g3ZHFB8H8iFJN"s7RZu3[*Za>Q"qCY]M.8e;(M<XDIRD55$pKMjjG>b/a/#c=iLgoQpZnrFjH]BF8
%l*Mrs:Fr!V(0n:kd*`BI'\<+FoJ,F42L7i=`qp#5h[`6,NuMQ<T*U]m7`+@mGT-!==^g])Ng_?54:;8:*dVc]T:q^<s59(35hrMq
%:Psf0@"jT:5Ch?_NB7[>1P>?8+"3XUbfPgol)&V9=aJN7l;En"U4)8<Z0Tq&Ks>E+D[+%Q\S;`.eY;mX:]DRn*_*2Bdk.HopU.>6
%T#h\b8kQTM2MCWV7INiM?qHIJE@)[a=d.\fi.T;=2Nu<Gb1N*=fmbX.i_":sI>GeO>-pl:0q=;D8*@Y5b$qH'JNT03[3Heh>ICqj
%GjcOf</"sJfD-19Z*mX1*e*(u9<g4e2SIO_?q5njlrS]8eV@#9mm;&*bo0U5^Z-m'`6(5g>j4,e?=(l!s+>"kr-mn,gqG-df6BNq
%iAt2efYdLbG#WXa/F9]mrbqi&s&/#Le-C29s#3A75WIk7/r(DcoorXupmNpJZ+2\DE,Eu&b:=(W`rGt?*!jF\<*;L>msWE(o-iBQ
%1m1%BJpLm^"XZ)M_^`n!cjPY5k^r>g21PqX[Tl^p9o,h6K8^I>n-[oF2dF.sh>e!_K^]%T<5)7Y\oEskJ2q.ehrAMb=5VfZ$&Brm
%"P;9aa=$"%3&"QllQW'\BfU,fUa?32k>'CDVN`IBkOO)BD;t!H2N-AC2Ftt]Q4Dm!Ir;om8`Gt"1?X@ld=G68l=PngX_`Tu7rXkH
%JOITqi1l44C*Fp>fW%A6A0Vdh:d_ftm&uoB^>lrPlbfcZ`P;.rQ2@cOC^iGq[:C+$UE\Rp7$"BV%EKt>*m]J!8c'A%J;eSX)#>QA
%jm`ON/EYm3_Wdt/h&%L6oc3OU.:<KX#SlU@"\e5dqlp7X"7u#P`'JH>pPEHgVk/5I1Ol#`k!@V(C`j2<$Y?L16@l]XB.5X\[;\kp
%ip*@4D;k^bdIf4Oi!h45+_U$/N,!V1mA(XJ<BgTg^YX_cpX$dr[ZKSn&l@.hIQW,J!8Z9;gu`TQm>L6[f7"P5nM?IqHm+iY\!_$C
%\MS;DI<N(r7SR.']K\kL44BHX)"^JWq@8;46+"^!('^4ih.)i1f@uZ?cE356LihB'SGRD&d!kBcpXi6r-?>3=;h!f^n(ds4hD(Pa
%AP^-Mml2\OPW[28F,."],4!lBn2TDK?fJk`h/^Dm_93laAhSN5dal\B=@>Kc?@VACh:Oj(-K<.M.6m@iLBS5AmFL#Z3!(J#joA+\
%,qR&?WlGJ[7b5Td_3f3EUOK2Sbi/%?iTB.AZH+-0\hQnJ/qG?uQU$Ib(Fnb6%a^4&^un*Jfeqk=^AU5-jOW+#!,B5@?Oh;i+?3[P
%>_`NV6<t\6j?0\!AP_)Lnjt]6WdY4K!us[O)W3qf.,1_*NSnO@r-0Y1%smX(nYsVmeYVgX\FqZSmg6t^iibni\FB-g0Ll3DYeWms
%.k.N_"'MC<$D9YD3]<'+`3lY%d^<U_!aNKl(60_*/@#=CMJbLWO!t%F].p19pIP3;C?c_M(i`[02s.4+N=8s6(Ns!$rb[5N$LeOK
%7#ie'a[T4L&oOq0raCqnbU1b_/'jN_3:Q@?B[&A%!a;'QUT<52Nt_HGpUjO`D$%aB>[W-Ih&"62A5+XHo[=&0J8=H"DUY$0=<m$=
%WM$%5-7Y)82(-KKK:`GpK>8s.TNIc9^9"g]cUsnP9,uO;+s90N90+:qP)"e/T#eZrk4FADW.:iN/s4^HinQi0WUi^_>Y&I0%A_;r
%H\)7dk$[t["r9Gh>5bPd>F$10)I4j`Tait%YOUWSO1sSO![Dmu!E&S[+#+mj)h5nh1Z/.HR43fE0T7A+o&GXfBID9HXS75'TtW_%
%@A4.pcH'8[qG-4:PK*:q`f6%gaAsBD,4CBCn<HY=\d]`ESun_>!CH)aSk8(4&&ql$"_q^:']d&WO:/s3Pt'$,?7;>:]+]*I7[ZhV
%XF\VJS+P-iOE/&X*lubiEVcWA!.VMGQDV%uLNR);/@_H$oHJT\b/UP;'LL6'2\C&T?j%&#[NY,pFOhUgTb!jL=q.ST"7$Y8_5YLS
%U,DiN9D[=R7*F3-O5he&MaoOrU$(nY)ntY7riN4[]tDFoDX++@#bW?:LAd-^>SeS%8@Pk*[ik$Ic=_qWG/dcAe9?mU_@l[d=]^Qj
%Zhc_Fh8cNX'pe<bD`:K6E*2W9_4*,%l73tK3ilRm"Ih5N06A)*VWlY3f3;ed&T8%H/`[aDP",!e$P1t3njQMJDTlq36,.G/!_Cli
%X#s'Ah]Pq/BeJe;+Ho4&B8cs7#gLjd?+uE-+ub!N/2#1>7*IJdMQitU4q+Fs//J1$BkmJ_,GHOq4.Y;TaGB\c.p+6%IZ,8fR1Ff^
%AT3^)7@bu#X_87or"sIT?1XHm42X66bBKQurRN!r;M.>E'dFCrB'H'-C=a.gYtu[Qcfc;IkW<obpC7PHkd+mSI].^uU)a(`>$_U7
%m`6c='bfo1fuH'pkb-)3@$O9:4*Y8SPD21UI9s\m]6IA%5]tuFT^S`]6pEL[XFpl4CaL4q<K?&EAYQ^]4EGq0C,2S0RtNl#p8GBp
%nI*oi3ZnE7Nt;mh`J'B2cid`:GR,RL[mr@S+f@IHJWECW.:))#76Lf<qSCi[/sBi4oPLk#OO'gj$C%Vdf'Vfj+Uth.R3^\;Qfc/c
%;D#&f`-GLL^[bSs,rN,W_5h?GR[EoRJc`J@"W]t@e$Ve",$qR9<7N-X2&ECe0UU@H4TKQuU:#olP^p>@Iks`nC5OBB6AU$<:)b#?
%TbE.)qOTYb5;eFcAa%P8p,MTWrXm1AmS6Wc'LWFGO>*oM0FbTel/O>,Tsh?HF>1<%7/fMII++Go)_$(-rIeUNNas^N"$:U<=S@cI
%`';e@><>b7B"fc,l'YJG@G<$7c?5tA_:#4&-*(Dl]Y9=hROj"9TkP)T!]$2j=`G0f!7U:S,[s^!,Ecfl,#GeQ[Aa.4l2:1Q;uWJu
%`f'A)=-SHo`NN%BCO6P]UQ1[15<Y5+j>h\+JmQMpe2fl3HFniE=<R-O::1=TUa&f-W;;tK=hBu7HmJ;2>#.6gd\<-L?+&h=G_jdp
%kmJ#Ebu/AM@LLmZY_@P!o?"?:n[j:t7`0-MMBhRYo@sWWICtTl>-1mC-bT1ClWq-"k=j.9&t!7]+d1:\P7-hT/hPl0d4(c)YGI!r
%r)DqRGA<>9V;'L>;(kYLXDegXot_c'D9.Du*?&4Ui[g2&ET9S1B:XLO,Xd>D6P%/eXQlRr0Qo$fO"['X_P>h[06l)pCPgU=?r('!
%.FJWd.I\E,oA'PPhf4!e*&&o$k<$teVb&gpWMg0#0==X_[:5M4dmYe'KY&!n.paG33S,&\E"*9M\Wtnqm_meK8BgQ#=1^A7I<152
%)&1<R&#*'Y4_'f$?+9Isa+8a:#tp\,"Nal4)9BL%c=NOG<Li%?`+]"0EC7cI2VApLJR!Ub=2@NtjVK]":u[GXOq"@D?&I3<;^OsL
%G_[#e@P]1]6KBd<KLH(ih@;[Igo'!`SpUs]hhHgu=8d0\rX##_>iEm:g20,HZW-Dj*G0:UFb_-udk#nVXbt+\P-<C8&4>[eFNr:!
%If<_I5M9r&)@:e;%X7kI+-?<JK<W![5C=F^E[r[\J>LLZ+%./+^g4_s=F@Un*gcS_qB*$(T:gFk/=3=hBZ7kd9[/L,dH^<T,$[ta
%qMe+2O2peC$44&$=!$(Y=24C\)*/O$qIoAaXNe4f*NuInT%kLjpe@Ar<P2!%C8P+a4EOoBRU*RtLA/eRA+[+TcK]'HCTk\?UIn]-
%*egrjrp5WA=4Zr*GidJ.Q>05$imkHS,2URMg(G%E\O0tKQ`;\%kr?`,F%3+UC;.P<:_>;&g-c5fll0\Adn/B&3<PXNd"L@.7ih7?
%PN!g]lRo%I2>nJ8Oi8qk:\4H_[J^De&Ip7:Q>p/._jIiS0ZTE8#p3,9XB?KIj(YPp>%NqrgI"IVH9hc7A2g0IBd\Gcluo<3o@f,t
%fiG#er&U?4S\5G%L"qoU+$6rK7YM.30C.7?@rf1'>J2c\?K@/aeAD1`fK,>RN\+K5K_r$&)W#+^H4VD?\u7IUV`b\jHb%fYb)#mj
%NEo`N!r_<fMCakjJb:V%D^]YsLRhX5l5e-HbJa)JH'bZ`dQ4P"3N5QmQ.M&M;:9MXMP2A*`H)8h^q\U-024L/HmBdj//VhI2O.**
%IX@UBVk2Z4Bl8APG)C>S1us\gr8P,Lemr(]q[A+V#7p9ed\SZsdKu4m4W4[(DZ!90;`E1N0V7`b&pr[/+.[\YGVC2b#jTM&?(I9J
%;I6#^SlT8MqN<Ps[e)P:maF^]T/*=d+OM_Kj`Ts7lTdUJ=[ZO)*e--)e$V!O-A"c).t7>e4$Xb>2iBL2Sl&Dg00VMO[7G`T$WLuM
%`dFrQT&:sT=L!ADM/T$QkPchJ:sl``pmE;ges=A8GhC"Z+i,Q@)eVIM+jP1CUPf<$eVRHN@,];,WcaRb&b%^2Z9u3:C_F!8RL0nb
%Ke1Ip@C%C-_e1O6O)]QNDJ^o4MD!22+bUN1.(9(kqS4K(rlOEl,RY9[f=,f0#(Et^=-L(DRJ>R#=XuQK2PA7K40gl9bo1eY@N3JB
%[_TGIN6Ma^%CObt'0-hh0=KThj%=gdL-cZ'pcL>p%eI1EFRe_[qEP$pBO93*hbX/0E1>&VYc%&[g))L#U9+gGG?r[!\\$Edr;FQ0
%;8;@CKR5b0^kM'odhFG(>2-q"dcjC,%"6R=n=OSXWe[E$/a'Kalajn\`CfUfJ:/Dp"g,b4OT4G:nDg1apu>I?eI,=O@RN.!qNE9@
%?U2Kg?pdP(3VI3)fj$s>_9c6VE6#!J7gk9<oj\]SBc<YZptS$rn0;8kj$*&7r[WI1^-(F#!rE7G,MN[p[L=,kq+!bclZp@'7Y<BV
%QRc\\Vq7ZmJhuL;fFMS=NB!!B<fM;+oktidAOi?ER.Gdge"?#*JZa]?Z8EZ)EmN2#<T;_4>&en>KEi5tgKL;B;]YSkH(Z:/[lbVZ
%&BA:hd?n(W=>$c(kk*.W\Z@GP,HnRFhrY?W%lG&XC0Poiq1]rY#^ji]#4k&#'D&qe0UL+N(dF*qLS2%k'.p8@7k)Smj;V&m4KJ.5
%PtrlC]fftM1UO2Mfr[!@a5`!`U?bth]!)3[eJB::rig(ibHH>s$p]!Td!(YO#L?:p58-O[+g'meO@.I%d1oY6/4>'DeQ(\'<Kthn
%9\-/`r]r\TS1"+$F/9dF]q&$YdWkW):S#pHB_2S(B(;8t!Nu+lM;p&5`/@Z$W$nKBX<N2Q=#JNfpm&;/`G93(mq8FHC""h$O%*^_
%o7GDe!St\K4-j&NGXkgToq.W@,0(p1ngf.uFfLh<GSL[7+B_k8\8(1aK\j(/<^r@c@RGkqdjB&cWg4UT-DS_SXps7NC)#uj)kVKt
%J(tK5f[4S_F0F4J9`RtTo\Ce^=u=85PmuFu7=U#!R3d)M4gYBU=N>^L<^?N#1!:g#hZ#dk`_p7b*J"EQBg/UN"$H'TYl]PaF.8;f
%S?MY[393m.'"gCb4tC<&I"AXj/AG^BEa<@rU.+8AjE@.C`QHP)#-oqn-KTF%i([rITFuNJn^&r/32okRTKT6W]d![n2alY]<G@m<
%MM)M9IgV"M/)EP<G:Oia%P9-V7>fr+-l^\$r(7<@V+k.tL"0+h^PM;k>!TP3(,aQb[#OedAoF@J73)#3W3Vu-HABo&'",RFDI;`<
%lCl4f?W:X;aA^1(7n6([2JaY(Y9_UnQ/Qi9Zm7Y7$.VOg,Uc&q,@je/mDFU>TGWdM.)qo;'i@dj_oF,IlL<4`glR>P;umsR0WG[8
%XFJ9AYb&E\"FL@&JkCu*IA1)8jrj6Hi'1&e#$J$2/jRcmfg-WY\PXqK0R+\i:QEE0kn#O`nhp+ARADRCcpjf7^:3K3Tka7R+n@5Y
%Ns6;t=B,\:UZd-7Zd,d]_.>5"?+NQKKm$;B#g$[^8f%+;r!fUP(1BO.JG.h20f*,Yn3uSs2U2JG;.VKiU!P>Ya79f(=s7U7655u8
%;pgcd@[\))XW,2Ud2&M8CP/[WI3.<rP>-ROXu$4b)g[QRRj6t4/O)^jo%a7Yl`I/DK-cB?gng+jeI9s\r)I,c-:scm5ZiVmEg)dK
%5bI9AMl`RJ?Vj73B-F1Kj1msnZq8GKLrZ*R2g.*UEtiJ6U6TT8k=r!pUZ53fg(RM+PanL_NcrrHFVbT<BLP3LTAsA*#XMDgp5F+P
%WXJDD5ea9ti+kWHgtu.1VIG$g;iFJh<o9OmK(bW/%o]*3Q7DGn2-F'WR^Qnj_6]R\*Ncq*CKsNp768P;jMh7Tbfge:B6\tL\PJ=O
%b*c.tBc:]:K3Ndo"WA@&.(+l2M'Ei<["+B(+CIWt,;)=")gEsldit8BOFm^\0\![L.+YOIj3^W$_/o1gKO61<o%SEfh1@/lNRS2/
%`r>pcX-B!N/*;BG)R\MN_G3J]er$lp7aE8["8*#X<r&X_%nb2YM"_n:b"CZUL:6C.]dR%:!6B9RK&`tY5^=lOnZH^]nF:Wu(,r>(
%*it#'H&_LUd0@Ms:O'*1:8EiMEIGWSMs70BIY\m6js::ZJX["m4LuS:<"dZc:onK4Do?p4cDKNMlb;GVR<<s/hV;nCI>Aam9a;84
%[6F\M?<gM]WNm"a?+\L_/+XUB=h,GYJWWJ7Id8Gr/e'@g0HV\CXC;NN>p1gD031@skpf/#H6\eT>I"`A8d+h-p^4:lNiuVoAsi'[
%3)g$U54oIs:c/\JOfck2ASY=>X5Z!fk!>\XI(V(A)OI>$p-?Zu$XAm0<%[=SG.`I85j:2WF5QJQBJ`Y4Ghuhc.VYPY'cq,(VhrT8
%#jVkUTN5&n\9gU>!5i*l#]#ubK!nm&W)EQ_eln%!2+ugnHmZ4I((f/@@4GcAIAi!*k#&rO.m>/o3:q2Va#eo1N"m0#e0o0159.6)
%<:cHUH'BAH8QLrW5%lRD_$^(4.cm<M[2O0BX1_1B's5a.l'-'**k&-K*)_q=4:>`i.3M?[dC&T2=5*^@X(&nU\ltP47bVY.TJCOR
%.Cmjd2k*5Pf^2nI#^rbn&PDk4.k=e$@RUpu/-@jB'2Dt:)i_gXM]SB]PN-([7DpP'b1!BDppFAiq*tPC61#*HYG)<Uq`;I`!Amcr
%9mC'kWjF[&B'c1f=[gV^d[r&2r+T`qRoq`V-&ZB_mo,J41uXOpg):@dWbkr0J>B1gHgt.cE$lI^60YZVR/S.2,#1d.bc7=EjG&,P
%R;u_HX(g-u[LK/X<5b\Y%K2H1R\g>@,PGrD.'8sJ'PPUeI@SYC/j\[RHO0j3Rps11%lMQaBoRKt>Q9`042C&B;SZFt^S!Z7fAoeZ
%XLO!/mmo4*@-dN,'WDACWJ/T[a];iTYn1cTF!%*fJq3?;fk047`1gYEFiO64>bLf1X'jHoC^:4=M12N@@bF[0OVO:mi3<)D#Z_#)
%+a6uQ=Q2f7Ji9/5]V)\hIh<hd>j-E,ML)[aAO6W\c9fF%\?,@6AJJa;kl7_+UPlH]_.X'eh8+X%27O3s-j7Mn,$HA1hIq"1j[g8L
%8_)m3$):oa/&E>!DKsT1:q/"a7)KA7<[]Oe_&(IbP_?;8eZa&HKa63]K`-`D*#mX8\^*GLSX4AW2l#&gaupTT#Rq/tp'>uRWUPHa
%>CUbj1#!T^4:3</:?:2BmK$Z0&f_gt@ajD\4cB*EHFBM8.P*W`5MdFdjp&Z[/kD8TO(2+"JLZ?:hEe<F)n`M3?FBH]3N`$PmBtcu
%g7))hCd\(DF'@21C>ThXm&2FBa+'YW5/*n2/quaAVC.qJ0!#t/_m;=^8ANb?i7d3_]im.]g_28?:^^\M!'P!/g4Ek:R]%Lr09($_
%#sM6g;ZrhK2h&E_e@2h6CPIeg[mpPg="7)H2Z#;o[6^*HG($UP^8cLCkWS.KN%QrjZ.jCiaAWbZ_9$L:0&h#4Chpu#OTH#@q5G-&
%JI@'-ZYN9HJ/9DYhi'F4:lD$ZG/k>aip+spO@WMAB>lgd#DO,lr<o)"kVXO/_IU:r;]fD$X-VWEfV,e^WlFX1UJe&S3Ab"md4>RI
%-dLI[6*Y0)h9@#'WrVF(r9-9NDrFAGC&.R60Y>@=Z]85!@%r@FJo.I2KO0hm%$S.t\o79*#22!q#!l$53`''[A7g6aJP2o.0OkFF
%U:oA*5Zlc;n$:bC.GW$QTg9e0h0]4a^Rs+Y>c'lWel8.pX<9ll2fngmqH3LTC>K],P8T)8kf%pmi%=QcL0<iK[a+'>*#o<PlMG8K
%=P%(P@dJM7h4a!LAs8ZL%)p%R(QP7b$oKL!G/M\RI?@qSWg>;PoS+L*T`d%)%0X:\QA427R&90YM5-s%jIa=B:!g-+dM0HRrYNc2
%J[Y,`IGR[k?d*hcriQr8JfstF-J6Zt==oG=g:3lgWD9;\riBuuR"`WE.S/_p?2G["fMZ!,Sn+]&9C,tglNB+EO7m?_Ju:+(k%tQ>
%a)l>8?qP%dF?7e!((7I;AYW=O?H/XS/??%kUE%OEP-&Kf0cCuoeZnV;Ke[7E,'H4*A2=ti\4p6<%<("Tj980SF"/je92fV7TJ$eY
%HK`\p9+*cj8,2Z>_2srF(m%l<Y@=(4eAPA-"?W.3SAIP*oXRH?bWN<C5eWpaT\sDZoXP]rn2-H6Dg#b2;!GQPnDp?<iQ:gZW`H&(
%il#9`W&>=l^NC"h*g5<J*OO=@LZH3ZYZ&uCaleB*S7$H)Yh-]kkB#[DE[&!p&I_ii"NNRaBH%'=7_Otp/]3pjCX;4fN+%W/3_/9R
%;dQ,'[b]ifRqfLKfX(D0mRTJDQ$ZM`SU-KN+&8_8@>OW*_oZ)#%sUC>$8P@e5VY9e;"d\qAl?)(L1M*T;QE7H*ZECDPLnc%r[L**
%CUU8,iVR4aE'/!hI=Y-u7<,mEhM@T/#s/,g(]Jhu72:h6>>EX!?/Vq8VW$7qku7Df7s-ChR9#$<1:0Kd"j96@CKbu/2&I@b_rbsC
%X<h-H454`%F.uCrkSet5N\`uFVj_rIjp(W^e$;]0&O*5*HC0Nu&>=npSd6<>I9Jq,(E^_Q.r&Mp^$8n.fPLmVgEnR[m>F3Eql*?A
%4M:l<2RJMkEAL4<?bnSq_tTca/G-A9::BSXKLT+tr3:+L<R=AHKm%!>i&]N?ndR/3NpS^20/639P[b\KHWj=&>bUfl/tX;aOn:9U
%@=<6?aMss7=0,/g>3)-]+c*Xge48dZ&Y,k6iB>TC+p;[^,66s7H(%pXp!j_-FGHNX%(C%qe$9?!%$W+tr"3OW`QNHhc%g?d&*m^4
%[<*i*R>@3neHjV(m5VqI=pB[I2%pnbDmflMB&3o2#m=ImAbV<.M7AJtO$RUtqOXIJm__2c+TV,Y+rk0O*r%1JH+NfZ)[mE0G;XFF
%%'A@BnUta1$7P5AgkHpkFLK)+D<a&FbuBM67lG`E\,Tk9pBNnPdk1P$_-C5^d1406"748/1N@TbLj&d9W)^ruOAF>+#Lkic,+W#3
%9<%>fGn=+B=R+0'/K.(^3;@f.rTZ<N?,UVm'HNg78-3_moYR@RrNOp#DLs;+:HZO1CG*j/Kagoo`uEE>)hsWh$KP@:(;1a=4JRM4
%6e+JQik,O!E?'QXD>"7Y@pX!0qTS(J^s1ROgDAK^0cHJ(7uE2A$Z2Vq<]F=n0\;L,D?)al`<(O&0EOf$Y%D+[8$+@jeG;,e@:L]b
%D^W&L<ccYGpo^CK/)X!eD/9b=Y3,>k'aU@qd@S!>KeO]s$)!Ta=s_ig#3lCYd_Dml)FVnk'ND?dgCPuPo4$A3ZllVl&k]6"gtL>'
%[`aC^L;e%>!"O;2681QNGm-Ks&Tn"5]e8%:$\!ph%7QZI@M)%-]Z[R9^<b>][cla0LGpi.Xf,C<C@)GG--b(Q#S$J0h.P3b5SM^V
%r\8N%XQB\b-mWC$&[pr.fF*;fem/RY-;saMf'5%1&8J6=*"4L%*8P<=U`&P;ln!e6C%%cN6+.0sC'Pl[F*TItCZ0U]YA?KPguumC
%(j)!B@plcTObhS3Mp[+e\DR[L=/'m(8'VPf$p:Y/R%T8W>Z"8ujL]TQIt51h,.rDp4Td]_M+I,_5es?^K-Jl@I?9(E@%jDYih)p6
%k2H(B1jdUMJ&a?I1d7Qf).lJ*%Su:g?)[9F=TRXr4%nNZdIdM?HjCI1i]!&=d@?ft-GkCAn?6T`)a%27]4UtDmq"t<L5a/$%-3u'
%'Saiq5%MTCiW?fYOZE'TL[PFhIl"jSUX=NHXZn_>X8,/3L2L-e;YL=:1tB5Kj(2+sd'kb=&(gnfI]HI*=;;aZ%=iKug-"M+bi=b'
%6X7_Uf6"YLmPW5f8&#r<ofB1=0^fpcm%B<Te)GHWk$XmL`dG%oOobg%9X$42U@7(Q/B6XK%scXJ"FSF&=p7cjTtR<O;eG)!&tI33
%Y[_(&>-\aQ&u.+Bg(V@8FKWTn]gAIV[D6A2M[>6@>2U(>Pu',V-)+@31bTCIVcaKA,We@g9W]eUS(YPV^#!_6>N?G5oJOMt8?gK_
%!f(3jS03L)MH7F+h7;HtD*_j:l1GM[h@!oRq;i?DVQV+PjdOtthMQK3W3_dSn>n,MEu4Rl_9deJR@_&&hbeg#K`DE'=]frHAka0n
%<JrIcN@V":2FGg;8'-!bT>?Ig'uZ,kVS=q`s%OOF$\lU0%3Te0WMP5(-?Sr.f[MF0kE;]>'Aa!hn1)fk,7r\]_#\C/gU0t&C3piV
%JVaYSr+NqIXWhm@U-)4J.2uAKf1[T'(KL,q+Imtp)RYF;QXM\L=E_Ws+O79DJIZZ?O4kcie(:0iEo&>%&8I]nfm]F5(E$N$:Ugc:
%.>L*.lsO;qVCIll:rC!UeT/VO_1tIg@,76]!7)0sfG-&ACmpPVMt)"n5913_Akj1+?^N<Om/O)u5Z7f$iWD9mFo^7<8)1U^T*;n\
%+\rM,#upM>K1*PmCgg,lfMtT,_!J]FH;SaO_>7oJBBps^J$V"_Ttku*a]?VhKR#UWZZ$2.B#eBAFfnt:k/`q0-(M<ApapD.o7heQ
%Jq'bh9-3eN?GhI)qFtnKE>l0S@5C%e"^R+lf3n.s)_Y]?0M_^MD-2NQZ=^*H(u?&$o2QZISm+O>/ZF"&O#sX.+JbGY5&+I9RPgX3
%Ko0U*0[f"b/jL=f5orNEAmZ^%D@>9_,Q\c)"I`RbOr6sDG_+;8\orIJD-aMVT`ojg$p9;/9eglIP"OD`C,@WU&k6,"*4+lIbqll&
%bq>*YKakR$h+=Ur>*!053LDB;OD/t0)MY2`Ba`RG8f8(!1k$;.$E_;p?A#'LW2\HsC[Or?&O8u)BGR$rA(Z,LZq+,*#SDbK#p]m3
%@IL+kehkSGRI@epI+6O@8dLW=elRI#)[7)=58;1o>l)[Ll<#AJ'j5;UBhfEVC#9@pHHTju<i!6fTC+08R/s1O`Wt8X]8hOD^V+Du
%\Ka\+mgJ_/oJ2I?Fh^&m@L\&&lj)QP1W].@T\23/`b,7a.jD:!X3N`RkjiGpK(WUJaD'2hY--'mb)D;SjOd"K)Pk8f5=$8rB=STq
%eZ"_[a]gb9i8E*dMA:o"$8D+Z=.c3U-AAZn36%ESF9M-kioM$S4D&OW;@#l/Xid]k6.P>]?!4[9KUpI_P5lrI)TW;$!%OV0=kI;U
%\#Y$+0NL5H!,HTc2J@rlY7jY#$H0/G`He*_F,_=^jQD(%%$?jH6WDN.euoC:l7K%#X<,3F6C^nIkr`)L%3odV@P)Ml3)7$LIE$g^
%2Yp5_&_Q=QpbJ[)\Fq82[!@kr`>q%<&-;(/;&;`e#(d^5Jk2K4XT+a/C&fh*S`d-])-UsG,f7X8AOV/4/^nj8]sc/].OD=^@5-fW
%T[bT<^sA7BPY+73X%!u5O?;)6$;U;5bULN(,33^Z_`9R0G3OmX10LaFFB(p6_T-.&cj4W+Yr9U.#[h'l[f9oZ\D%<'H=^]1@<r5P
%\G$.>.41Vp^W--79BC;R$/r^)<T+Qm\nUaLd/oeM3hMh(!B[@D=^j6B-@?ZhI52">`Br+!/BL5$.W53@9):s)AV./V=0^a\[/ETA
%T^(FtL<eJ*m#`kp:gOrMaf'oh*>9<@Cg_8n<Y_SVj^?#Qnq0eb'2Y3%7gb..-j4kNk^/rR1V)<m/E&$(U\%fmY`+bWJ>[LLWV1&m
%h9$l8PopPL3.ufE"&I1ul]$Fe%TPlNK3m8^Ga-eAA-.^#EsVkKILo'$LtW`uFrcuI0l.WjG-sWN[RdeTpX:OJB/pEu[m[S3V`*\Z
%%M't%H%h:bDIT%-+s`f3=/EnbN6^Sm6?3Fg_-gb#%;^)n8mr&-5g+$o"Rl[CNdt1T#;]*nN]V'RDQgcF@MUMq%f9?fqP92Zbt32l
%(mNbTL^@`?-0bnRPR7)@$a8%g<<U?q2T-t)rmfq>g;BgK8YDEsjchs!iW"^;\e'm].Z$R!+hf\(([Bs1OMNno;[5?'J'Ip0;G@`<
%Hi9(;@k/HlfNWUo_^R"b#u+2/S5>WUPumY,cfMRZTH47#o))A<nt95r'Fj9m0?@iJCraY84rU.L`CGqZ5el/?FG=T^Bk8>DgJW?P
%4k@cbg*ZbJN.;)rGgt4Q#+/(h!1_=m1$sfkC3)DAF?YVM*X?KQ&E#sk.\:Mf!!mD2mE.V41-eChgY@<Hk$!>``KdYq3pQBbif!!E
%cfl]_.;#CV^"![Uhq.eB*i;_ZE;eB\)*4H7nZ"]V`QsjgC!H3`KSdG$(EDi;NN^V>3JiHPKgNSQ;s),X9VSBW:`>6#:E;C-A:"D>
%L?+U/2$o="U&s'Ql:PP38k['IU9udZ%o#L*&sPiOL1A/^DkRrpLrk5T[&YTW_mr+%?biWK_i=tCn28'b*3=bn^Tm`H)s8,).+osP
%+pPn<436aLq4Y<L4cH"*aa0`q"n$VF)1,^"(C;2kd8&U.n5m^koAG1K0-S8RY%$_)imJ+b8@-p=+O%Vq4.<W(q,=LbHu3_4BB)\2
%1.S+.02>6(^D=^tI><"WeQ[@YFr$Zn[_I!+pAO[(>p\!IME%A4dO3KJ9fQUgK-!TfcT7h@62+(W)1@dd2EGkQLrkF>XeGe7DO'u\
%ij^Opf7CbP;9#7=H5ZglAmN!Q`F_.#A/4=ZmFibLAK"3J#g+1t+UEE%b%@@^iWqPX^_$4]LQTu\0oY@^YU)CTTPreK4[SRp4!W[b
%8eaR5E]+AkS%T`A0'ItM_0:tg0Fu7n=YFp]ggg(oYSOGO`a](&&REq$CUcYr"-J^ERLUqqEpFa>A5%"*;pb+f]O6_"$t3M1'gn'A
%oN'%'XGnJ>8EO0^g(EnDCeK3G,+l9Kri+*4McV58;9@HaO9Ed9iDWF)K]s8h;oYn?eI6#!VbC^!?k&3\6&q<eRK),jp>lku-GPS*
%3[7+E?Fms<M:J)O$_3<ql?TM2l<7gj46=&:Jc3O"Lg@*BrPqAm(t9qm]R]:-]e%]]1VtZR5dZHW$ZQZm'Z1]HQ.a%0bG/7l0O\r^
%>aG^8!Lfq1dNM@oRKJf&'hoq9`MY#D?>am:0X`:CjpWtp>rk_7*YO%[c&g4t\d)UTXR(\ICgn4KK=CV]02#o2<EKI817L$B2Pm?!
%g.l3&X?`T7E[nX;"1KVP.nYM@b67)YM>E5^a?ZEE-5%;(`u.Y$g/7fCG+K.D&k46a2@P:`DU(-*C^P+#M7D^$7$,6W?l=!%n4:d-
%7=q@rS>S/=dHWqITih$5'li@$#S30(\:+_QoLePYIPkVf-]N+Ennh-k7qhY:EWFXl10[e@PeuM*K<[HrZgm4k5OVYPRkH%rP!mA2
%(3CSsCh9$3aqa7T8%78E=(V=RpnFPB<u?JPi6bCmH#4eU(hQjepfK+6!sibK<_O&X1@eo"dG*r$#)lusfF2'!C&Tf^o?tPC6>n_m
%,Y6iLcVMs:[9\+*>m+E@O:W,73mjBA^O3>n6-j]["3W/e)TZVpgBgMLg$\TXg:m04JFoC_WRrL(I)F;!Z(!JDbNM5#_i/8jS/HM]
%2h=lb^M%bAr_b%]!YF2QB?sQKS6.3:$5:]_M49?8S:dOn=FmP"Z4;TuTM.HdYj=ut:098,VR'HGD`4(2-+o<ns(_ASVLE+S==ONd
%7efqfS2\h8QROg4X3dOaQ;sZ19Y-a"A]Jl$]OsS72s7+'/tdTRk5Hp)nY9gu2@JlC1hJAKQjZL\a4UYE/:=2YXsCdoU][$D=mR42
%Yq#O59\;4C],-W>b\7la'#h:`=(u*sBoHM*K9>6NR7\98[=&'9p>uTOGUK>K#gpFKK5LP$Or](Y,<8--%:<bW]PEg6#2-Th\Il"=
%BMBpN$tL-R$m4G&.m!PF^Naq$NO=],h+=t>r&='Q)=Qm=d!\ZP=sqGF9.Mr[]oo,Tp>ut;R)V^@e.tsn*RQ68(5"c\3i=?U\K!UO
%E70D\+s5&*lX/9*rK7s+Bp[\oh2;aoA/R.?hHrP"G0KK$P!J*@lhb1%3dd\q3Mu%tFpqI;0r:I9pSAsqn&[Jb]#jrKHj<X$SZ`dV
%L:+O9/-(Lt($SW!`U]Hn(F=jF/ZpJT&V$aB\lL#6c7S6EQY[eS;tLb#nqPtY\E!E"!nAXJ7rcf8K8KWNmi"fV7EKOkWHBTNGCVtE
%,nkJ!0]M<!hOd?MZ$9bHkCM%\m<3Se-YjDWm(aG<FKticaat(2m.WDtI+Jo8QU:1j0hOdf`O93!UYQ%@D6qQ8I_)qj#MadrRYh@A
%p9e6BI"o(9YQZo67JNnP"U:))9KO?9;),9Bp'bD<VfH&h"p\:m_e@N;M;IW8:A82Km-j[V`n.]oCj+[):+YWL"Na^;Q>Spr)u"^6
%mH[(3@Fl_gR(!U?Wp=L2kF4eH6jC")6F6l]!7=FTh"<s':4X3uQ:SA>M-$?G[(7\RO+OF$(BGamD^NGpe8rHL9Tquk%e7,@6:o:R
%;W,&%D;lH7Zl;gHpre#5n_Mf&Oh)9nGuYqX.MongS/NNJI2MKHbN+,)Ca6F*X=1)H$6gnG!kV*FG-I9_r0p'kN_rt649HSB+\s&r
%i;d\3[QZY&)'a_sJEg=rW'k'as#sR8R^X3HIG@+F!H7<f+]SS*)p*UV-2FJ6VViLd_$#S`G^6!N-h,rTeILO2DD/C(#:6.6#qBq)
%qY+=_"DIWR,?=X8!)@hpH[pQs@0ZEf!WGMD!IuG/7_A=`+dXmVaO$o(Wa)_L"2J:)4_R'X&FZ!=L-E'A"AFB[Z%10/:UF2ibRjpI
%AP#V%J-)F_$7"%tm4IsD\L(!qaG\'`0aIndTQ4frbDfFH^OW>uH5V.?@j>nd)*=)KaON_S'=*m/!5@-j/P[@H1`N7dC$!;n-mIFY
%YIr"U8)Mq]rF15jS+qlD_fNf:EpGd%!?,FnL[,3iD@X.Y,E/fXPT/3dY+kpS3Ze7Z]4^91r(<Y4TBLZd$rtCdXX1[;0]u&fkA)N^
%k++$3lR!0VR\pCJlnj=![]gMl"$,EjHHp<femnlAor\Gs[EKdt?*$C6$0#KhA9GnjK8R%P1'.K*iW2;[#FXN^+o5[I@sjHT1%VPG
%\bgcr)676^^@`*4+s[@4-^t2=PS:M+@T2Gg?Oe@FlPh0.d?qCO'a*/59_n()#solep=NpN'o`2ch6MJ>5XlWT4PTFc(nn<#"01HP
%@IGe<4r97qNA#C!k9(&aSL_aVPG3*lqZ61pksA`="H6?[Jn$Tf:4*^tm'ZHCN71rlpS]2U[!oW\"j,4h4#]CZDiZihjJ)nW3F9dK
%&bLY9hBKAAa1q[\K/_[TWZ:34NkS8D+uM&"!$`FeFtH+efo^6dZAE43_"ReU=<XmNJhmrGJbEW;e.pJ-/Qbb^2enOfZe07L[Z'KU
%4%A%co*4@V@Wp[%ct^'"WmDg:H.rcZUHXf_\(AUbWRd1*:]KQEJ^l&YA+O%MDONTQ$&\m&.J2c/]/.h,`K&WkoHXBs2cH";]03!]
%W>DcK=LN?F]qFPh0/*jnH\[^o@Apud:)"7S[/7'U3HcBacP)?W22>Sl&9#V#3-^b^O&7RbE<htYh<d,_oj!P)6(`m^$h$1"\q5t)
%<-C?%;)Kce6G!Fm]QW>[,[GTORrI`HLF%ii>8<0F1nuB(am7B9MiejlEU"Ba2kJL*m+2\b_g]hW'TdsnF!DW3^l`0SYof+eb`SE]
%V!!VO[!FgV2RU3-E?Dg+TG\Ve*&uHS2CJX/*-\O0JP;g_>kAYnEa4P3TD-p_3euONLBkBVnDXnZ=So<.Sc[V(%NdHcI'qQ8D\lcA
%Fq+=^*kn<m!VrV9k"$VPemdM'9WNJ,&:im\Z.WPJ^6-UafFin3I9?-?KmoNBR79ps`Q-\X/Ik;BYV8T'N5mO:p3".%W7QYbRYCK]
%OqLS^1/@sb=Z9)$ZSNWgKgd<l'7aT)nXQH#Nc$hIB<GZGO`fp\,g3.J#*-Grc\pK.d`O<2DEOf\Z<oQ'%=:7lUNuVc:U3'D&V@6s
%"X4o+]%73<;9*f%kQ53,-[K"/9Agt0dN'BnXbKM_-rSbCp>gR<A[`0pcD.CUPHP'`(<2`i7&JO=/3aSQ0Pe9fqmnT#F-"$S[;Z\h
%a*d>ao]"pm8&/ue:mu.C_W\j.E6^b]OQrq[AbQ(po>W7d<*_nEP=s\pNRlARb]1Pr`F1%`/5?NK#kO29fZ;A6S,'n7U-no<P7OPh
%,P,SU*e6Qc[Mh5@m4(BmP=.i7dO[LmNQ?[6/W[(7i/s=IVm3_o3RWA]UXjM2D92f.2BUP9I+V:+J\.GT[t<Kc6U8=krg;2FY:\l`
%j!!c*0iXRY'd19X*/ii([^"Z0.OUF'gBa(H8AV$GnuFW0,o%`^aQ2+@N=dQJfCff$Dg52`O]kE;C4<I*hQ'SH@"&*V:*Ydp9SMjY
%fMfPiOe[SXp*h2I\(sa?h8Fe/(?ipX^'B>")ep.\E4"P[?XoY.?Nn9u]D#S14Y?TH3VW!X\c9ejpu3<chE1IN]*NZDl@s#D[gloP
%Y,h5WS!,mFAFjKdo^0XUdJF4@XiO'ca1C+OSJ9`<RkU)mKf`^%duA?-WFHf_*pm-PLN0KB@g$#Y]!pd'f2Fo%4W%AaRNet%KmM&+
%K8KWQp@un/*II_HdZ-KidIeT'FYEdKHlX;&WS`,jLHd68e_O!`@l3Cb#MU6HZ/'9Rle39gj4m(a&T#XUZWp7ID:)/AL9j+RF#]EF
%F1X.ZQZPV%S,^&dMVYdoO*u[!WT_pWM69A"NNl3jholUGCJ$g0'6uh.hfOe6@b>1KhdY5JMgojIGI?l=k2*i\p\nC,r!,g$T5X(,
%Be<%3s2"@M"*/Y3`#2cmB1chB/ku3DE?`!$gu,"'8G+#OV+59E3%=EuhVt>[4e]:bQaVf*Lsn6JDR=c#`C\=$^;WZL&%MSn2&-Ya
%mB:*?OT9[hU*!p5h`\^O[pEuCU39`@><_X^.c=%hKdW8DLaOs(X3GNXe8NqXqC$b)ic"c8W\a#p2*$XTlYXC]/X:2*h.ZP%Zej7r
%5Mb&F"("4d0r`uI[CJLM4D:q9,IsSFq<gDtIrKJ,XNGLDIk?"/Sni@[!,aHFY/^m]Gp9VZO=/M)<#C.A7^q-mPT@P<iCTWLNs[47
%FoguS0TE8SDKsm#&-EZCRMW+m:`4CVH<<D@)u"^6m+6l+_lbB$T<iJ%,:cu?DjTgcqUN3uQ[_d]<fbekc&1%Ma[^1ues#XnI"*PG
%:PZGdoPQe60=uWbTmbFuf_.DZ=6tCRqhc]T^".WBZ5:^8c[A1bm<Xk2f_*2WF8#",7@_#`Nh@!IjCmq"eFS^4Q);OE!(mOJAJ&Fm
%YkkXQOgPGD;2m0kO2O&qFs@Vfb"bJ_[kt%W)-%:&#FOttQ,_H)Xt7c>"ZADVqLB:`Mi%b<+dVpE`Q3K5Ya`)CD;G'lY_,!VGWEU.
%=cG;c,Gd!W8he:RU2Q.jQLl0<RXuag$Ps^e+3F$^<=R(dCSSrrKkX_GY-i^;PIHbT0`^u]GhlU!&]b0"(Q'mC&_2D<OY*Db&S-%C
%4r!H.0mM'N!2a(P)iB:<U>CXads)ghD\lbXoJPuQ[!T:hNRg6Wh:gH_DNWR/'bBHof5c5a$mYB)S[u_$D.\Sme7@H80j-Tr!Gah@
%(t6LH"odE?V:VOb'WpMpf9i%I#D!k<OO5NL]gh+:`tM"PN-`7jh/4$9:V0*0T7Lnc!GR-QcBAFQN/Z**m)/$6UH2[g:rgmn4EceA
%DB*oAY[H;uiVZB8nVqhL(f,MP&M.,AT>U*:r>mloFi2t<f:tKrL\H<ambH#gp\t*!I(<8hUbj25Eu9s`]'L"GchQK:'hp7P##2Ob
%DsWsc<']3Wi"rsBFgE*4YhRdsDPMZ6e+`tM84mPI_Ffe&M@d!O['UD">T;Hf#0?]>@m=O$lo*."MJL5>l+$E;h99Jo-Ab/0WQ3**
%'1;5?Q[-*Eeaq.i,DBkMaa,Y#JJpAs]b79$`_:(M;ad_LCP:1?VCpeX_VDGj71r"Qg4\H5q\[8=!.*oG9H`#N\PBUf)iD[u"pAqC
%+,c@+qdCX4C=#Us5?m$Q"4aV$2Nd$>&Aj^[>-uYOdBGkqK(Tfl,4Xh`e4BoT\^&m#MI$W9s&n[N4g9-ERaUQ[)0[l*jnpX/KqQ2T
%'OehdGB<d*5:29_neDkk>Eu,]X$_;,SHFt3&Aho1fhUJ#HE0k*Kk;>;rj<)KJ7kKR#INYS99iX=[M*bHfF91km<]L4[Ba]#RBkAQ
%a]JFmTi9pA7W:N):bo5*3H>t!\Md`&MVl]s=Qk4$Or[.;lMba!8'hNLA8-Ds5A>tbY.Erm&CB&>1Fj?jgr&Q4eC7Gq`]dFe[3T8b
%9<r6<@/'GZg74`EH5X+%a!J\tC(YRr?cJ*Wj1:#3f8;$B\#A4,/iW7^ragQ&1@h]C3f^DU?o>R&jeN"/b!-H\XFq'eYga*.5iY&E
%J_<aI\Ri7G6Shr)7))PVYY69eVVYE-KRDK,.::mnCDUBecO9I$L%%Q\A',8l+#<**@.1G:KI_[o*UmdmV9H"N.!/fh`>a4NFY[TT
%oJ#$gL>9H5%(dGCGCn<H):%U_4Xj5;=-T;]DJ(en6lR;#[?pPL$9-/)TiYSKL^Z\X.X;?Qc8Yj4T_];`1R$'1lfWXRmkpA`4dAk/
%]X!S/h6sf$RK=0"nn1ASU[A02*dg3Ie4`_d`#E)oSs^NFrb_Ai5\#N#bpH"g]H<1L.l)Y%VWRYU:Z2A$>!H0uVV_fF!&*JbI>Qa_
%Vm!LO2j?h/E(W_1>Z8UN[d4(I8B6Wlco;'+/hAk=W2TD-s,KgJRS8'_joJiB;NQTR.\1N`S/$Y_GEW6e4;K?oD9i;?18->1+Bo#f
%9+cdm#&,^LSPs$9%a[qG1RT@0;6=uL94Er_$PZRIj'6fX*gfCfiLcjtMg&LR46BrI7hU6L12Zl]jD-Zf<0je!RE_ZF;M?kE"r^bH
%d9Cb+,^n7Blc641G/S@@3R?uFn>h?7H92XDjTe^<2gc`lLV)i8_g4o77#+":SFToRl]83n'[*I$<r;]I6UG3]Hg#@.'X&QT77dcZ
%4G/e&ZA`4Li+]17@[LlR_3c?Eo!s=s$Nk^$<#E=Rgl1RNnaACudo;#cFUdX+otq[7^V>^E@Ct(UipEGB@3<b0-_BL+$1&>M+bKnj
%o:F;?g@d`L[GNt2\nsL&8;4oMSBQ5t353%-G5IYdN.N`:G17jVLJbP:D!%$$4<"IKV#.)3l4CY32of-)7a7Id;E6@):e]A&ILWn,
%pKQ:ofBmIN?4ZaC(:NhhH&GLpLtQBsZ<ChK&"a/o8%i+`ITF5<N]C:o80qfLXYjPj'/Z.@Nn^$m4s2l[M;u-!:@JkTVHfm6[W@%d
%q7>*nd-I)@9u++.!AUPbV!<X#6V/C*T!m1o$q1Sd<T+I0(umfS6qpF3Z.[5VLhD;FKE)pQP+:QOF*NXXUsFReMJ#%m>o^rNbgYJg
%FgiAdA$^gG!osI\W:8fB+$Z:82"JUjpNp2Y5M-nJd4B[6dhmX(bK,SCk*4r!4kehn[>!lh5ZHl+`_-@n_#!*:LBOJmX1jV@T`H0W
%qj<lVarF-OQ__E*gqSop$o0j8[HsZ78op'<l<'\-W/8`^L?lE1M52[B_sYPC'A:UqG.1>P#CA98n+.^hVX@`rK`5H#fumWpF4*+g
%*J+_Hf@.7ciGOBb2fM.=TFja3#l0uLBL^5YkjiIM/l#eH9^H?*7bs($*,Xh\\(dk9F$5nCB6,<XUFa2(EmIC?N`A=&E-".uY<U#E
%W&JcAi:]hC53gee,G'&1Z]G2V:T7qEN%t/'Ju=S],mPm$n!AWDea_k0NO]pN+0sW'%o:hA[o'gTC[c<Ke&W-0]3Q6AcaALU1^Tf<
%6WtY<i:,H\It5CW"?PrXnf62K4+e4;/`+&K/@0=\9cjNK^f!R*FtIJ#X3d"sT'\6"?c?VHr=TV-(_mG/qpT[=UZN(R[NQ\.F&e-V
%pDS36m[qI1^2A-6om3hIZg]$f!@ERVg#b>7MY('tdls?C?prR]66uT65E3]7?"PM'BRjr!j:oBLHetJ72+q7rJG[:lGqXksf<Dl,
%T;Be[h<m2dojA;BiH(R1iAOpFb73%&97a+a=KSq!EW&aR*]Ccao6Fd_P?;R5MW'P*&>0BKal=2EYMS5a,QX.s6C,ijR=f[=)V;-"
%0nK*TRN5j&;<&2U3l45:\).?('ppXlmIPe`ETP,??L18Le,I/U^\5cReMTWk#J'bM<S*`cK=+SW`aD(]69Gpo],!)Z!#)>]qs&0&
%XF(2-Q,IKG4g:i@!7k^'7dq6N!<XQX&Vgt?*-1r[I+2j_B]bJA!aXl<[-K92VNAlK?8ZO1U#Yo>'I/ts*p3Vr&+\R>q;0fQ2I=IL
%CKW`#6/ec/AKOu0JcccN8$%1cfHki3pcW/dLCkJ7nR`2)Eg]%dN;pnUTm5Td\Mdb+k_L)RGfl:p$j,g[W7*$bW?!13I!Cn_@2P-3
%k*OUpbpDG?"%,pr(no9r`3#*IMWFNC)mQDbA"+3"mSP1Za<6)#<=dNoC,,)bo?tliH!Z-.(>Tq[ol(S4F=1@&YD99V[]E.ebI?Y+
%Y8V51/ESA#_T6ig*icP3!i[9Rj[/N?"cO%K#u,!I*OE1?.\0BJn.kFd=`Bc/AUl;OWDsk#(nc(c0*u)PJRLJ-jHLp>ieg/S5`R=X
%E%s"m'^7gtD*lC7bJ(!cCL>rmhnngY'A7@$>`TJr!_+RAC2/(,q]082-Mu>^_^G?@S"94KKum6jGrWNK=88DVeFN*)3d@iX2Ws-i
%jl>#+,&q7o/4-G!cE&u;_r'06,k##@5CGWmdhgU<a5K4uo7.u7boB9j+YrM9oF"7kag(C%Cf"Q:+mJn+Eu%efRV</p/qL,JiEHlQ
%FZp%H[As!+@WZ-Bk-Y49p0km@R2&b1AS7N_`g&aNH"(m;@ZWiH#s1_19"cH[6ij91j[HsTh,fJ!?3J7f/;f"l\%(1,bhAjf>@R3L
%0`]K[<+ai;:6B\3\]n-n7Ze+?h*0?:S7O.ba!Q?`I&e:a._N8a8<YEPN"6'/Q?cZ7Jr"1FdONED5`%`j(T&mZB.!mZB#sCrWm"C>
%8tA;Ua(esM*?L[V2pe3gP7ea?1d`83@(&(Ti*!b*eD8lBBYBFU:0BCoL0u(7%:4>sR>4g0.SR)jW?jGP(q\bqBb.2g[HP6R;Oa+Y
%`r`qWb9'R^i2J+PT))B-5bB_99&7lo$D^bS+54[Q'Il)oaG<:sB5n`c4r7N(Z4A2FX%FE/..'>>I:C;QP.B%G:l4HOZeSF8%<hY(
%W[l6H@8B2:Af+BSo$`tW*7^c8;J]DEN1)7C@2IJQ_8GkkR;uX^M?Z\pRC""3n3$\)6K8t>_7@@9T>FSFZ!eoiP1>5rA@9;YmY/cs
%)@6W,%MG__BJWZL!9n\XJnW9,@4bl>6XSES?)I`)*ihr2J?L+"\#-c`49%Ss6lb?r6ctY5iG72m]=EERT9B2GT%>pN,96N4_QDk;
%;7),-nP\$e93c*4'L3k@L/bBc=*cH[8d.HpErd/K'Pe\q_T(mB45k.UYH"<Y?unH"!"2oi`Nk/s96O2[6.*ZnA&*k'_$TZV^3A\'
%YmaK#0$oEDNZN:K'YGK*-2Wson_Hg.@,MDB<$H-LTMEb1@&KDu`H.&DrsKneL^NP)*YEs%/)I&Cpji<-mTp'1T2K9]F<!!g,ZMo1
%q55\h^ZL!m.@Kt%m]cbe.I>7OS)0p/k1.<M-,srC.i-Df5YKtIB:S_O,:I:43l?\b@'a`pMo#X="Ee`Lnb<[YC-fb?K!9N!'#b$o
%J\`IDd:5MVDAIV1d2mn^4Of5'^W`_,GgpdjQOs?@=E2<;.DR0](WYPOC-WP]L%ff^n8[X5Bm^-t5o*3b%G1crRQ/DN$S*tT^OkS8
%j$3ZYKTKqW/kYp2h2XW/:=\*NV]+]+e88s6?Y1)G44j?elM+If;3c0+GVX9@,OZf?h<RCB1W\(bHqIl_IMg7o!]0]I%I(E:p-R^_
%)Eg_Npu#HLAjiDT)7++U;1I8S]1%>N&j,eb`<5(9o&13ODEUdB+DEl)OGe]5(h9>T$'93h'KW,;%)N-oP;`\aY6V$s#-'@LCDb(R
%WV6XrTaj@2j39P>E.e5;VmsT05<)7?YZaj(fc%*5+3*]=mH4(j$.ofAbI%s(/Xmc==RfB>WU@Pf%q,Vn/#^7iljaA/#Gk6h7u^;t
%'7po&<*+8'Z)fkT#j33NIg*'%8M;dJNr6n:LXRY)$>RM(?G*u$2<o)6k@cYmH_eFgBMo#9p,LGW):J^L42@>ul0)SnHQec,diO9%
%29"R8KAo[6'jab>c.$HPX[ER@VV0B;_"[NL7+(AC'es=RhZP!q<Q^Z"7OQL,LMuRdc:U%9,qMm[(h4dBX(8jCf+J&Wi`(d9m"QCZ
%Qe4/=8MA*e]BdWM3G6UnZ3S`IGCZ#+.0WRJJgo*79pT^s(*eoU_,_a7>Zk%(8=XGa5_[_nGOiR`G>D^sL.CBY0L#a3m*\TPV]p[;
%BZRJl+I;/f"#f)7)b*i_S'<f(198p%0"RAE1q5b`"pY;t?m,N]mkeK+Vp=b:gYC,?HeM%e9OhNeCD\5\9tufURu1=8`W4Okh-7<G
%NaX$GDW1X"$FPSrJBD;m0;IpCf5%e$qb+8TBgupUk\"jF,EP(cW=5u=FtA&XldFd9R7V-`Tjg6O]\m&HRd(G,U=S!'W&XpbM3SE2
%Z)K,q@l96#gffgVAA-=M?XQWlKqTN_'!R(]DVk6g&imTXBok+m&9[]WJBU&\.MVR,#;R9L0AX8o'oDR60S(HM%96%-#d`2_hZ@I:
%Yt*XMgiI#M5NgK]J68QZh&T-`Oa\SkPG7ecBB3=(?kj\MrPcY<OH_uskU\L**k58&o8N6L2-kENbbS\c*,14d<(Kk*/bU64FuQ<N
%hJQ^:HSuE]4FFE^/9P"q2m6ZlE3QmkY8Um7$NFNSHaUtS6&<aJ*&oYW'AnQ<GneLf3DcGLdc3<F.RKeoQ)!n1d`53T(<bcXR0.2.
%P;4H"\,f'UB[rq9+U/s[Bk^#JR?V\^`H'O[oad?Z-<EiI!oU69/7Ub"2%p=L`tYZVT2OEgN`te7YR$<sRWY(,c4mqe&OG@<RmuSX
%$Q=H7nU19Gf#e6DUEAi2e`qP@q*.Gs!n.s#2TH/U/k&$UJ4@8=AZ%7P_E)B62MXbQWZ?@p]RmdOgg]^*U`5cc3]0&LD5N3lTSN@f
%Y)Lg,_&!X'a?#35aOGtI>)Wh2r:??F)QHQV0r*uU7B5RSX>@FWDF>UpfNk>N3jL/3C?5_h527CG6f/N=6't9Jn>hH7`FA4WW<#fr
%d77Qp$iQ5:qP]_l$p4iCYk%mYHoNpAk=RP;"(^)k@A%/r(3Q+7j:&d0]?`!6@.Jda;.fP#mcE6<alcnX3"ui-XCjqD,8:e]/4a%=
%h(G[FdJTd$Tod?IMM]I:3D7V?<ICiW/SP>88h.h?j*RUW5jb"TirOL*[,Y1^.p,8<Mm!ho1\OTE.-`(0m%Bp%_(?0sWKGHP=H.)8
%aT![@[UUqBZGN"r,IAWn"Y?'l>PT1-^n`i"^tt?HG'lop;uBh);hP5b'*E]VGF_KQW5"u*V\.:B`H2IRSi]t!2-%"jb6k;DmbG3O
%H`2]F)k_8pMbQsEKF+M<=Ipq606_.jW_!Mt*JDjaA3c@!>4(sL\<_QQH=[iDRUL$9P_!F.9<E@k6sG4-q65(ceP[>aWJ#\Bgb5Me
%>cKcX343\?BiYMDEe?gH@5S1gg$(Ya2l>Je<:r4&TomB#nX']J.0c*?R>Xk<O&CLMc[r'g"1@Y4-gGPW>59ab"DlXo&O:0@Y)>Bq
%!5'0OKK7(Y+YTn5#-M2ma#H/McjakOC/)MJ95FhtQ\.V:!4,$MA""P>/&$U\6jrL6R1O^``j#PF)/IIMUnS34>,g0S<SQHm"M:%q
%$JH.,0^JY9C)'ogPedW"#UJk]f'=<fT[4M6U[RBhH13.FD5HSjW2IE1iHINch*:%Oqu%W:rTU5p]`$sRb@129T7?^TgOK%\VuM);
%p6QkMpP2!5oY5<Or:J#oJhl<PIujX%iX`f:rU^'el'Jk4rqrC<qEJ*OO4HPjn]0Pedm*d"]Di*\VW;F~>
%AI9_PrivateDataEnd
